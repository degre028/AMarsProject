aamarsproject.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.aamarsproject;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.0\";\nvar $strongName = '90093FE37B4EAAF5E268DEA0C5186481';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, P0_longLit = {l:0, m:0, h:0}, P3e8_longLit = {l:1000, m:0, h:0}, P249f0_longLit = {l:150000, m:0, h:0}, P7fffffffffffffff_longLit = {l:4194303, m:4194303, h:524287}, seedTable = {}, Q$Object = 0, Q$String = 1, Q$FlashSound = 2, Q$Sound$LoadState = 3, Q$SoundController$MimeTypeSupport = 4, Q$SoundType = 5, Q$AnimationScheduler$AnimationHandle = 6, Q$AnimationSchedulerImplTimer$AnimationHandleImpl = 7, Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1 = 8, Q$JavaScriptException = 9, Q$Style$BorderStyle = 10, Q$Style$Display = 11, Q$Style$HasCssName = 12, Q$Style$Overflow = 13, Q$Style$Position = 14, Q$Style$TextAlign = 15, Q$Style$Unit = 16, Q$ChangeHandler = 17, Q$ClickHandler = 18, Q$DomEvent$Type = 19, Q$EndedHandler = 20, Q$LoadHandler = 21, Q$TouchCancelHandler = 22, Q$TouchEndHandler = 23, Q$TouchMoveHandler = 24, Q$TouchStartHandler = 25, Q$AttachEvent$Handler = 26, Q$CloseHandler = 27, Q$HasAttachHandlers = 28, Q$ResizeHandler = 29, Q$ValueChangeHandler = 30, Q$EventHandler = 31, Q$HandlerRegistration = 32, Q$HasHandlers = 33, Q$UmbrellaException = 34, Q$RequestException = 35, Q$HasDirection$Direction = 36, Q$JSONArray = 37, Q$JSONException = 38, Q$JSONNumber = 39, Q$JSONObject = 40, Q$JSONString = 41, Q$LongLibBase$LongEmul = 42, Q$SafeUri = 43, Q$SafeUriString = 44, Q$Point = 45, Q$TouchScroller$4 = 46, Q$TouchScroller$5 = 47, Q$TouchScroller$TemporalPoint = 48, Q$Event$NativePreviewHandler = 49, Q$EventListener = 50, Q$Button = 51, Q$HasVisibility = 52, Q$HasWidgets = 53, Q$IsWidget = 54, Q$RootPanel = 55, Q$UIObject = 56, Q$ValueBoxBase$TextAlignment = 57, Q$Widget = 58, Q$SimpleEventBus$Command = 59, Q$UmbrellaException_0 = 60, Q$Serializable = 61, Q$Boolean = 62, Q$CharSequence = 63, Q$Comparable = 64, Q$Double = 65, Q$Enum = 66, Q$Exception = 67, Q$Integer = 68, Q$Number = 69, Q$NumberFormatException = 70, Q$StackTraceElement = 71, Q$Throwable = 72, Q$List = 73, Q$Map = 74, Q$Map$Entry = 75, Q$NoSuchElementException = 76, Q$RandomAccess = 77, Q$Set = 78, Q$MarsModule = 79, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction $clinit_AbstractSound(){\n  $clinit_AbstractSound = nullMethod;\n  INITIAL_LOAD_STATE = ($clinit_Sound$LoadState() , LOAD_STATE_UNINITIALIZED);\n}\n\nfunction $setLoadState(this$static, loadState){\n  if (loadState != this$static.loadState) {\n    this$static.loadState = loadState;\n    loadState != INITIAL_LOAD_STATE && $fireOnSoundLoadStateChange(this$static.soundHandlerCollection, this$static);\n  }\n}\n\nfunction AbstractSound_0(url_0){\n  $clinit_AbstractSound();\n  this.soundHandlerCollection = new SoundHandlerCollection_0;\n  this.loadState = INITIAL_LOAD_STATE;\n  this.mimeType = 'audio/wav; codecs=2';\n  this.url_0 = url_0;\n  this.streaming = false;\n  this.crossOrigin = false;\n}\n\ndefineSeed(3, 1, {});\n_.toString$ = function toString_1(){\n  return this.getSoundType() + '(\"' + this.mimeType + '\", \"' + this.url_0 + '\", ' + (this.streaming?'streaming':'not streaming') + ', ' + (this.crossOrigin?'cross origin':'same origin') + ')';\n}\n;\n_.crossOrigin = false;\n_.streaming = false;\nvar INITIAL_LOAD_STATE;\nfunction $clinit_FlashSound(){\n  $clinit_FlashSound = nullMethod;\n  $clinit_AbstractSound();\n  soundList = new ArrayList_0;\n}\n\nfunction $playbackCompleted(this$static){\n  $fireOnPlaybackComplete(this$static.soundHandlerCollection, this$static);\n}\n\nfunction $registerSound(this$static){\n  if (!this$static.soundRegistered) {\n    $registerSound_0(this$static.voicesMovie, this$static);\n    this$static.soundRegistered = true;\n  }\n}\n\nfunction $soundLoaded(this$static){\n  $setLoadState(this$static, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY));\n  this$static.volume_0 != 100 && $setVolume(this$static.voicesMovie, this$static.soundNumber, this$static.volume_0);\n}\n\nfunction FlashSound_0(url_0, voicesMovie){\n  $clinit_FlashSound();\n  AbstractSound_0.call(this, url_0);\n  this.soundRegistered = false;\n  this.volume_0 = 100;\n  this.voicesMovie = voicesMovie;\n  this.soundNumber = soundList.size_0;\n  $add(soundList, this);\n  $registerSound(this);\n}\n\ndefineSeed(4, 3, makeCastMap([Q$FlashSound]), FlashSound_0);\n_.getSoundType = function getSoundType(){\n  return $clinit_SoundType() , FLASH;\n}\n;\n_.setVolume_0 = function setVolume(volume){\n  this.volume_0 = volume;\n  this.loadState == ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY) && $setVolume(this.voicesMovie, this.soundNumber, volume);\n}\n;\n_.soundNumber = 0;\n_.soundRegistered = false;\n_.volume_0 = 0;\nvar soundList;\nfunction FlashSound$1_0(val$index){\n  this.val$index = val$index;\n}\n\ndefineSeed(5, 1, {}, FlashSound$1_0);\n_.execute = function execute(){\n  $playbackCompleted(dynamicCast($get(($clinit_FlashSound() , soundList), this.val$index), Q$FlashSound));\n}\n;\n_.val$index = 0;\nfunction FlashSound$2_0(val$index){\n  this.val$index = val$index;\n}\n\ndefineSeed(6, 1, {}, FlashSound$2_0);\n_.execute = function execute_0(){\n  $soundLoaded(dynamicCast($get(($clinit_FlashSound() , soundList), this.val$index), Q$FlashSound));\n}\n;\n_.val$index = 0;\nfunction Html5Sound_0(url_0){\n  var elem;\n  $clinit_AbstractSound();\n  var mimeTypeSupport;\n  AbstractSound_0.call(this, url_0);\n  this.endedHandler = new Html5Sound$1_0(this);\n  !!this.endedRegistration && $removeHandler(this.endedRegistration.real);\n  !!this.audio && $removeFromParent(this.audio);\n  this.audio = createIfSupported_0();\n  elem = $getMediaElement(this.audio);\n  this.endedRegistration = $addBitlessDomHandler(this.audio, this.endedHandler, ($clinit_EndedEvent() , $clinit_EndedEvent() , TYPE_1));\n  $add_1(($clinit_RootPanel() , get_1()), this.audio);\n  this.crossOrigin && $setAttribute(elem, 'crossOrigin', 'anonymous');\n  $setSrc(elem, this.url_0);\n  mimeTypeSupport = getMimeTypeSupport();\n  switch (mimeTypeSupport.ordinal) {\n    case 2:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_MAYBE_READY));\n      break;\n    case 0:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));\n      break;\n    case 3:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORT_NOT_KNOWN));\n      throw new IllegalArgumentException_1('unexpected MIME type support ' + mimeTypeSupport);\n    default:throw new IllegalArgumentException_1('unknown MIME type support ' + mimeTypeSupport);\n  }\n}\n\nfunction getMimeTypeSupport(){\n  var canPlayType;\n  $clinit_AbstractSound();\n  var support;\n  if (!isSupported()) {\n    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED;\n  }\n  support = (canPlayType = $getMediaElement(createIfSupported_0()).canPlayType('audio/wav; codecs=2') , canPlayType == 'no'?'':canPlayType);\n  if ($equals('probably', support)) {\n    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY;\n  }\n  if ($equals('maybe', support)) {\n    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY;\n  }\n  return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_UNKNOWN;\n}\n\ndefineSeed(7, 3, {}, Html5Sound_0);\n_.getSoundType = function getSoundType_0(){\n  return $clinit_SoundType() , HTML5;\n}\n;\n_.setVolume_0 = function setVolume_0(volume){\n  $setVolume_1($getMediaElement(this.audio), volume / 100);\n}\n;\nfunction Html5Sound$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(8, 1, makeCastMap([Q$EndedHandler, Q$EventHandler]), Html5Sound$1_0);\nfunction NativeSound_0(url_0, soundControllerElement){\n  var m_0;\n  $clinit_AbstractSound();\n  var mimeTypeSupport;\n  AbstractSound_0.call(this, url_0);\n  $preload(soundControllerElement, url_0);\n  this.element = $createElement(url_0);\n  mimeTypeSupport = (m_0 = navigator.mimeTypes['audio/wav; codecs=2'] , m_0 != null && m_0.enabledPlugin != null?($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY):($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED));\n  switch (mimeTypeSupport.ordinal) {\n    case 2:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_MAYBE_READY));\n      break;\n    case 0:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));\n      break;\n    case 3:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORT_NOT_KNOWN));\n      break;\n    case 1:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_NOT_READY));\n      break;\n    default:throw new IllegalArgumentException_1('unknown MIME type support ' + mimeTypeSupport);\n  }\n}\n\ndefineSeed(9, 3, {}, NativeSound_0);\n_.getSoundType = function getSoundType_1(){\n  return $clinit_SoundType() , NATIVE;\n}\n;\n_.setVolume_0 = function setVolume_1(volume){\n  $setVolume_0(this.element, volume);\n}\n;\nfunction Enum_0(name_0, ordinal){\n  this.name_0 = name_0;\n  this.ordinal = ordinal;\n}\n\ndefineSeed(11, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));\n_.equals$ = function equals_0(other){\n  return this === other;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_2(){\n  return this.name_0;\n}\n;\n_.ordinal = 0;\nfunction $clinit_Sound$LoadState(){\n  $clinit_Sound$LoadState = nullMethod;\n  LOAD_STATE_NOT_SUPPORTED = new Sound$LoadState_0('LOAD_STATE_NOT_SUPPORTED', 0);\n  LOAD_STATE_SUPPORT_NOT_KNOWN = new Sound$LoadState_0('LOAD_STATE_SUPPORT_NOT_KNOWN', 1);\n  LOAD_STATE_SUPPORTED_AND_READY = new Sound$LoadState_0('LOAD_STATE_SUPPORTED_AND_READY', 2);\n  LOAD_STATE_SUPPORTED_MAYBE_READY = new Sound$LoadState_0('LOAD_STATE_SUPPORTED_MAYBE_READY', 3);\n  LOAD_STATE_SUPPORTED_NOT_READY = new Sound$LoadState_0('LOAD_STATE_SUPPORTED_NOT_READY', 4);\n  LOAD_STATE_UNINITIALIZED = new Sound$LoadState_0('LOAD_STATE_UNINITIALIZED', 5);\n  $VALUES = initValues(_3Lcom_allen_1sauer_gwt_voices_client_Sound$LoadState_2_classLit, makeCastMap([Q$Serializable]), Q$Sound$LoadState, [LOAD_STATE_NOT_SUPPORTED, LOAD_STATE_SUPPORT_NOT_KNOWN, LOAD_STATE_SUPPORTED_AND_READY, LOAD_STATE_SUPPORTED_MAYBE_READY, LOAD_STATE_SUPPORTED_NOT_READY, LOAD_STATE_UNINITIALIZED]);\n}\n\nfunction Sound$LoadState_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_0(){\n  $clinit_Sound$LoadState();\n  return $VALUES;\n}\n\ndefineSeed(10, 11, makeCastMap([Q$Sound$LoadState, Q$Serializable, Q$Comparable, Q$Enum]), Sound$LoadState_0);\nvar $VALUES, LOAD_STATE_NOT_SUPPORTED, LOAD_STATE_SUPPORTED_AND_READY, LOAD_STATE_SUPPORTED_MAYBE_READY, LOAD_STATE_SUPPORTED_NOT_READY, LOAD_STATE_SUPPORT_NOT_KNOWN, LOAD_STATE_UNINITIALIZED;\nfunction $clinit_SoundController(){\n  $clinit_SoundController = nullMethod;\n  $wnd.$GWT_VOICES_VERSION = '3.3.2';\n}\n\nfunction $createSound(this$static, url_0){\n  var sound;\n  sound = $createSoundImpl(this$static, url_0);\n  sound.setVolume_0(100);\n  return sound;\n}\n\nfunction $createSoundImpl(this$static, url_0){\n  var c, c$array, c$index, c$max, sound;\n  sound = null;\n  for (c$array = this$static.preferredSoundTypes , c$index = 0 , c$max = c$array.length; c$index < c$max; ++c$index) {\n    c = c$array[c$index];\n    switch (c.ordinal) {\n      case 1:\n        sound = $createSoundImplHtml5(url_0);\n        break;\n      case 0:\n        sound = $createSoundImplFlash(this$static, url_0);\n        break;\n      case 2:\n        sound = $createSoundImplWebAudio(url_0);\n        break;\n      case 3:\n        sound = $createSoundImplWebAudio(url_0);\n    }\n    if (sound) {\n      return sound;\n    }\n  }\n  sound = $createSoundImplWebAudio(url_0);\n  if (sound) {\n    return sound;\n  }\n  sound = $createSoundImplFlash(this$static, url_0);\n  if (sound) {\n    return sound;\n  }\n  sound = $createSoundImplHtml5(url_0);\n  if (sound) {\n    return sound;\n  }\n  sound = new NativeSound_0(url_0, this$static.soundContainer);\n  return sound;\n}\n\nfunction $createSoundImplFlash(this$static, url_0){\n  var mimeTypeSupport, sound, vm;\n  if (url_0.indexOf('data:') == 0) {\n    return null;\n  }\n  if ($getMajorVersion() >= 9) {\n    vm = $getVoicesMovie(this$static);\n    mimeTypeSupport = $getMimeTypeSupport(vm);\n    if (mimeTypeSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY) || mimeTypeSupport == MIME_TYPE_SUPPORT_NOT_READY) {\n      sound = new FlashSound_0(url_0, vm);\n      return sound;\n    }\n  }\n  return null;\n}\n\nfunction $createSoundImplHtml5(url_0){\n  if (getMimeTypeSupport() == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)) {\n    return new Html5Sound_0(url_0);\n  }\n  return null;\n}\n\nfunction $createSoundImplWebAudio(url_0){\n  if (getMimeTypeSupport_0() == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)) {\n    return new WebAudioSound_0(url_0);\n  }\n  return null;\n}\n\nfunction $getVoicesMovie(this$static){\n  if (!this$static.voicesWrapper) {\n    this$static.voicesWrapper = new VoicesMovie_0('gwtVoices' + uniqueId++, this$static.gwtVoicesSwfBaseUrl);\n    appendChild(this$static.soundContainer, this$static.voicesWrapper.element);\n  }\n  return this$static.voicesWrapper;\n}\n\nfunction $setPreferredSoundTypes(this$static, soundTypes){\n  var s$index, s$max;\n  for (s$index = 0 , s$max = soundTypes.length; s$index < s$max; ++s$index) {\n  }\n  this$static.preferredSoundTypes = soundTypes;\n}\n\nfunction SoundController_0(){\n  var s, i, gwtVoices, paramsForName, style;\n  $clinit_SoundController();\n  this.soundContainer = ($clinit_DOM() , $doc.createElement('div'));\n  this.gwtVoicesSwfBaseUrl = (s = $doc.location.href , i = s.indexOf('#') , i != -1 && (s = s.substring(0, i)) , i = s.indexOf('?') , i != -1 && (s = s.substring(0, i)) , i = s.lastIndexOf('/') , i != -1 && (s = s.substring(0, i)) , s.length > 0?s + '/':'');\n  gwtVoices = (ensureListParameterMap() , paramsForName = dynamicCast(listParamMap.get_1('gwt-voices'), Q$List) , !paramsForName?null:dynamicCast(paramsForName.get_0(paramsForName.size_1() - 1), Q$String));\n  $equals(($clinit_SoundType() , FLASH).queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, makeCastMap([Q$Serializable]), Q$SoundType, [FLASH])):$equals(HTML5.queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, makeCastMap([Q$Serializable]), Q$SoundType, [HTML5])):$equals(WEB_AUDIO.queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, makeCastMap([Q$Serializable]), Q$SoundType, [WEB_AUDIO])):$equals(NATIVE.queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, makeCastMap([Q$Serializable]), Q$SoundType, [NATIVE])):$setPreferredSoundTypes(this, initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, makeCastMap([Q$Serializable]), Q$SoundType, [WEB_AUDIO, FLASH, HTML5]));\n  $appendChild(getBodyElement(), this.soundContainer);\n  style = this.soundContainer.style;\n  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(style, 'overflow', ($clinit_Style$Overflow() , 'hidden'));\n  style['left'] = -500 + ($clinit_Style$Unit() , 'px');\n  style['top'] = '-500px';\n  style['width'] = '0px';\n  style['height'] = '0px';\n}\n\ndefineSeed(12, 1, {}, SoundController_0);\nfunction $clinit_SoundController$MimeTypeSupport(){\n  $clinit_SoundController$MimeTypeSupport = nullMethod;\n  MIME_TYPE_NOT_SUPPORTED = new SoundController$MimeTypeSupport_0('MIME_TYPE_NOT_SUPPORTED', 0);\n  MIME_TYPE_SUPPORT_NOT_READY = new SoundController$MimeTypeSupport_0('MIME_TYPE_SUPPORT_NOT_READY', 1);\n  MIME_TYPE_SUPPORT_READY = new SoundController$MimeTypeSupport_0('MIME_TYPE_SUPPORT_READY', 2);\n  MIME_TYPE_SUPPORT_UNKNOWN = new SoundController$MimeTypeSupport_0('MIME_TYPE_SUPPORT_UNKNOWN', 3);\n  $VALUES_0 = initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundController$MimeTypeSupport_2_classLit, makeCastMap([Q$Serializable]), Q$SoundController$MimeTypeSupport, [MIME_TYPE_NOT_SUPPORTED, MIME_TYPE_SUPPORT_NOT_READY, MIME_TYPE_SUPPORT_READY, MIME_TYPE_SUPPORT_UNKNOWN]);\n}\n\nfunction SoundController$MimeTypeSupport_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_1(){\n  $clinit_SoundController$MimeTypeSupport();\n  return $VALUES_0;\n}\n\ndefineSeed(13, 11, makeCastMap([Q$SoundController$MimeTypeSupport, Q$Serializable, Q$Comparable, Q$Enum]), SoundController$MimeTypeSupport_0);\nvar $VALUES_0, MIME_TYPE_NOT_SUPPORTED, MIME_TYPE_SUPPORT_NOT_READY, MIME_TYPE_SUPPORT_READY, MIME_TYPE_SUPPORT_UNKNOWN;\nfunction $clinit_SoundType(){\n  $clinit_SoundType = nullMethod;\n  FLASH = new SoundType_0('FLASH', 0, 'flash');\n  HTML5 = new SoundType_0('HTML5', 1, 'html5');\n  NATIVE = new SoundType_0('NATIVE', 2, 'native');\n  WEB_AUDIO = new SoundType_0('WEB_AUDIO', 3, 'webaudio');\n  $VALUES_1 = initValues(_3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, makeCastMap([Q$Serializable]), Q$SoundType, [FLASH, HTML5, NATIVE, WEB_AUDIO]);\n}\n\nfunction SoundType_0(enum$name, enum$ordinal, queryParameterValue){\n  Enum_0.call(this, enum$name, enum$ordinal);\n  this.queryParameterValue = queryParameterValue;\n}\n\nfunction values_2(){\n  $clinit_SoundType();\n  return $VALUES_1;\n}\n\ndefineSeed(14, 11, makeCastMap([Q$SoundType, Q$Serializable, Q$Comparable, Q$Enum]), SoundType_0);\nvar $VALUES_1, FLASH, HTML5, NATIVE, WEB_AUDIO;\nfunction $clinit_WebAudioSound(){\n  $clinit_WebAudioSound = nullMethod;\n  $clinit_AbstractSound();\n  audioContext = createAudioContext();\n}\n\nfunction $createVoice(this$static, url_0){\n  var context = audioContext;\n  var request = new $wnd.XMLHttpRequest;\n  request.open('GET', url_0, true);\n  request.responseType = 'arraybuffer';\n  var self_0 = this$static;\n  request.onload = function(){\n    function onSuccess(decodedBuffer){\n      self_0.buffer = decodedBuffer;\n      self_0.soundLoaded_0();\n    }\n\n    function onFailure(){\n      self_0.soundLoadFailed();\n    }\n\n    context.decodeAudioData(request.response, onSuccess, onFailure);\n  }\n  ;\n  request.send();\n}\n\nfunction WebAudioSound_0(url_0){\n  $clinit_WebAudioSound();\n  var mimeTypeSupport;\n  AbstractSound_0.call(this, url_0);\n  try {\n    $createVoice(this, url_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$Throwable)) {\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));\n    }\n     else \n      throw unwrap($e0);\n  }\n  mimeTypeSupport = getMimeTypeSupport_0();\n  switch (mimeTypeSupport.ordinal) {\n    case 1:\n    case 2:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_NOT_READY));\n      break;\n    case 0:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));\n      break;\n    case 3:\n      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORT_NOT_KNOWN));\n      break;\n    default:throw new IllegalArgumentException_1('unknown MIME type support ' + mimeTypeSupport);\n  }\n}\n\nfunction createAudioContext(){\n  try {\n    return new AudioContext;\n  }\n   catch (ignore) {\n  }\n  return null;\n}\n\nfunction getMimeTypeSupport_0(){\n  $clinit_WebAudioSound();\n  if (!audioContext) {\n    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED;\n  }\n  return getMimeTypeSupport();\n}\n\ndefineSeed(15, 3, {}, WebAudioSound_0);\n_.getSoundType = function getSoundType_2(){\n  return $clinit_SoundType() , WEB_AUDIO;\n}\n;\n_.setVolume_0 = function setVolume_2(volume){\n}\n;\n_.soundLoadFailed = function soundLoadFailed(){\n  $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));\n}\n;\n_.soundLoaded_0 = function soundLoaded(){\n  $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY));\n}\n;\nvar audioContext;\nfunction EventObject_0(source){\n  this.source = source;\n}\n\ndefineSeed(17, 1, {});\nfunction PlaybackCompleteEvent_0(source){\n  EventObject_0.call(this, source);\n}\n\ndefineSeed(16, 17, {}, PlaybackCompleteEvent_0);\n_.toString$ = function toString_3(){\n  var sound;\n  sound = this.source;\n  return getSimpleName(Lcom_allen_1sauer_gwt_voices_client_handler_PlaybackCompleteEvent_2_classLit) + ': ' + sound;\n}\n;\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next_0();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append_0(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append_0(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next_0();\n    $append_0(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append_0(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(21, 1, {});\n_.add_0 = function add_0(o){\n  throw new UnsupportedOperationException_1('Add not supported on this collection');\n}\n;\n_.contains = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.isEmpty = function isEmpty(){\n  return this.size_1() == 0;\n}\n;\n_.remove = function remove_0(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  if (iter) {\n    iter.remove_2();\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n;\n_.toString$ = function toString_4(){\n  return $toString(this);\n}\n;\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(20, 21, makeCastMap([Q$List]));\n_.add_1 = function add_1(index_0, element){\n  throw new UnsupportedOperationException_1('Add not supported on this list');\n}\n;\n_.add_0 = function add_2(obj){\n  this.add_1(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_1(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = this.iterator();\n  iterOther = other.iterator();\n  while (iter.hasNext()) {\n    elem = iter.next_0();\n    elemOther = iterOther.next_0();\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_2(){\n  var iter, k, obj;\n  k = 1;\n  iter = this.iterator();\n  while (iter.hasNext()) {\n    obj = iter.next_0();\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator = function iterator_0(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return this.listIterator_0(0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\n_.remove_0 = function remove_1(index_0){\n  throw new UnsupportedOperationException_1('Remove not supported on this list');\n}\n;\nfunction $add(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $clear(this$static){\n  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);\n  this$static.size_0 = 0;\n}\n\nfunction $get(this$static, index_0){\n  checkIndex(index_0, this$static.size_0);\n  return this$static.array[index_0];\n}\n\nfunction $indexOf(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction $remove(this$static, index_0){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  splice(this$static.array, index_0, 1);\n  --this$static.size_0;\n  return previous;\n}\n\nfunction $remove_0(this$static, o){\n  var i;\n  i = $indexOf(this$static, o, 0);\n  if (i == -1) {\n    return false;\n  }\n  $remove(this$static, i);\n  return true;\n}\n\nfunction $set(this$static, index_0, o){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  setCheck(this$static.array, index_0, o);\n  return previous;\n}\n\nfunction $toArray(this$static, out){\n  var i;\n  out.length < this$static.size_0 && (out = createFrom(out, this$static.size_0));\n  for (i = 0; i < this$static.size_0; ++i) {\n    setCheck(out, i, this$static.array[i]);\n  }\n  out.length > this$static.size_0 && setCheck(out, this$static.size_0, null);\n  return out;\n}\n\nfunction ArrayList_0(){\n  this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);\n}\n\nfunction splice(array, index_0, deleteCount){\n  array.splice(index_0, deleteCount);\n}\n\nfunction splice_0(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\ndefineSeed(19, 20, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), ArrayList_0);\n_.add_1 = function add_3(index_0, o){\n  (index_0 < 0 || index_0 > this.size_0) && indexOutOfBounds(index_0, this.size_0);\n  splice_0(this.array, index_0, 0, o);\n  ++this.size_0;\n}\n;\n_.add_0 = function add_4(o){\n  return $add(this, o);\n}\n;\n_.contains = function contains_0(o){\n  return $indexOf(this, o, 0) != -1;\n}\n;\n_.get_0 = function get_0(index_0){\n  return $get(this, index_0);\n}\n;\n_.isEmpty = function isEmpty_0(){\n  return this.size_0 == 0;\n}\n;\n_.remove_0 = function remove_2(index_0){\n  return $remove(this, index_0);\n}\n;\n_.remove = function remove_3(o){\n  return $remove_0(this, o);\n}\n;\n_.size_1 = function size_1(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $fireOnPlaybackComplete(this$static, sender){\n  var handler$iterator;\n  new PlaybackCompleteEvent_0(sender);\n  for (handler$iterator = new AbstractList$IteratorImpl_0(this$static); handler$iterator.i < handler$iterator.this$0_0.size_1();) {\n    throwClassCastExceptionUnlessNull($next_3(handler$iterator));\n    null.nullMethod();\n  }\n}\n\nfunction $fireOnSoundLoadStateChange(this$static, sender){\n  var handler$iterator;\n  new SoundLoadStateChangeEvent_0(sender);\n  for (handler$iterator = new AbstractList$IteratorImpl_0(this$static); handler$iterator.i < handler$iterator.this$0_0.size_1();) {\n    throwClassCastExceptionUnlessNull($next_3(handler$iterator));\n    null.nullMethod();\n  }\n}\n\nfunction SoundHandlerCollection_0(){\n  ArrayList_0.call(this);\n}\n\ndefineSeed(18, 19, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), SoundHandlerCollection_0);\nfunction SoundLoadStateChangeEvent_0(source){\n  EventObject_0.call(this, source);\n  this.loadState = source.loadState;\n}\n\ndefineSeed(22, 17, {}, SoundLoadStateChangeEvent_0);\n_.toString$ = function toString_5(){\n  var sound;\n  sound = this.source;\n  return getSimpleName(Lcom_allen_1sauer_gwt_voices_client_handler_SoundLoadStateChangeEvent_2_classLit) + ': ' + sound + '; ' + this.loadState.name_0;\n}\n;\ndefineSeed(23, 1, {});\nfunction $clinit_VoicesMovie(){\n  $clinit_VoicesMovie = nullMethod;\n  FLASH_SUPPORTED_MIME_TYPES = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['audio/mpeg', 'audio/mpeg; codecs=MP3']);\n}\n\nfunction $callCreateSound(this$static, id_0, soundURL, checkPolicyFile){\n  var elem = this$static.element;\n  elem.createSound(id_0, soundURL, checkPolicyFile);\n}\n\nfunction $getMimeTypeSupport(this$static){\n  switch (this$static.flashSupport.ordinal) {\n    case 2:\n    case 1:\n      return contains_1(FLASH_SUPPORTED_MIME_TYPES)?($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY):($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED);\n    case 3:\n    case 0:\n      return this$static.flashSupport;\n    default:throw new RuntimeException_1('Unhandled flash support value ' + this$static.flashSupport);\n  }\n}\n\nfunction $installFlashCallbackHooks(this$static, id_1){\n  $doc.VoicesMovie === undefined && ($doc.VoicesMovie = {});\n  var self_0 = this$static;\n  $doc.VoicesMovie[id_1] = {};\n  $doc.VoicesMovie[id_1].ready = function(){\n    self_0.movieReady();\n  }\n  ;\n  $doc.VoicesMovie[id_1].soundLoaded = function(id_0){\n    $clinit_FlashSound();\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new FlashSound$2_0(id_0));\n    return true;\n  }\n  ;\n  $doc.VoicesMovie[id_1].playbackCompleted = function(id_0){\n    $clinit_FlashSound();\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new FlashSound$1_0(id_0));\n  }\n  ;\n  $doc.VoicesMovie[id_1].log = function(text_0){\n    self_0.debug('FLASH[' + id_1 + ']: ' + text_0);\n  }\n  ;\n}\n\nfunction $movieUnsupported(this$static){\n  var flashSound, flashSound$iterator;\n  for (flashSound$iterator = new AbstractList$IteratorImpl_0(this$static.unitializedSoundList); flashSound$iterator.i < flashSound$iterator.this$0_0.size_1();) {\n    flashSound = dynamicCast($next_3(flashSound$iterator), Q$FlashSound);\n    $setLoadState(flashSound, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));\n  }\n}\n\n",
"function $registerSound_0(this$static, flashSound){\n  this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)?$callCreateSound(this$static, flashSound.soundNumber, flashSound.url_0, flashSound.crossOrigin):$add(this$static.unitializedSoundList, flashSound);\n}\n\nfunction $setVolume(this$static, id_0, volume){\n  var elem;\n  this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY) && (elem = this$static.element , elem.setVolume(id_0, volume / 100) , undefined);\n}\n\nfunction VoicesMovie_0(id_0, gwtVoicesSwfBaseUrl){\n  var elem, param;\n  $clinit_VoicesMovie();\n  this.element = (elem = $doc.createElement('object') , elem.setAttribute('id', id_0) , elem.setAttribute('type', 'application/x-shockwave-flash') , elem.setAttribute('data', gwtVoicesSwfBaseUrl + 'gwt-voices.swf') , param = $doc.createElement('param') , param.setAttribute('name', 'FlashVars') , param.setAttribute('value', 'id=' + id_0) , elem.appendChild(param) , elem);\n  this.flashSupport = ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_UNKNOWN);\n  this.unitializedSoundList = new ArrayList_0;\n  $installFlashCallbackHooks(this, id_0);\n  if ($getMajorVersion() >= 9) {\n    this.flashSupport = MIME_TYPE_SUPPORT_NOT_READY;\n  }\n   else {\n    this.flashSupport = MIME_TYPE_NOT_SUPPORTED;\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new VoicesMovie$1_0(this));\n  }\n}\n\ndefineSeed(24, 23, {}, VoicesMovie_0);\n_.debug = function debug(text_0){\n}\n;\n_.movieReady = function movieReady(){\n  var flashSound, iterator;\n  this.flashSupport = ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY);\n  for (iterator = new AbstractList$IteratorImpl_0(this.unitializedSoundList); iterator.i < iterator.this$0_0.size_1();) {\n    flashSound = dynamicCast($next_3(iterator), Q$FlashSound);\n    $callCreateSound(this, flashSound.soundNumber, flashSound.url_0, flashSound.crossOrigin);\n    $remove_10(iterator);\n  }\n}\n;\nvar FLASH_SUPPORTED_MIME_TYPES;\nfunction VoicesMovie$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(25, 1, {}, VoicesMovie$1_0);\n_.execute = function execute_1(){\n  $movieUnsupported(this.this$0);\n}\n;\nfunction $getMajorVersion(){\n  var versionString, rawVersionString, p;\n  versionString = (rawVersionString = (p = navigator.plugins['Shockwave Flash'] , p == null?null:p.description) , rawVersionString == null?null:$replaceFirst($replaceAll(rawVersionString, '\\\\D*(\\\\d+)', '$1,'), ',$', ''));\n  return versionString == null?0:__parseAndValidateInt($replaceFirst(versionString, ',.*', ''));\n}\n\nfunction $preload(soundControllerElement, url_0){\n  var elem;\n  if ($mimeTypeSupportsVolume('audio/wav; codecs=2')) {\n    elem = $createElement(url_0);\n    $setVolume_0(elem, 0);\n    soundControllerElement.appendChild(elem);\n  }\n}\n\nfunction $createElement(url_0){\n  var elem = $doc.createElement('object');\n  elem.setAttribute('data', url_0);\n  elem.setAttribute('autostart', 'true');\n  return elem;\n}\n\nfunction $setVolume_0(elem, volume){\n  elem.setAttribute('volume', '' + volume);\n}\n\nfunction $mimeTypeSupportsVolume(mimeType){\n  if (mimeType = 'audio/x-midi') {\n    return false;\n  }\n  var m_0 = navigator.mimeTypes[mimeType];\n  if (m_0 != null && m_0.enabledPlugin != null && m_0.enabledPlugin.filename.search(/wmp.so$/) != -1) {\n    return false;\n  }\n  return true;\n}\n\nvar uniqueId = 1000;\nfunction contains_1(arr){\n  var element, element$index, element$max;\n  for (element$index = 0 , element$max = arr.length; element$index < element$max; ++element$index) {\n    element = arr[element$index];\n    if ($equals(element, 'audio/wav; codecs=2')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getSimpleName(clazz){\n  var name_0;\n  name_0 = clazz.typeName;\n  return $substring(name_0, $lastIndexOf(name_0, fromCodePoint(46)) + 1);\n}\n\nfunction $cancel(this$static){\n  if (!this$static.isRunning) {\n    return;\n  }\n  this$static.wasStarted = this$static.isStarted;\n  this$static.element = null;\n  this$static.isRunning = false;\n  this$static.isStarted = false;\n  if (this$static.requestHandle) {\n    this$static.requestHandle.cancel();\n    this$static.requestHandle = null;\n  }\n  this$static.wasStarted && $onComplete(this$static);\n}\n\nfunction $update(this$static, curTime){\n  var finished, progress;\n  finished = curTime >= -2;\n  if (this$static.isStarted && !finished) {\n    progress = -(curTime - -1);\n    $onUpdate(this$static, (1 + Math.cos(3.141592653589793 + progress * 3.141592653589793)) / 2);\n    return this$static.isRunning;\n  }\n  if (!this$static.isStarted && curTime >= -1) {\n    this$static.isStarted = true;\n    this$static.offsetHeight = $getOffsetHeight(this$static.curPanel);\n    this$static.offsetWidth = $getOffsetWidth(this$static.curPanel);\n    $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'hidden');\n    $onUpdate(this$static, (1 + Math.cos(3.141592653589793)) / 2);\n    if (!this$static.isRunning) {\n      return false;\n    }\n  }\n  if (finished) {\n    this$static.isRunning = false;\n    this$static.isStarted = false;\n    $onComplete(this$static);\n    return false;\n  }\n  return true;\n}\n\nfunction Animation_0(scheduler){\n  this.callback = new Animation$1_0(this);\n  this.scheduler = scheduler;\n}\n\ndefineSeed(33, 1, {});\n_.isRunning = false;\n_.isStarted = false;\n_.wasStarted = false;\nfunction $execute(this$static, timestamp){\n  $update(this$static.this$0, timestamp)?(this$static.this$0.requestHandle = this$static.this$0.scheduler.requestAnimationFrame(this$static.this$0.callback, this$static.this$0.element)):(this$static.this$0.requestHandle = null);\n}\n\nfunction Animation$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(34, 1, {}, Animation$1_0);\n_.execute_0 = function execute_2(timestamp){\n  $execute(this, timestamp);\n}\n;\ndefineSeed(35, 1, {});\ndefineSeed(36, 1, makeCastMap([Q$AnimationScheduler$AnimationHandle]));\nfunction $clinit_AnimationSchedulerImpl(){\n  $clinit_AnimationSchedulerImpl = nullMethod;\n  var impl;\n  impl = new AnimationSchedulerImplMozilla_0;\n  !!impl && (impl.isNativelySupported() || (impl = new AnimationSchedulerImplTimer_0));\n  INSTANCE = impl;\n}\n\ndefineSeed(37, 35, {});\nvar INSTANCE;\nfunction $requestAnimationFrameImpl(callback, handle){\n  var wrapper = $entry(function(){\n    if (!handle.canceled) {\n      var now_0 = currentTimeMillis();\n      callback.execute_0(now_0);\n    }\n  }\n  );\n  $wnd.mozRequestAnimationFrame(wrapper);\n}\n\nfunction AnimationSchedulerImplMozilla_0(){\n}\n\ndefineSeed(38, 37, {}, AnimationSchedulerImplMozilla_0);\n_.isNativelySupported = function isNativelySupported(){\n  return !!$wnd.mozRequestAnimationFrame;\n}\n;\n_.requestAnimationFrame = function requestAnimationFrame(callback, element){\n  var handle;\n  handle = new AnimationSchedulerImplMozilla$AnimationHandleImpl_0;\n  $requestAnimationFrameImpl(callback, handle);\n  return handle;\n}\n;\nfunction AnimationSchedulerImplMozilla$AnimationHandleImpl_0(){\n}\n\ndefineSeed(39, 36, makeCastMap([Q$AnimationScheduler$AnimationHandle]), AnimationSchedulerImplMozilla$AnimationHandleImpl_0);\n_.cancel = function cancel(){\n  this.canceled = true;\n}\n;\n_.canceled = false;\nfunction $cancelAnimationFrame(this$static, requestId){\n  $remove_0(this$static.animationRequests, requestId);\n  this$static.animationRequests.size_0 == 0 && $cancel_0(this$static.timer);\n}\n\nfunction $updateAnimations(this$static){\n  var curAnimations, duration, requestId, requestId$index, requestId$max;\n  curAnimations = initDim(_3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, makeCastMap([Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1, Q$Serializable]), Q$AnimationSchedulerImplTimer$AnimationHandleImpl, this$static.animationRequests.size_0, 0);\n  curAnimations = dynamicCast($toArray(this$static.animationRequests, curAnimations), Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1);\n  duration = new Duration_0;\n  for (requestId$index = 0 , requestId$max = curAnimations.length; requestId$index < requestId$max; ++requestId$index) {\n    requestId = curAnimations[requestId$index];\n    $remove_0(this$static.animationRequests, requestId);\n    $execute(requestId.callback, duration.start_0);\n  }\n  this$static.animationRequests.size_0 > 0 && $schedule(this$static.timer, max_0(16 - (currentTimeMillis() - duration.start_0)));\n}\n\nfunction AnimationSchedulerImplTimer_0(){\n  this.animationRequests = new ArrayList_0;\n  this.timer = new AnimationSchedulerImplTimer$1_0(this);\n}\n\ndefineSeed(40, 37, {}, AnimationSchedulerImplTimer_0);\n_.isNativelySupported = function isNativelySupported_0(){\n  return true;\n}\n;\n_.requestAnimationFrame = function requestAnimationFrame_0(callback, element){\n  var requestId;\n  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl_0(this, callback);\n  $add(this.animationRequests, requestId);\n  this.animationRequests.size_0 == 1 && $schedule(this.timer, 16);\n  return requestId;\n}\n;\nfunction $cancel_0(this$static){\n  if (!this$static.timerId) {\n    return;\n  }\n  ++this$static.cancelCounter;\n  this$static.isRepeating?clearInterval0(this$static.timerId.value_0):clearTimeout0(this$static.timerId.value_0);\n  this$static.timerId = null;\n}\n\nfunction $schedule(this$static, delayMillis){\n  if (delayMillis < 0) {\n    throw new IllegalArgumentException_1('must be non-negative');\n  }\n  !!this$static.timerId && $cancel_0(this$static);\n  this$static.isRepeating = false;\n  this$static.timerId = valueOf(setTimeout0(createCallback(this$static, this$static.cancelCounter), delayMillis, null));\n}\n\nfunction $scheduleRepeating(this$static, periodMillis){\n  if (periodMillis <= 0) {\n    throw new IllegalArgumentException_1('must be positive');\n  }\n  !!this$static.timerId && $cancel_0(this$static);\n  this$static.isRepeating = true;\n  this$static.timerId = valueOf(setInterval0(createCallback(this$static, this$static.cancelCounter), periodMillis));\n}\n\nfunction Timer_0(){\n}\n\nfunction createCallback(timer, cancelCounter){\n  return $entry(function(){\n    timer.fire(cancelCounter);\n  }\n  );\n}\n\ndefineSeed(42, 1, {});\n_.fire = function fire(scheduleCancelCounter){\n  if (scheduleCancelCounter != this.cancelCounter) {\n    return;\n  }\n  this.isRepeating || (this.timerId = null);\n  this.run();\n}\n;\n_.cancelCounter = 0;\n_.isRepeating = false;\n_.timerId = null;\nfunction AnimationSchedulerImplTimer$1_0(this$0){\n  this.this$0 = this$0;\n  Timer_0.call(this);\n}\n\ndefineSeed(41, 42, {}, AnimationSchedulerImplTimer$1_0);\n_.run = function run(){\n  $updateAnimations(this.this$0);\n}\n;\nfunction AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$0, callback){\n  this.this$0 = this$0;\n  this.callback = callback;\n}\n\ndefineSeed(43, 36, makeCastMap([Q$AnimationScheduler$AnimationHandle, Q$AnimationSchedulerImplTimer$AnimationHandleImpl]), AnimationSchedulerImplTimer$AnimationHandleImpl_0);\n_.cancel = function cancel_0(){\n  $cancelAnimationFrame(this.this$0, this);\n}\n;\nfunction $getElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $replaceNode(node, newNode){\n  var p = node.parentNode;\n  if (!p) {\n    return;\n  }\n  p.insertBefore(newNode, node);\n  p.removeChild(node);\n}\n\nfunction $resolvePotentialElement(){\n  throw new UnsupportedOperationException_0;\n}\n\nfunction $setElement(this$static, elem){\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n}\n\nfunction $setElement_0(this$static, elem){\n  this$static.element = elem;\n}\n\nfunction $setHeight(this$static, height){\n  ($clinit_DOM() , this$static.element).style['height'] = height;\n}\n\nfunction $setPixelSize(this$static){\n  ($clinit_DOM() , this$static.element).style['width'] = '2872px';\n  this$static.element.style['height'] = '1436px';\n}\n\nfunction $setWidth(this$static, width_0){\n  ($clinit_DOM() , this$static.element).style['width'] = width_0;\n}\n\nfunction $sinkBitlessEvent(this$static, eventTypeName){\n  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n  visible?elem.removeAttribute('aria-hidden'):elem.setAttribute('aria-hidden', 'true');\n}\n\ndefineSeed(47, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.resolvePotentialElement = function resolvePotentialElement(){\n  return $resolvePotentialElement();\n}\n;\n_.setHeight = function setHeight(height){\n  $setHeight(this, height);\n}\n;\n_.setWidth = function setWidth(width_0){\n  $setWidth(this, width_0);\n}\n;\n_.toString$ = function toString_6(){\n  if (!this.element) {\n    return '(null handle)';\n  }\n  return $toString_1(($clinit_DOM() , this.element));\n}\n;\nfunction $addBitlessDomHandler(this$static, handler, type_0){\n  $sinkBitlessEvent(this$static, type_0.name_0);\n  return $addHandler_0(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent(this$static, type_0.name_0):this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), typeInt | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= typeInt);\n  return $addHandler_0(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $addHandler(this$static, handler, type_0){\n  return $addHandler_0(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent_0(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener_0(this$static.element, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && (this$static.eventsToSink == -1?sinkEvents(this$static.element, bitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= bitsToAdd));\n  this$static.doAttachChildren();\n  this$static.onLoad();\n  fire_0(this$static, true);\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = $eventGetRelatedTarget(event_0);\n      if (!!related && $isOrHasChild(this$static.element, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.element);\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.onUnload();\n    fire_0(this$static, false);\n  }\n   finally {\n    try {\n      this$static.doDetachChildren();\n    }\n     finally {\n      $clinit_DOM();\n      setEventListener_0(this$static.element, null);\n      this$static.attached = false;\n    }\n  }\n}\n\nfunction $removeFromParent(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {\n    dynamicCast(this$static.parent_0, Q$HasWidgets).remove_1(this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_1(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $replaceElement(this$static, elem){\n  this$static.attached && ($clinit_DOM() , setEventListener_0(this$static.element, null));\n  !!this$static.element && $replaceNode(this$static.element, elem);\n  this$static.element = elem;\n  this$static.attached && ($clinit_DOM() , setEventListener_0(this$static.element, this$static));\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.isAttached() && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.isAttached() && this$static.onAttach();\n  }\n}\n\nfunction $sinkEvents(this$static, eventBitsToAdd){\n  this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), eventBitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n}\n\ndefineSeed(46, 47, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\n_.isAttached = function isAttached(){\n  return this.attached;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.onUnload = function onUnload(){\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\nfunction $setEnabled(this$static, enabled){\n  ($clinit_DOM() , this$static.element)['disabled'] = !enabled;\n}\n\nfunction FocusWidget_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(45, 46, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onAttach = function onAttach_0(){\n  var tabIndex;\n  $onAttach(this);\n  tabIndex = ($clinit_DOM() , this.element).tabIndex;\n  -1 == tabIndex && (this.element.tabIndex = 0 , undefined);\n}\n;\n_.setEnabled = function setEnabled(enabled){\n  $setEnabled(this, enabled);\n}\n;\nfunction $getCanvasElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $setCoordinateSpaceHeight(this$static){\n  ($clinit_DOM() , this$static.element).height = 1436;\n}\n\nfunction $setCoordinateSpaceWidth(this$static){\n  ($clinit_DOM() , this$static.element).width = 2872;\n}\n\nfunction Canvas_1(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n}\n\nfunction createIfSupported(){\n  var element;\n  !detector && (detector = new Canvas$CanvasElementSupportDetectedMaybe_0);\n  element = $doc.createElement('canvas');\n  if (!element.getContext) {\n    return null;\n  }\n  return new Canvas_1(element);\n}\n\ndefineSeed(44, 45, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Canvas_1);\nvar detector;\ndefineSeed(49, 1, {});\nfunction Canvas$CanvasElementSupportDetectedMaybe_0(){\n}\n\ndefineSeed(48, 49, {}, Canvas$CanvasElementSupportDetectedMaybe_0);\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction $beginPath(this$static){\n  this$static.beginPath();\n}\n\nfunction $closePath(this$static){\n  this$static.closePath();\n}\n\nfunction $drawImage(this$static, image, dx, dy, dw, dh){\n  this$static.drawImage(image, dx, dy, dw, dh);\n}\n\nfunction $fillRect(this$static, x_0, y_0, w, h_0){\n  this$static.fillRect(x_0, y_0, w, h_0);\n}\n\nfunction $lineTo(this$static, x_0, y_0){\n  this$static.lineTo(x_0, y_0);\n}\n\nfunction $moveTo(this$static, x_0, y_0){\n  this$static.moveTo(x_0, y_0);\n}\n\nfunction $setFillStyleWeb(this$static, fillStyle){\n  this$static.fillStyle = fillStyle;\n}\n\nfunction $stroke(this$static){\n  this$static.stroke();\n}\n\nfunction $elapsedMillis(this$static){\n  return currentTimeMillis() - this$static.start_0;\n}\n\nfunction Duration_0(){\n  this.start_0 = currentTimeMillis();\n}\n\nfunction currentTimeMillis(){\n  return (new Date).getTime();\n}\n\ndefineSeed(54, 1, {}, Duration_0);\n_.start_0 = 0;\nfunction $getStackTrace(this$static){\n  if (this$static.stackTrace == null) {\n    return initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, 0, 0);\n  }\n  return this$static.stackTrace;\n}\n\nfunction $initCause(this$static, cause){\n  if (this$static.cause) {\n    throw new IllegalStateException_1(\"Can't overwrite cause\");\n  }\n  if (cause == this$static) {\n    throw new IllegalArgumentException_1('Self-causation not permitted');\n  }\n  this$static.cause = cause;\n  return this$static;\n}\n\nfunction $printStackTrace(this$static){\n  var element$array, element$index, element$max, t;\n  for (t = this$static; t; t = t.cause) {\n    for (element$array = $getStackTrace(t) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {\n    }\n  }\n}\n\nfunction $setStackTrace(this$static, stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n  this$static.stackTrace = copy;\n}\n\nfunction $toString_0(this$static){\n  var className, msg;\n  className = this$static.___clazz$.typeName;\n  msg = this$static.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n\ndefineSeed(59, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_7(){\n  return $toString_0(this);\n}\n;\nfunction Exception_0(message){\n  this.detailMessage = message;\n  $fillInStackTrace(this);\n}\n\ndefineSeed(58, 59, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));\nfunction RuntimeException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction RuntimeException_1(message){\n  Exception_0.call(this, message);\n}\n\nfunction RuntimeException_2(message, cause){\n  this.cause = cause;\n  this.detailMessage = message;\n  $fillInStackTrace(this);\n}\n\ndefineSeed(57, 58, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception, maybeJsoInvocation;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':(maybeJsoInvocation = exception , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n    this$static.description_0 = this$static.description_0 + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?$getProperties(dynamicCastJso(exception)):'') + this$static.description_0;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description_0 = '';\n  this.e = e;\n  this.description_0 = '';\n  $createStackTrace(this);\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(56, 57, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Exception, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  return $ensureInit(this) , this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction $push(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction $clinit_JsonUtils(){\n  $clinit_JsonUtils = nullMethod;\n  escapeTable = initEscapeTable();\n  hasJsonParse = typeof JSON == 'object' && typeof JSON.parse == 'function';\n}\n\nfunction escapeChar(c){\n  var lookedUp = escapeTable[c.charCodeAt(0)];\n  return lookedUp == null?c:lookedUp;\n}\n\nfunction escapeJsonForEval(toEscape){\n  $clinit_JsonUtils();\n  var s = toEscape.replace(/[\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb]/g, function(x_0){\n    return escapeChar(x_0);\n  }\n  );\n  return s;\n}\n\nfunction escapeValue(toEscape){\n  $clinit_JsonUtils();\n  var s = toEscape.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g, function(x_0){\n    return escapeChar(x_0);\n  }\n  );\n  return '\"' + s + '\"';\n}\n\nfunction initEscapeTable(){\n  var out = ['\\\\u0000', '\\\\u0001', '\\\\u0002', '\\\\u0003', '\\\\u0004', '\\\\u0005', '\\\\u0006', '\\\\u0007', '\\\\b', '\\\\t', '\\\\n', '\\\\u000B', '\\\\f', '\\\\r', '\\\\u000E', '\\\\u000F', '\\\\u0010', '\\\\u0011', '\\\\u0012', '\\\\u0013', '\\\\u0014', '\\\\u0015', '\\\\u0016', '\\\\u0017', '\\\\u0018', '\\\\u0019', '\\\\u001A', '\\\\u001B', '\\\\u001C', '\\\\u001D', '\\\\u001E', '\\\\u001F'];\n  out[34] = '\\\\\"';\n  out[92] = '\\\\\\\\';\n  out[173] = '\\\\u00ad';\n  out[1536] = '\\\\u0600';\n  out[1537] = '\\\\u0601';\n  out[1538] = '\\\\u0602';\n  out[1539] = '\\\\u0603';\n  out[1757] = '\\\\u06dd';\n  out[1807] = '\\\\u070f';\n  out[6068] = '\\\\u17b4';\n  out[6069] = '\\\\u17b5';\n  out[8203] = '\\\\u200b';\n  out[8204] = '\\\\u200c';\n  out[8205] = '\\\\u200d';\n  out[8206] = '\\\\u200e';\n  out[8207] = '\\\\u200f';\n  out[8232] = '\\\\u2028';\n  out[8233] = '\\\\u2029';\n  out[8234] = '\\\\u202a';\n  out[8235] = '\\\\u202b';\n  out[8236] = '\\\\u202c';\n  out[8237] = '\\\\u202d';\n  out[8238] = '\\\\u202e';\n  out[8288] = '\\\\u2060';\n  out[8289] = '\\\\u2061';\n  out[8290] = '\\\\u2062';\n  out[8291] = '\\\\u2063';\n  out[8292] = '\\\\u2064';\n  out[8298] = '\\\\u206a';\n  out[8299] = '\\\\u206b';\n  out[8300] = '\\\\u206c';\n  out[8301] = '\\\\u206d';\n  out[8302] = '\\\\u206e';\n  out[8303] = '\\\\u206f';\n  out[65279] = '\\\\ufeff';\n  out[65529] = '\\\\ufff9';\n  out[65530] = '\\\\ufffa';\n  out[65531] = '\\\\ufffb';\n  return out;\n}\n\nvar escapeTable, hasJsonParse = false;\ndefineSeed(63, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem(d) , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = currentTimeMillis();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      return entry0(jsFunction, this, arguments);\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry;\n  initialEntry = enter();\n  try {\n    return apply_0(jsFunction, thisObj, args);\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  clearTimeout0(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE_0 = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction $flushPostEventPumpCommands(this$static){\n  var oldDeferred;\n  if (this$static.deferredCommands) {\n    oldDeferred = this$static.deferredCommands;\n    this$static.deferredCommands = null;\n    !this$static.incrementalCommands && (this$static.incrementalCommands = []);\n    runScheduledTasks(oldDeferred, this$static.incrementalCommands);\n  }\n  !!this$static.incrementalCommands && (this$static.incrementalCommands = $runRepeatingTasks(this$static.incrementalCommands));\n}\n\nfunction $isWorkQueued(this$static){\n  return !!this$static.deferredCommands || !!this$static.incrementalCommands;\n}\n\n",
"function $maybeSchedulePostEventPumpCommands(this$static){\n  if (!this$static.shouldBeRunning) {\n    this$static.shouldBeRunning = true;\n    !this$static.flusher && (this$static.flusher = new SchedulerImpl$Flusher_0(this$static));\n    scheduleFixedDelayImpl(this$static.flusher, 1);\n    !this$static.rescue && (this$static.rescue = new SchedulerImpl$Rescuer_0(this$static));\n    scheduleFixedDelayImpl(this$static.rescue, 50);\n  }\n}\n\nfunction $runRepeatingTasks(tasks){\n  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;\n  length_0 = tasks.length;\n  if (length_0 == 0) {\n    return null;\n  }\n  canceledSomeTasks = false;\n  duration = new Duration_0;\n  while (currentTimeMillis() - duration.start_0 < 100) {\n    executedSomeTask = false;\n    for (i = 0; i < length_0; i++) {\n      t = tasks[i];\n      if (!t) {\n        continue;\n      }\n      executedSomeTask = true;\n      if (!t[0].execute_1()) {\n        tasks[i] = null;\n        canceledSomeTasks = true;\n      }\n    }\n    if (!executedSomeTask) {\n      break;\n    }\n  }\n  if (canceledSomeTasks) {\n    newTasks = [];\n    for (i = 0; i < length_0; i++) {\n      !!tasks[i] && $push(newTasks, tasks[i]);\n    }\n    return newTasks.length == 0?null:newTasks;\n  }\n   else {\n    return tasks;\n  }\n}\n\nfunction $scheduleDeferred(this$static, cmd){\n  this$static.deferredCommands = push_0(this$static.deferredCommands, [cmd, false]);\n  $maybeSchedulePostEventPumpCommands(this$static);\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction execute_3(cmd){\n  return cmd.execute_1();\n}\n\nfunction push_0(queue, task){\n  !queue && (queue = []);\n  $push(queue, task);\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].execute_1() && (rescheduled = push_0(rescheduled, t)):t[0].execute();\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  return rescheduled;\n}\n\nfunction scheduleFixedDelayImpl(cmd, delayMs){\n  $clinit_SchedulerImpl();\n  setTimeout_0(function(){\n    var ret = $entry(execute_3)(cmd);\n    ret && setTimeout_0(arguments.callee, delayMs);\n  }\n  , delayMs);\n}\n\ndefineSeed(65, 63, {}, SchedulerImpl_0);\n_.flushRunning = false;\n_.shouldBeRunning = false;\nvar INSTANCE_0;\nfunction SchedulerImpl$Flusher_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(66, 1, {}, SchedulerImpl$Flusher_0);\n_.execute_1 = function execute_4(){\n  this.this$0.flushRunning = true;\n  $flushPostEventPumpCommands(this.this$0);\n  this.this$0.flushRunning = false;\n  return this.this$0.shouldBeRunning = $isWorkQueued(this.this$0);\n}\n;\nfunction SchedulerImpl$Rescuer_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(67, 1, {}, SchedulerImpl$Rescuer_0);\n_.execute_1 = function execute_5(){\n  this.this$0.flushRunning && scheduleFixedDelayImpl(this.this$0.flusher, 1);\n  return this.this$0.shouldBeRunning;\n}\n;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_1(fnToString, fromCodePoint(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction splice_1(arr, length_0){\n  arr.length >= length_0 && arr.splice(0, length_0);\n  return arr;\n}\n\nfunction $createStackTrace(e){\n  var i, j, stack_0, stackTrace;\n  stack_0 = $inferFrom(e.e === ($clinit_JavaScriptException() , NOT_SET)?null:e.e);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(e, stackTrace);\n}\n\nfunction $fillInStackTrace(t){\n  var i, j, stack_0, stackTrace;\n  stack_0 = splice_1($inferFrom($makeException()), 2);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(t, stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction $makeException(){\n  try {\n    null.a();\n  }\n   catch (e) {\n    return e;\n  }\n}\n\nfunction $inferFrom(e){\n  var i, j, jso, stack_0;\n  jso = instanceOfJso(e)?dynamicCastJso(e):null;\n  stack_0 = jso && jso.stack?jso.stack.split('\\n'):[];\n  for (i = 0 , j = stack_0.length; i < j; i++) {\n    stack_0[i] = extractNameFromToString(stack_0[i]);\n  }\n  return stack_0;\n}\n\ndefineSeed(72, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $append_0(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(73, 72, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction clearInterval0(timerId){\n  $wnd.clearInterval(timerId);\n}\n\nfunction clearTimeout0(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction setInterval0(func, time){\n  var timerId = $wnd.setInterval(function(){\n    func();\n  }\n  , time);\n  return timerId;\n}\n\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $getChild(this$static, index_0){\n  return this$static.childNodes[index_0];\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction is(o){\n  try {\n    return !!o && !!o.nodeType;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $getPropertyInt(this$static, name_0){\n  return parseInt(this$static[name_0]) | 0;\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $getSubPixelScrollWidth(this$static){\n  return this$static.scrollWidth || 0;\n}\n\nfunction $setAttribute(this$static, name_0, value_0){\n  this$static.setAttribute(name_0, value_0);\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setPropertyString(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setScrollTop(this$static, scrollTop){\n  this$static.scrollTop = scrollTop;\n}\n\nfunction is_0(o){\n  if (is(o)) {\n    return !!o && o.nodeType == 1;\n  }\n  return false;\n}\n\nfunction $createInputElement(doc, type_0){\n  var e = doc.createElement('INPUT');\n  e.type = type_0;\n  return e;\n}\n\nfunction $eventGetAltKey(evt){\n  return !!evt.altKey;\n}\n\nfunction $eventGetCtrlKey(evt){\n  return !!evt.ctrlKey;\n}\n\nfunction $eventGetKeyCode(evt){\n  return evt.keyCode | 0;\n}\n\nfunction $eventGetMetaKey(evt){\n  return !!evt.metaKey;\n}\n\nfunction $eventGetShiftKey(evt){\n  return !!evt.shiftKey;\n}\n\nfunction $eventStopPropagation(evt){\n  evt.stopPropagation();\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $getSubPixelScrollLeft(elem){\n  return elem.scrollLeft || 0;\n}\n\nfunction $imgSetSrc(img, src_0){\n  img.src = src_0;\n}\n\nfunction $selectAdd(select, option, before){\n  select.add(option, before);\n}\n\nfunction $selectClear(select){\n  select.options.length = 0;\n}\n\nfunction $touchGetSubPixelPageX(touch){\n  return touch.pageX || 0;\n}\n\nfunction $touchGetSubPixelPageY(touch){\n  return touch.pageY || 0;\n}\n\nfunction $dispatchEvent(target, evt){\n  target.dispatchEvent(evt);\n}\n\nfunction $eventPreventDefault(evt){\n  evt.preventDefault();\n}\n\nfunction $setInnerText(elem, text_0){\n  elem.textContent = text_0 || '';\n}\n\nfunction $eventGetRelatedTarget(evt){\n  var relatedTarget = evt.relatedTarget;\n  if (!relatedTarget) {\n    return null;\n  }\n  try {\n    var nodeName = relatedTarget.nodeName;\n    return relatedTarget;\n  }\n   catch (e) {\n    return null;\n  }\n}\n\nfunction $getBodyOffsetLeft(doc){\n  var style = $wnd.getComputedStyle(doc.documentElement, null);\n  if (style == null) {\n    return 0;\n  }\n  return parseInt(style.marginLeft, 10) + parseInt(style.borderLeftWidth, 10);\n}\n\nfunction $getBodyOffsetTop(doc){\n  var style = $wnd.getComputedStyle(doc.documentElement, null);\n  if (style == null) {\n    return 0;\n  }\n  return parseInt(style.marginTop, 10) + parseInt(style.borderTopWidth, 10);\n}\n\nfunction $getScrollLeft(elem){\n  if (!$isGecko19() && $isRTL(elem)) {\n    return ($getSubPixelScrollLeft(elem) | 0) - (($getSubPixelScrollWidth(elem) | 0) - (elem.clientWidth | 0));\n  }\n  return $getSubPixelScrollLeft(elem) | 0;\n}\n\nfunction $isGecko19(){\n  var geckoVersion = getGeckoVersion();\n  return geckoVersion != -1 && geckoVersion >= 1009000;\n}\n\nfunction $isOrHasChild(parent_0, child){\n  return parent_0 === child || !!(parent_0.compareDocumentPosition(child) & 16);\n}\n\nfunction $isRTL(elem){\n  var style = elem.ownerDocument.defaultView.getComputedStyle(elem, null);\n  return style.direction == 'rtl';\n}\n\nfunction $setScrollLeft(elem, left){\n  !$isGecko19() && $isRTL(elem) && (left += ($getSubPixelScrollWidth(elem) | 0) - (elem.clientWidth | 0));\n  elem.scrollLeft = left;\n}\n\nfunction $toString_1(elem){\n  var doc = elem.ownerDocument;\n  var temp = elem.cloneNode(true);\n  var tempDiv = doc.createElement('DIV');\n  tempDiv.appendChild(temp);\n  outer = tempDiv.innerHTML;\n  temp.innerHTML = '';\n  return outer;\n}\n\nfunction getGeckoVersion(){\n  var result = /rv:([0-9]+)\\.([0-9]+)(\\.([0-9]+))?.*?/.exec(navigator.userAgent.toLowerCase());\n  if (result && result.length >= 3) {\n    var version = parseInt(result[1]) * 1000000 + parseInt(result[2]) * 1000 + parseInt(result.length >= 5 && !isNaN(result[4])?result[4]:0);\n    return version;\n  }\n  return -1;\n}\n\nfunction $getClientHeight(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientHeight | 0;\n}\n\nfunction $getClientWidth(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientWidth | 0;\n}\n\nfunction $getScrollHeight(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollHeight || 0) | 0;\n}\n\nfunction $getScrollWidth(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollWidth || 0) | 0;\n}\n\nfunction $setSize(this$static, size_0){\n  this$static.size = size_0;\n}\n\nfunction $setSrc(this$static, url_0){\n  this$static.src = url_0;\n}\n\nfunction $setVolume_1(this$static, volume){\n  this$static.volume = volume;\n}\n\nfunction $setSelectedIndex(this$static, index_0){\n  this$static.selectedIndex = index_0;\n}\n\nfunction $setSize_0(this$static, size_0){\n  this$static.size = size_0;\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $clinit_Style$BorderStyle(){\n  $clinit_Style$BorderStyle = nullMethod;\n  NONE = new Style$BorderStyle$1_0;\n  DOTTED = new Style$BorderStyle$2_0;\n  DASHED = new Style$BorderStyle$3_0;\n  HIDDEN = new Style$BorderStyle$4_0;\n  SOLID = new Style$BorderStyle$5_0;\n  $VALUES_2 = initValues(_3Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit, makeCastMap([Q$Serializable]), Q$Style$BorderStyle, [NONE, DOTTED, DASHED, HIDDEN, SOLID]);\n}\n\nfunction Style$BorderStyle_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_3(){\n  $clinit_Style$BorderStyle();\n  return $VALUES_2;\n}\n\ndefineSeed(92, 11, makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_2, DASHED, DOTTED, HIDDEN, NONE, SOLID;\nfunction Style$BorderStyle$1_0(){\n  Style$BorderStyle_0.call(this, 'NONE', 0);\n}\n\ndefineSeed(93, 92, makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$BorderStyle$1_0);\nfunction Style$BorderStyle$2_0(){\n  Style$BorderStyle_0.call(this, 'DOTTED', 1);\n}\n\ndefineSeed(94, 92, makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$BorderStyle$2_0);\nfunction Style$BorderStyle$3_0(){\n  Style$BorderStyle_0.call(this, 'DASHED', 2);\n}\n\ndefineSeed(95, 92, makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$BorderStyle$3_0);\nfunction Style$BorderStyle$4_0(){\n  Style$BorderStyle_0.call(this, 'HIDDEN', 3);\n}\n\ndefineSeed(96, 92, makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$BorderStyle$4_0);\nfunction Style$BorderStyle$5_0(){\n  Style$BorderStyle_0.call(this, 'SOLID', 4);\n}\n\ndefineSeed(97, 92, makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$BorderStyle$5_0);\nfunction $clinit_Style$Display(){\n  $clinit_Style$Display = nullMethod;\n  NONE_0 = new Style$Display$1_0;\n  BLOCK = new Style$Display$2_0;\n  INLINE = new Style$Display$3_0;\n  INLINE_BLOCK = new Style$Display$4_0;\n  $VALUES_3 = initValues(_3Lcom_google_gwt_dom_client_Style$Display_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Display, [NONE_0, BLOCK, INLINE, INLINE_BLOCK]);\n}\n\nfunction Style$Display_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_4(){\n  $clinit_Style$Display();\n  return $VALUES_3;\n}\n\ndefineSeed(98, 11, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_3, BLOCK, INLINE, INLINE_BLOCK, NONE_0;\nfunction Style$Display$1_0(){\n  Style$Display_0.call(this, 'NONE', 0);\n}\n\ndefineSeed(99, 98, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$1_0);\nfunction Style$Display$2_0(){\n  Style$Display_0.call(this, 'BLOCK', 1);\n}\n\ndefineSeed(100, 98, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$2_0);\nfunction Style$Display$3_0(){\n  Style$Display_0.call(this, 'INLINE', 2);\n}\n\ndefineSeed(101, 98, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$3_0);\nfunction Style$Display$4_0(){\n  Style$Display_0.call(this, 'INLINE_BLOCK', 3);\n}\n\ndefineSeed(102, 98, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$4_0);\nfunction $clinit_Style$Overflow(){\n  $clinit_Style$Overflow = nullMethod;\n  VISIBLE = new Style$Overflow$1_0;\n  HIDDEN_0 = new Style$Overflow$2_0;\n  SCROLL = new Style$Overflow$3_0;\n  AUTO = new Style$Overflow$4_0;\n  $VALUES_4 = initValues(_3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Overflow, [VISIBLE, HIDDEN_0, SCROLL, AUTO]);\n}\n\nfunction Style$Overflow_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_5(){\n  $clinit_Style$Overflow();\n  return $VALUES_4;\n}\n\ndefineSeed(103, 11, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_4, AUTO, HIDDEN_0, SCROLL, VISIBLE;\nfunction Style$Overflow$1_0(){\n  Style$Overflow_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(104, 103, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$1_0);\nfunction Style$Overflow$2_0(){\n  Style$Overflow_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(105, 103, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$2_0);\nfunction Style$Overflow$3_0(){\n  Style$Overflow_0.call(this, 'SCROLL', 2);\n}\n\ndefineSeed(106, 103, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$3_0);\nfunction Style$Overflow$4_0(){\n  Style$Overflow_0.call(this, 'AUTO', 3);\n}\n\ndefineSeed(107, 103, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$4_0);\nfunction $clinit_Style$Position(){\n  $clinit_Style$Position = nullMethod;\n  STATIC = new Style$Position$1_0;\n  RELATIVE = new Style$Position$2_0;\n  ABSOLUTE = new Style$Position$3_0;\n  FIXED = new Style$Position$4_0;\n  $VALUES_5 = initValues(_3Lcom_google_gwt_dom_client_Style$Position_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Position, [STATIC, RELATIVE, ABSOLUTE, FIXED]);\n}\n\nfunction Style$Position_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_6(){\n  $clinit_Style$Position();\n  return $VALUES_5;\n}\n\ndefineSeed(108, 11, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_5, ABSOLUTE, FIXED, RELATIVE, STATIC;\nfunction Style$Position$1_0(){\n  Style$Position_0.call(this, 'STATIC', 0);\n}\n\ndefineSeed(109, 108, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$1_0);\nfunction Style$Position$2_0(){\n  Style$Position_0.call(this, 'RELATIVE', 1);\n}\n\ndefineSeed(110, 108, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$2_0);\nfunction Style$Position$3_0(){\n  Style$Position_0.call(this, 'ABSOLUTE', 2);\n}\n\ndefineSeed(111, 108, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$3_0);\nfunction Style$Position$4_0(){\n  Style$Position_0.call(this, 'FIXED', 3);\n}\n\ndefineSeed(112, 108, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$4_0);\nfunction $clinit_Style$TextAlign(){\n  $clinit_Style$TextAlign = nullMethod;\n  CENTER = new Style$TextAlign$1_0;\n  JUSTIFY = new Style$TextAlign$2_0;\n  LEFT = new Style$TextAlign$3_0;\n  RIGHT = new Style$TextAlign$4_0;\n  $VALUES_6 = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT, RIGHT]);\n}\n\nfunction Style$TextAlign_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_7(){\n  $clinit_Style$TextAlign();\n  return $VALUES_6;\n}\n\ndefineSeed(113, 11, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_6, CENTER, JUSTIFY, LEFT, RIGHT;\nfunction Style$TextAlign$1_0(){\n  Style$TextAlign_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(114, 113, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);\nfunction Style$TextAlign$2_0(){\n  Style$TextAlign_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(115, 113, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);\nfunction Style$TextAlign$3_0(){\n  Style$TextAlign_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(116, 113, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);\nfunction Style$TextAlign$4_0(){\n  Style$TextAlign_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(117, 113, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);\nfunction $clinit_Style$Unit(){\n  $clinit_Style$Unit = nullMethod;\n  PX = new Style$Unit$1_0;\n  PCT = new Style$Unit$2_0;\n  EM = new Style$Unit$3_0;\n  EX = new Style$Unit$4_0;\n  PT = new Style$Unit$5_0;\n  PC = new Style$Unit$6_0;\n  IN = new Style$Unit$7_0;\n  CM = new Style$Unit$8_0;\n  MM = new Style$Unit$9_0;\n  $VALUES_7 = initValues(_3Lcom_google_gwt_dom_client_Style$Unit_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Unit, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);\n}\n\nfunction Style$Unit_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_8(){\n  $clinit_Style$Unit();\n  return $VALUES_7;\n}\n\ndefineSeed(118, 11, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_7, CM, EM, EX, IN, MM, PC, PCT, PT, PX;\nfunction Style$Unit$1_0(){\n  Style$Unit_0.call(this, 'PX', 0);\n}\n\ndefineSeed(119, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$1_0);\nfunction Style$Unit$2_0(){\n  Style$Unit_0.call(this, 'PCT', 1);\n}\n\ndefineSeed(120, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$2_0);\nfunction Style$Unit$3_0(){\n  Style$Unit_0.call(this, 'EM', 2);\n}\n\ndefineSeed(121, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$3_0);\nfunction Style$Unit$4_0(){\n  Style$Unit_0.call(this, 'EX', 3);\n}\n\ndefineSeed(122, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$4_0);\nfunction Style$Unit$5_0(){\n  Style$Unit_0.call(this, 'PT', 4);\n}\n\ndefineSeed(123, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$5_0);\nfunction Style$Unit$6_0(){\n  Style$Unit_0.call(this, 'PC', 5);\n}\n\ndefineSeed(124, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$6_0);\nfunction Style$Unit$7_0(){\n  Style$Unit_0.call(this, 'IN', 6);\n}\n\ndefineSeed(125, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$7_0);\nfunction Style$Unit$8_0(){\n  Style$Unit_0.call(this, 'CM', 7);\n}\n\ndefineSeed(126, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$8_0);\nfunction Style$Unit$9_0(){\n  Style$Unit_0.call(this, 'MM', 8);\n}\n\ndefineSeed(127, 118, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$9_0);\ndefineSeed(131, 1, {});\n_.toString$ = function toString_8(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(130, 131, {});\n_.revive = function revive(){\n  this.dead = false;\n  this.source = null;\n}\n;\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next_0(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(129, 130, {});\n_.getAssociatedType = function getAssociatedType(){\n  return this.getAssociatedType_0();\n}\n;\nvar registered;\nfunction $clinit_ChangeEvent(){\n  $clinit_ChangeEvent = nullMethod;\n  TYPE = new DomEvent$Type_0('change', new ChangeEvent_0);\n}\n\nfunction ChangeEvent_0(){\n}\n\ndefineSeed(128, 129, {}, ChangeEvent_0);\n_.dispatch = function dispatch(handler){\n  dynamicCast(handler, Q$ChangeHandler).onChange(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_0(){\n  return TYPE;\n}\n;\nvar TYPE;\ndefineSeed(134, 129, {});\ndefineSeed(133, 134, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE_0 = new DomEvent$Type_0('click', new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(132, 133, {}, ClickEvent_0);\n_.dispatch = function dispatch_0(handler){\n  dynamicCast(handler, Q$ClickHandler).onClick(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_1(){\n  return TYPE_0;\n}\n;\nvar TYPE_0;\ndefineSeed(137, 1, {});\n_.hashCode$ = function hashCode_3(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_9(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(136, 137, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(eventName, flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast($unsafeGet(registered, eventName), Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, eventName, types);\n  }\n  types.add_0(this);\n  this.name_0 = eventName;\n}\n\ndefineSeed(135, 136, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\nfunction $clinit_EndedEvent(){\n  $clinit_EndedEvent = nullMethod;\n  TYPE_1 = new DomEvent$Type_0('ended', new EndedEvent_0);\n}\n\nfunction $dispatch(handler){\n  $fireOnPlaybackComplete(handler.this$0.soundHandlerCollection, handler.this$0);\n}\n\nfunction EndedEvent_0(){\n}\n\ndefineSeed(138, 129, {}, EndedEvent_0);\n_.dispatch = function dispatch_1(handler){\n  $dispatch(dynamicCast(handler, Q$EndedHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_2(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction $clinit_LoadEvent(){\n  $clinit_LoadEvent = nullMethod;\n  TYPE_2 = new DomEvent$Type_0('load', new LoadEvent_0);\n}\n\nfunction LoadEvent_0(){\n}\n\ndefineSeed(139, 129, {}, LoadEvent_0);\n_.dispatch = function dispatch_2(handler){\n  dynamicCast(handler, Q$LoadHandler);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_3(){\n  return TYPE_2;\n}\n;\nvar TYPE_2;\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, key, value_0){\n  this$static.map_0[key] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(140, 1, {}, PrivateMap_0);\ndefineSeed(143, 134, {});\nvar impl_0;\nfunction $clinit_TouchCancelEvent(){\n  $clinit_TouchCancelEvent = nullMethod;\n  TYPE_3 = new DomEvent$Type_0('touchcancel', new TouchCancelEvent_0);\n}\n\nfunction TouchCancelEvent_0(){\n}\n\ndefineSeed(142, 143, {}, TouchCancelEvent_0);\n_.dispatch = function dispatch_3(handler){\n  $onTouchEnd(dynamicCast(dynamicCast(handler, Q$TouchCancelHandler), Q$TouchScroller$5).this$0);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_4(){\n  return TYPE_3;\n}\n;\nvar TYPE_3;\nfunction $clinit_TouchEndEvent(){\n  $clinit_TouchEndEvent = nullMethod;\n  TYPE_4 = new DomEvent$Type_0('touchend', new TouchEndEvent_0);\n}\n\nfunction TouchEndEvent_0(){\n}\n\ndefineSeed(144, 143, {}, TouchEndEvent_0);\n_.dispatch = function dispatch_4(handler){\n  $onTouchEnd(dynamicCast(dynamicCast(handler, Q$TouchEndHandler), Q$TouchScroller$4).this$0);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_5(){\n  return TYPE_4;\n}\n;\nvar TYPE_4;\nfunction TouchEvent$TouchSupportDetector_0(){\n  var elem;\n  this.isSupported = (elem = document.createElement('div') , elem.setAttribute('ontouchstart', 'return;') , typeof elem.ontouchstart == 'function');\n}\n\ndefineSeed(145, 1, {}, TouchEvent$TouchSupportDetector_0);\n_.isSupported = false;\nfunction $clinit_TouchMoveEvent(){\n  $clinit_TouchMoveEvent = nullMethod;\n  TYPE_5 = new DomEvent$Type_0('touchmove', new TouchMoveEvent_0);\n}\n\nfunction $dispatch_0(this$static, handler){\n  $onTouchMove(handler.this$0, this$static);\n}\n\nfunction TouchMoveEvent_0(){\n}\n\ndefineSeed(146, 143, {}, TouchMoveEvent_0);\n_.dispatch = function dispatch_5(handler){\n  $dispatch_0(this, dynamicCast(handler, Q$TouchMoveHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_6(){\n  return TYPE_5;\n}\n;\nvar TYPE_5;\nfunction $clinit_TouchStartEvent(){\n  $clinit_TouchStartEvent = nullMethod;\n  TYPE_6 = new DomEvent$Type_0('touchstart', new TouchStartEvent_0);\n}\n\nfunction $dispatch_1(this$static, handler){\n  $onTouchStart(handler.this$0, this$static);\n}\n\nfunction TouchStartEvent_0(){\n}\n\ndefineSeed(147, 143, {}, TouchStartEvent_0);\n_.dispatch = function dispatch_6(handler){\n  $dispatch_1(this, dynamicCast(handler, Q$TouchStartHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_7(){\n  return TYPE_6;\n}\n;\nvar TYPE_6;\nfunction $dispatch_2(this$static, handler){\n  this$static.attached?$setupBustClickHandler(handler.this$0):$removeBustClickHandler(handler.this$0);\n}\n\nfunction AttachEvent_0(attached){\n  this.attached = attached;\n}\n\nfunction fire_0(source, attached){\n  var event_0;\n  if (TYPE_7) {\n    event_0 = new AttachEvent_0(attached);\n    !!source.handlerManager && $fireEvent_0(source.handlerManager, event_0);\n  }\n}\n\ndefineSeed(148, 130, {}, AttachEvent_0);\n_.dispatch = function dispatch_7(handler){\n  $dispatch_2(this, dynamicCast(handler, Q$AttachEvent$Handler));\n}\n;\n_.getAssociatedType = function getAssociatedType_8(){\n  return TYPE_7;\n}\n;\n_.attached = false;\nvar TYPE_7;\nfunction CloseEvent_1(){\n}\n\nfunction fire_1(source){\n  var event_0;\n  if (TYPE_8) {\n    event_0 = new CloseEvent_1;\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(149, 130, {}, CloseEvent_1);\n_.dispatch = function dispatch_8(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_9(){\n  return TYPE_8;\n}\n;\nvar TYPE_8;\nfunction ResizeEvent_0(){\n}\n\nfunction fire_2(source){\n  var event_0;\n  if (TYPE_9) {\n    event_0 = new ResizeEvent_0;\n    $fireEvent_0(source, event_0);\n  }\n}\n\ndefineSeed(150, 130, {}, ResizeEvent_0);\n",
"_.dispatch = function dispatch_9(handler){\n  dynamicCast(handler, Q$ResizeHandler).onResize(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_10(){\n  return TYPE_9;\n}\n;\nvar TYPE_9;\nfunction ValueChangeEvent_0(){\n}\n\nfunction fire_3(source){\n  var event_0;\n  if (TYPE_10) {\n    event_0 = new ValueChangeEvent_0;\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(151, 130, {}, ValueChangeEvent_0);\n_.dispatch = function dispatch_10(handler){\n  dynamicCast(handler, Q$ValueChangeHandler).onValueChange(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_11(){\n  return TYPE_10;\n}\n;\nvar TYPE_10;\nfunction $addHandler_0(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || event_0.revive();\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException_0)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction $isEventHandled(this$static, e){\n  return $isEventHandled_0(this$static.eventBus, e);\n}\n\nfunction HandlerManager_0(source){\n  HandlerManager_1.call(this, source, false);\n}\n\nfunction HandlerManager_1(source, fireInReverseOrder){\n  this.eventBus = new HandlerManager$Bus_0(fireInReverseOrder);\n  this.source = source;\n}\n\ndefineSeed(152, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0, HandlerManager_1);\n_.fireEvent = function fireEvent_0(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\ndefineSeed(155, 1, {});\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, null, handler);\n  return new SimpleEventBus$1_0(this$static, type_0, handler);\n}\n\nfunction $doAddNow(this$static, type_0, source, handler){\n  var l_0;\n  l_0 = $ensureHandlerList(this$static, type_0, source);\n  l_0.add_0(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.hasPrevious():it.hasNext()) {\n      handler = this$static.isReverseOrder?it.previous():it.next_0();\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_7(causes, e);\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $doRemoveNow(this$static, type_0, source, handler){\n  var l_0, removed, sourceMap;\n  l_0 = $getHandlerList(this$static, type_0, source);\n  removed = l_0.remove(handler);\n  removed && l_0.isEmpty() && (sourceMap = dynamicCast($get_4(this$static.map_0, type_0), Q$Map) , dynamicCast(sourceMap.remove_3(source), Q$List) , sourceMap.isEmpty() && $remove_8(this$static.map_0, type_0) , undefined);\n}\n\nfunction $ensureHandlerList(this$static, type_0, source){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_4(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put_0(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.get_1(source), Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    sourceMap.put(source, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0, null);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0, source){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_4(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.get_1(source), Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_3(c$iterator), Q$SimpleEventBus$Command);\n        c.execute();\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\nfunction $isEventHandled_0(this$static, eventKey){\n  return $containsKey(this$static.map_0, eventKey);\n}\n\ndefineSeed(154, 155, {});\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction $doRemove(this$static, type_0, source, handler){\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$3_0(this$static, type_0, source, handler)):$doRemoveNow(this$static, type_0, source, handler);\n}\n\nfunction HandlerManager$Bus_0(fireInReverseOrder){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = fireInReverseOrder;\n}\n\ndefineSeed(153, 154, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(real){\n  this.real = real;\n}\n\ndefineSeed(156, 1, makeCastMap([Q$HandlerRegistration]), LegacyHandlerWrapper_0);\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next_0(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_1(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next_0(), Q$Throwable);\n    first?(first = false):($append_0(b.impl, '; ') , b);\n    $append_4(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(158, 57, makeCastMap([Q$UmbrellaException_0, Q$Serializable, Q$Exception, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(157, 158, makeCastMap([Q$UmbrellaException, Q$UmbrellaException_0, Q$Serializable, Q$Exception, Q$Throwable]), UmbrellaException_2);\nfunction $cancel_1(this$static){\n  var xmlHttp;\n  if (this$static.xmlHttpRequest) {\n    xmlHttp = this$static.xmlHttpRequest;\n    this$static.xmlHttpRequest = null;\n    $clearOnReadyStateChange(xmlHttp);\n    xmlHttp.abort();\n    this$static.timeoutMillis > 0 && clearTimeout0(this$static.timerId);\n  }\n}\n\nfunction $fireOnResponseReceived(this$static, callback){\n  var errorMsg, exception, response, xhr;\n  if (!this$static.xmlHttpRequest) {\n    return;\n  }\n  this$static.timeoutMillis > 0 && clearTimeout0(this$static.timerId);\n  xhr = this$static.xmlHttpRequest;\n  this$static.xmlHttpRequest = null;\n  errorMsg = $getBrowserSpecificFailure(xhr);\n  if (errorMsg != null) {\n    exception = new RuntimeException_1(errorMsg);\n    callback.onError(this$static, exception);\n  }\n   else {\n    response = new ResponseImpl_0(xhr);\n    callback.onResponseReceived(this$static, response);\n  }\n}\n\nfunction $getBrowserSpecificFailure(xhr){\n  try {\n    if (xhr.status === undefined) {\n      return 'XmlHttpRequest.status == undefined, please see Safari bug http://bugs.webkit.org/show_bug.cgi?id=3810 for more details';\n    }\n    return null;\n  }\n   catch (e) {\n    return 'Unable to read XmlHttpRequest.status; likely causes are a networking error or bad cross-domain request. Please see https://bugzilla.mozilla.org/show_bug.cgi?id=238559 for more details';\n  }\n}\n\nfunction Request_0(xmlHttpRequest, timeoutMillis, callback){\n  if (!xmlHttpRequest) {\n    throw new NullPointerException_0;\n  }\n  if (!callback) {\n    throw new NullPointerException_0;\n  }\n  if (timeoutMillis < 0) {\n    throw new IllegalArgumentException_0;\n  }\n  this.timeoutMillis = timeoutMillis;\n  this.xmlHttpRequest = xmlHttpRequest;\n  timeoutMillis > 0?(this.timerId = createTimeout(this, callback, timeoutMillis)):(this.timerId = 0);\n}\n\nfunction createTimeout(request, callback, timeoutMillis){\n  return setTimeout_0($entry(function(){\n    request.fireOnTimeout(callback);\n  }\n  ), timeoutMillis);\n}\n\ndefineSeed(159, 1, {}, Request_0);\n_.fireOnTimeout = function fireOnTimeout(callback){\n  if (!this.xmlHttpRequest) {\n    return;\n  }\n  $cancel_1(this);\n  callback.onError(this, new RequestTimeoutException_0(this.timeoutMillis));\n}\n;\n_.timeoutMillis = 0;\n_.timerId = 0;\nfunction $clinit_RequestBuilder(){\n  $clinit_RequestBuilder = nullMethod;\n  new RequestBuilder$Method_0('DELETE');\n  GET = new RequestBuilder$Method_0('GET');\n  new RequestBuilder$Method_0('HEAD');\n  new RequestBuilder$Method_0('POST');\n  new RequestBuilder$Method_0('PUT');\n}\n\nfunction $doSend(this$static, callback){\n  var e, request, requestPermissionException, xmlHttpRequest;\n  xmlHttpRequest = create_1();\n  try {\n    $open(xmlHttpRequest, this$static.httpMethod, this$static.url_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      e = $e0;\n      requestPermissionException = new RequestPermissionException_0(this$static.url_0);\n      $initCause(requestPermissionException, new RequestException_0(e.getMessage()));\n      throw requestPermissionException;\n    }\n     else \n      throw unwrap($e0);\n  }\n  xmlHttpRequest.setRequestHeader('Content-Type', 'text/plain; charset=utf-8');\n  this$static.includeCredentials && (xmlHttpRequest.withCredentials = true , undefined);\n  request = new Request_0(xmlHttpRequest, this$static.timeoutMillis, callback);\n  $setOnReadyStateChange(xmlHttpRequest, new RequestBuilder$1_0(request, callback));\n  try {\n    xmlHttpRequest.send(null);\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$JavaScriptException)) {\n      e = $e1;\n      throw new RequestException_0(e.getMessage());\n    }\n     else \n      throw unwrap($e1);\n  }\n  return request;\n}\n\nfunction $sendRequest(this$static, callback){\n  throwIfNull('callback', callback);\n  return $doSend(this$static, callback);\n}\n\nfunction RequestBuilder_0(httpMethod, url_0){\n  $clinit_RequestBuilder();\n  RequestBuilder_1.call(this, !httpMethod?null:httpMethod.name_0, url_0);\n}\n\nfunction RequestBuilder_1(httpMethod, url_0){\n  throwIfEmptyOrNull('httpMethod', httpMethod);\n  throwIfEmptyOrNull('url', url_0);\n  this.httpMethod = httpMethod;\n  this.url_0 = url_0;\n}\n\ndefineSeed(160, 1, {}, RequestBuilder_0);\n_.includeCredentials = false;\n_.timeoutMillis = 0;\nvar GET;\nfunction RequestBuilder$1_0(val$request, val$callback){\n  this.val$request = val$request;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(161, 1, {}, RequestBuilder$1_0);\n_.onReadyStateChange = function onReadyStateChange(xhr){\n  if (xhr.readyState == 4) {\n    $clearOnReadyStateChange(xhr);\n    $fireOnResponseReceived(this.val$request, this.val$callback);\n  }\n}\n;\nfunction RequestBuilder$Method_0(name_0){\n  this.name_0 = name_0;\n}\n\ndefineSeed(162, 1, {}, RequestBuilder$Method_0);\n_.toString$ = function toString_10(){\n  return this.name_0;\n}\n;\nfunction RequestException_0(message){\n  Exception_0.call(this, message);\n}\n\ndefineSeed(163, 58, makeCastMap([Q$RequestException, Q$Serializable, Q$Exception, Q$Throwable]), RequestException_0);\nfunction RequestPermissionException_0(url_0){\n  RequestException_0.call(this, 'The URL ' + url_0 + ' is invalid or violates the same-origin security restriction');\n}\n\ndefineSeed(164, 163, makeCastMap([Q$RequestException, Q$Serializable, Q$Exception, Q$Throwable]), RequestPermissionException_0);\nfunction RequestTimeoutException_0(timeoutMillis){\n  RequestException_0.call(this, 'A request timeout has expired after ' + timeoutMillis + ' ms');\n}\n\ndefineSeed(165, 163, makeCastMap([Q$RequestException, Q$Serializable, Q$Exception, Q$Throwable]), RequestTimeoutException_0);\ndefineSeed(166, 1, {});\nfunction ResponseImpl_0(xmlHttpRequest){\n  this.xmlHttpRequest = xmlHttpRequest;\n}\n\ndefineSeed(167, 166, {}, ResponseImpl_0);\nfunction throwIfEmptyOrNull(name_0, value_0){\n  throwIfNull(name_0, value_0);\n  if (0 == $trim(value_0).length) {\n    throw new IllegalArgumentException_1(name_0 + ' cannot be empty');\n  }\n}\n\nfunction throwIfNull(name_0, value_0){\n  if (null == value_0) {\n    throw new NullPointerException_1(name_0 + ' cannot be null');\n  }\n}\n\nfunction AutoDirectionHandler_0(){\n}\n\ndefineSeed(170, 1, makeCastMap([Q$EventHandler]), AutoDirectionHandler_0);\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_8 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_9(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_8;\n}\n\ndefineSeed(172, 11, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);\nvar $VALUES_8, DEFAULT, LTR, RTL;\ndefineSeed(174, 1, {});\nfunction $get_0(this$static, index_0){\n  var v = this$static.jsArray[index_0];\n  var func = ($clinit_JSONParser() , typeMap)[typeof v];\n  return func?func(v):throwUnknownTypeException(typeof v);\n}\n\nfunction JSONArray_0(arr){\n  this.jsArray = arr;\n}\n\ndefineSeed(173, 174, makeCastMap([Q$JSONArray]), JSONArray_0);\n_.equals$ = function equals_2(other){\n  if (!instanceOf(other, Q$JSONArray)) {\n    return false;\n  }\n  return this.jsArray == dynamicCast(other, Q$JSONArray).jsArray;\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return getHashCode(this.jsArray);\n}\n;\n_.toString$ = function toString_11(){\n  var c, i, sb;\n  sb = new StringBuffer_0;\n  $append_0(sb.impl, '[');\n  for (i = 0 , c = this.jsArray.length; i < c; i++) {\n    i > 0 && ($append_0(sb.impl, ',') , sb);\n    $append_1(sb, $get_0(this, i));\n  }\n  $append_0(sb.impl, ']');\n  return sb.impl.string;\n}\n;\nfunction $clinit_JSONBoolean(){\n  $clinit_JSONBoolean = nullMethod;\n  FALSE = new JSONBoolean_0(false);\n  TRUE = new JSONBoolean_0(true);\n}\n\nfunction JSONBoolean_0(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(175, 174, {}, JSONBoolean_0);\n_.toString$ = function toString_12(){\n  return $clinit_Boolean() , '' + this.value_0;\n}\n;\n_.value_0 = false;\nvar FALSE, TRUE;\nfunction JSONException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\nfunction JSONException_1(cause){\n  this.detailMessage = !cause?null:$toString_0(cause);\n  this.cause = cause;\n  $fillInStackTrace(this);\n}\n\ndefineSeed(176, 57, makeCastMap([Q$JSONException, Q$Serializable, Q$Exception, Q$Throwable]), JSONException_0, JSONException_1);\nfunction $clinit_JSONNull(){\n  $clinit_JSONNull = nullMethod;\n  instance_0 = new JSONNull_0;\n}\n\nfunction JSONNull_0(){\n}\n\ndefineSeed(177, 174, {}, JSONNull_0);\n_.toString$ = function toString_13(){\n  return 'null';\n}\n;\nvar instance_0;\nfunction JSONNumber_0(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(178, 174, makeCastMap([Q$JSONNumber]), JSONNumber_0);\n_.equals$ = function equals_3(other){\n  if (!instanceOf(other, Q$JSONNumber)) {\n    return false;\n  }\n  return this.value_0 == dynamicCast(other, Q$JSONNumber).value_0;\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return round_int((new Double_0(this.value_0)).value_0);\n}\n;\n_.toString$ = function toString_14(){\n  return this.value_0 + '';\n}\n;\n_.value_0 = 0;\nfunction $computeKeys0(this$static, result){\n  var jsObject = this$static.jsObject;\n  var i = 0;\n  for (var key in jsObject) {\n    jsObject.hasOwnProperty(key) && (result[i++] = key);\n  }\n  return result;\n}\n\nfunction $get_1(this$static, key){\n  if (key == null) {\n    throw new NullPointerException_0;\n  }\n  return $get0(this$static, key);\n}\n\nfunction $get0(this$static, key){\n  var jsObject = this$static.jsObject;\n  var v;\n  key = String(key);\n  jsObject.hasOwnProperty(key) && (v = jsObject[key]);\n  var func = ($clinit_JSONParser() , typeMap)[typeof v];\n  var ret = func?func(v):throwUnknownTypeException(typeof v);\n  return ret;\n}\n\nfunction JSONObject_0(jsValue){\n  this.jsObject = jsValue;\n}\n\ndefineSeed(179, 174, makeCastMap([Q$JSONObject]), JSONObject_0);\n_.equals$ = function equals_4(other){\n  if (!instanceOf(other, Q$JSONObject)) {\n    return false;\n  }\n  return this.jsObject == dynamicCast(other, Q$JSONObject).jsObject;\n}\n;\n_.hashCode$ = function hashCode_6(){\n  return getHashCode(this.jsObject);\n}\n;\n_.toString$ = function toString_15(){\n  var first, key, key$index, key$max, keys_0, sb;\n  sb = new StringBuffer_0;\n  $append_0(sb.impl, '{');\n  first = true;\n  keys_0 = $computeKeys0(this, initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, 0, 0));\n  for (key$index = 0 , key$max = keys_0.length; key$index < key$max; ++key$index) {\n    key = keys_0[key$index];\n    first?(first = false):($append_0(sb.impl, ', ') , sb);\n    $append_2(sb, escapeValue(key));\n    $append_0(sb.impl, ':');\n    $append_1(sb, $get_1(this, key));\n  }\n  $append_0(sb.impl, '}');\n  return sb.impl.string;\n}\n;\nfunction $clinit_JSONParser(){\n  $clinit_JSONParser = nullMethod;\n  typeMap = {'boolean':createBoolean, number:createNumber, string:createString, object:createObject, 'function':createObject, undefined:createUndefined};\n}\n\nfunction createBoolean(v){\n  return $clinit_JSONBoolean() , v?TRUE:FALSE;\n}\n\nfunction createNumber(v){\n  return new JSONNumber_0(v);\n}\n\nfunction createObject(o){\n  if (!o) {\n    return $clinit_JSONNull() , instance_0;\n  }\n  var v = o.valueOf?o.valueOf():o;\n  if (v !== o) {\n    var func = typeMap[typeof v];\n    return func?func(v):throwUnknownTypeException(typeof v);\n  }\n   else if (o instanceof Array || o instanceof $wnd.Array) {\n    return new JSONArray_0(o);\n  }\n   else {\n    return new JSONObject_0(o);\n  }\n}\n\nfunction createString(v){\n  return new JSONString_0(v);\n}\n\nfunction createUndefined(){\n  return null;\n}\n\nfunction evaluate(json, strict){\n  var v;\n  if (strict && ($clinit_JsonUtils() , hasJsonParse)) {\n    try {\n      v = JSON.parse(json);\n    }\n     catch (e) {\n      return throwJSONException('Error parsing JSON: ' + e);\n    }\n  }\n   else {\n    if (strict) {\n      if (!($clinit_JsonUtils() , !/[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]/.test(json.replace(/\"(\\\\.|[^\"\\\\])*\"/g, '')))) {\n        return throwJSONException('Illegal character in JSON string');\n      }\n    }\n    json = escapeJsonForEval(json);\n    try {\n      v = eval('(' + json + ')');\n    }\n     catch (e) {\n      return throwJSONException('Error parsing JSON: ' + e);\n    }\n  }\n  var func = typeMap[typeof v];\n  return func?func(v):throwUnknownTypeException(typeof v);\n}\n\nfunction parse_0(jsonString){\n  $clinit_JSONParser();\n  var ex;\n  if (jsonString == null) {\n    throw new NullPointerException_0;\n  }\n  if (jsonString.length == 0) {\n    throw new IllegalArgumentException_1('empty argument');\n  }\n  try {\n    return evaluate(jsonString, false);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      ex = $e0;\n      throw new JSONException_1(ex);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction throwJSONException(message){\n  throw new JSONException_0(message);\n}\n\nfunction throwUnknownTypeException(typeString){\n  $clinit_JSONParser();\n  throw new JSONException_0(\"Unexpected typeof result '\" + typeString + \"'; please report this bug to the GWT team\");\n}\n\nvar typeMap;\nfunction JSONString_0(value_0){\n  if (value_0 == null) {\n    throw new NullPointerException_0;\n  }\n  this.value_0 = value_0;\n}\n\ndefineSeed(181, 174, makeCastMap([Q$JSONString]), JSONString_0);\n_.equals$ = function equals_5(other){\n  if (!instanceOf(other, Q$JSONString)) {\n    return false;\n  }\n  return $equals(this.value_0, dynamicCast(other, Q$JSONString).value_0);\n}\n;\n_.hashCode$ = function hashCode_7(){\n  return getHashCode_0(this.value_0);\n}\n;\n_.toString$ = function toString_16(){\n  return escapeValue(this.value_0);\n}\n;\nfunction Array_0(){\n}\n\nfunction createFrom(array, length_0){\n  var a, result;\n  a = array;\n  result = createFromSeed(0, length_0);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(182, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction charToString(x_0){\n  return String.fromCharCode(x_0);\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction round_int(x_0){\n  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('gecko1_8', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (gecko1_8) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad();\n  isStatsAvailable() && onModuleStart('project.client.AAMarsProject');\n  $onModuleLoad_0(new AAMarsProject_0);\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction create(value_0){\n  var a0, a1, a2;\n  a0 = value_0 & 4194303;\n  a1 = value_0 >> 22 & 4194303;\n  a2 = value_0 < 0?1048575:0;\n  return create0(a0, a1, a2);\n}\n\nfunction create_0(a){\n  return create0(a.l, a.m, a.h);\n}\n\nfunction create0(l_0, m_0, h_0){\n  return {l:l_0, m:m_0, h:h_0};\n}\n\nfunction divMod(a, b, computeRemainder){\n  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;\n  if (b.l == 0 && b.m == 0 && b.h == 0) {\n    throw new ArithmeticException_0;\n  }\n  if (a.l == 0 && a.m == 0 && a.h == 0) {\n    computeRemainder && (remainder = create0(0, 0, 0));\n    return create0(0, 0, 0);\n  }\n  if (b.h == 524288 && b.m == 0 && b.l == 0) {\n    return divModByMinValue(a, computeRemainder);\n  }\n  negative = false;\n  if (b.h >> 19 != 0) {\n    b = neg(b);\n    negative = true;\n  }\n  bpower = powerOfTwo(b);\n  aIsNegative = false;\n  aIsMinValue = false;\n  aIsCopy = false;\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    aIsMinValue = true;\n    aIsNegative = true;\n    if (bpower == -1) {\n      a = create_0(($clinit_LongLib$Const() , MAX_VALUE));\n      aIsCopy = true;\n      negative = !negative;\n    }\n     else {\n      c = shr(a, bpower);\n      negative && negate(c);\n      computeRemainder && (remainder = create0(0, 0, 0));\n      return c;\n    }\n  }\n   else if (a.h >> 19 != 0) {\n    aIsNegative = true;\n    a = neg(a);\n    aIsCopy = true;\n    negative = !negative;\n  }\n  if (bpower != -1) {\n    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);\n  }\n  if (!gte_0(a, b)) {\n    computeRemainder && (aIsNegative?(remainder = neg(a)):(remainder = create0(a.l, a.m, a.h)));\n    return create0(0, 0, 0);\n  }\n  return divModHelper(aIsCopy?a:create0(a.l, a.m, a.h), b, negative, aIsNegative, aIsMinValue, computeRemainder);\n}\n\nfunction divModByMinValue(a, computeRemainder){\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    computeRemainder && (remainder = create0(0, 0, 0));\n    return create_0(($clinit_LongLib$Const() , ONE));\n  }\n  computeRemainder && (remainder = create0(a.l, a.m, a.h));\n  return create0(0, 0, 0);\n}\n\nfunction divModByShift(a, bpower, negative, aIsNegative, computeRemainder){\n  var c;\n  c = shr(a, bpower);\n  negative && negate(c);\n  if (computeRemainder) {\n    a = maskRight(a, bpower);\n    aIsNegative?(remainder = neg(a)):(remainder = create0(a.l, a.m, a.h));\n  }\n  return c;\n}\n\n",
"function divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){\n  var bshift, gte, quotient, shift_0, a1, a2, a0;\n  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);\n  bshift = shl(b, shift_0);\n  quotient = create0(0, 0, 0);\n  while (shift_0 >= 0) {\n    gte = trialSubtract(a, bshift);\n    if (gte) {\n      shift_0 < 22?(quotient.l |= 1 << shift_0 , undefined):shift_0 < 44?(quotient.m |= 1 << shift_0 - 22 , undefined):(quotient.h |= 1 << shift_0 - 44 , undefined);\n      if (a.l == 0 && a.m == 0 && a.h == 0) {\n        break;\n      }\n    }\n    a1 = bshift.m;\n    a2 = bshift.h;\n    a0 = bshift.l;\n    setH(bshift, a2 >>> 1);\n    bshift.m = a1 >>> 1 | (a2 & 1) << 21;\n    bshift.l = a0 >>> 1 | (a1 & 1) << 21;\n    --shift_0;\n  }\n  negative && negate(quotient);\n  if (computeRemainder) {\n    if (aIsNegative) {\n      remainder = neg(a);\n      aIsMinValue && (remainder = sub_0(remainder, ($clinit_LongLib$Const() , ONE)));\n    }\n     else {\n      remainder = create0(a.l, a.m, a.h);\n    }\n  }\n  return quotient;\n}\n\nfunction maskRight(a, bits){\n  var b0, b1, b2;\n  if (bits <= 22) {\n    b0 = a.l & (1 << bits) - 1;\n    b1 = b2 = 0;\n  }\n   else if (bits <= 44) {\n    b0 = a.l;\n    b1 = a.m & (1 << bits - 22) - 1;\n    b2 = 0;\n  }\n   else {\n    b0 = a.l;\n    b1 = a.m;\n    b2 = a.h & (1 << bits - 44) - 1;\n  }\n  return create0(b0, b1, b2);\n}\n\nfunction negate(a){\n  var neg0, neg1, neg2;\n  neg0 = ~a.l + 1 & 4194303;\n  neg1 = ~a.m + (neg0 == 0?1:0) & 4194303;\n  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575;\n  setL(a, neg0);\n  setM(a, neg1);\n  setH(a, neg2);\n}\n\nfunction numberOfLeadingZeros(a){\n  var b1, b2;\n  b2 = numberOfLeadingZeros_0(a.h);\n  if (b2 == 32) {\n    b1 = numberOfLeadingZeros_0(a.m);\n    return b1 == 32?numberOfLeadingZeros_0(a.l) + 32:b1 + 20 - 10;\n  }\n   else {\n    return b2 - 12;\n  }\n}\n\nfunction powerOfTwo(a){\n  var h_0, l_0, m_0;\n  l_0 = a.l;\n  if ((l_0 & l_0 - 1) != 0) {\n    return -1;\n  }\n  m_0 = a.m;\n  if ((m_0 & m_0 - 1) != 0) {\n    return -1;\n  }\n  h_0 = a.h;\n  if ((h_0 & h_0 - 1) != 0) {\n    return -1;\n  }\n  if (h_0 == 0 && m_0 == 0 && l_0 == 0) {\n    return -1;\n  }\n  if (h_0 == 0 && m_0 == 0 && l_0 != 0) {\n    return numberOfTrailingZeros(l_0);\n  }\n  if (h_0 == 0 && m_0 != 0 && l_0 == 0) {\n    return numberOfTrailingZeros(m_0) + 22;\n  }\n  if (h_0 != 0 && m_0 == 0 && l_0 == 0) {\n    return numberOfTrailingZeros(h_0) + 44;\n  }\n  return -1;\n}\n\nfunction setH(a, x_0){\n  a.h = x_0;\n}\n\nfunction setL(a, x_0){\n  a.l = x_0;\n}\n\nfunction setM(a, x_0){\n  a.m = x_0;\n}\n\nfunction trialSubtract(a, b){\n  var sum0, sum1, sum2;\n  sum2 = a.h - b.h;\n  if (sum2 < 0) {\n    return false;\n  }\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 += sum1 >> 22;\n  if (sum2 < 0) {\n    return false;\n  }\n  setL(a, sum0 & 4194303);\n  setM(a, sum1 & 4194303);\n  setH(a, sum2 & 1048575);\n  return true;\n}\n\nvar remainder;\nfunction add_5(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l + b.l;\n  sum1 = a.m + b.m + (sum0 >> 22);\n  sum2 = a.h + b.h + (sum1 >> 22);\n  return {l:sum0 & 4194303, m:sum1 & 4194303, h:sum2 & 1048575};\n}\n\nfunction div(a, b){\n  return divMod(a, b, false);\n}\n\nfunction fromDouble(value_0){\n  var a0, a1, a2, negative, result;\n  if (isNaN(value_0)) {\n    return $clinit_LongLib$Const() , ZERO;\n  }\n  if (value_0 < -9223372036854775808) {\n    return $clinit_LongLib$Const() , MIN_VALUE;\n  }\n  if (value_0 >= 9223372036854775807) {\n    return $clinit_LongLib$Const() , MAX_VALUE;\n  }\n  negative = false;\n  if (value_0 < 0) {\n    negative = true;\n    value_0 = -value_0;\n  }\n  a2 = 0;\n  if (value_0 >= 17592186044416) {\n    a2 = round_int(value_0 / 17592186044416);\n    value_0 -= a2 * 17592186044416;\n  }\n  a1 = 0;\n  if (value_0 >= 4194304) {\n    a1 = round_int(value_0 / 4194304);\n    value_0 -= a1 * 4194304;\n  }\n  a0 = round_int(value_0);\n  result = create0(a0, a1, a2);\n  negative && negate(result);\n  return result;\n}\n\nfunction fromInt(value_0){\n  var rebase, result;\n  if (value_0 > -129 && value_0 < 128) {\n    rebase = value_0 + 128;\n    boxedValues == null && (boxedValues = initDim(_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, makeCastMap([Q$Serializable]), Q$LongLibBase$LongEmul, 256, 0));\n    result = boxedValues[rebase];\n    !result && (result = boxedValues[rebase] = create(value_0));\n    return result;\n  }\n  return create(value_0);\n}\n\nfunction gt(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l > b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l <= b.l);\n}\n\nfunction gte_0(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l >= b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l < b.l);\n}\n\nfunction lt(a, b){\n  return !gte_0(a, b);\n}\n\nfunction mul(a, b){\n  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;\n  a0 = a.l & 8191;\n  a1 = a.l >> 13 | (a.m & 15) << 9;\n  a2 = a.m >> 4 & 8191;\n  a3 = a.m >> 17 | (a.h & 255) << 5;\n  a4 = (a.h & 1048320) >> 8;\n  b0 = b.l & 8191;\n  b1 = b.l >> 13 | (b.m & 15) << 9;\n  b2 = b.m >> 4 & 8191;\n  b3 = b.m >> 17 | (b.h & 255) << 5;\n  b4 = (b.h & 1048320) >> 8;\n  p0 = a0 * b0;\n  p1 = a1 * b0;\n  p2 = a2 * b0;\n  p3 = a3 * b0;\n  p4 = a4 * b0;\n  if (b1 != 0) {\n    p1 += a0 * b1;\n    p2 += a1 * b1;\n    p3 += a2 * b1;\n    p4 += a3 * b1;\n  }\n  if (b2 != 0) {\n    p2 += a0 * b2;\n    p3 += a1 * b2;\n    p4 += a2 * b2;\n  }\n  if (b3 != 0) {\n    p3 += a0 * b3;\n    p4 += a1 * b3;\n  }\n  b4 != 0 && (p4 += a0 * b4);\n  c00 = p0 & 4194303;\n  c01 = (p1 & 511) << 13;\n  c0 = c00 + c01;\n  c10 = p0 >> 22;\n  c11 = p1 >> 9;\n  c12 = (p2 & 262143) << 4;\n  c13 = (p3 & 31) << 17;\n  c1 = c10 + c11 + c12 + c13;\n  c22 = p2 >> 18;\n  c23 = p3 >> 5;\n  c24 = (p4 & 4095) << 8;\n  c2 = c22 + c23 + c24;\n  c1 += c0 >> 22;\n  c0 &= 4194303;\n  c2 += c1 >> 22;\n  c1 &= 4194303;\n  c2 &= 1048575;\n  return create0(c0, c1, c2);\n}\n\nfunction neg(a){\n  var neg0, neg1, neg2;\n  neg0 = ~a.l + 1 & 4194303;\n  neg1 = ~a.m + (neg0 == 0?1:0) & 4194303;\n  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575;\n  return create0(neg0, neg1, neg2);\n}\n\nfunction shl(a, n){\n  var res0, res1, res2;\n  n &= 63;\n  if (n < 22) {\n    res0 = a.l << n;\n    res1 = a.m << n | a.l >> 22 - n;\n    res2 = a.h << n | a.m >> 22 - n;\n  }\n   else if (n < 44) {\n    res0 = 0;\n    res1 = a.l << n - 22;\n    res2 = a.m << n - 22 | a.l >> 44 - n;\n  }\n   else {\n    res0 = 0;\n    res1 = 0;\n    res2 = a.l << n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction shr(a, n){\n  var a2, negative, res0, res1, res2;\n  n &= 63;\n  a2 = a.h;\n  negative = (a2 & 524288) != 0;\n  negative && (a2 |= -1048576);\n  if (n < 22) {\n    res2 = a2 >> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = negative?1048575:0;\n    res1 = a2 >> n - 22;\n    res0 = a.m >> n - 22 | a2 << 44 - n;\n  }\n   else {\n    res2 = negative?1048575:0;\n    res1 = negative?4194303:0;\n    res0 = a2 >> n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction sub_0(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 = a.h - b.h + (sum1 >> 22);\n  return {l:sum0 & 4194303, m:sum1 & 4194303, h:sum2 & 1048575};\n}\n\nfunction toInt(a){\n  return a.l | a.m << 22;\n}\n\nfunction toString_17(a){\n  var digits, rem, res, tenPowerLong, zeroesNeeded;\n  if (a.l == 0 && a.m == 0 && a.h == 0) {\n    return '0';\n  }\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    return '-9223372036854775808';\n  }\n  if (a.h >> 19 != 0) {\n    return '-' + toString_17(neg(a));\n  }\n  rem = a;\n  res = '';\n  while (!(rem.l == 0 && rem.m == 0 && rem.h == 0)) {\n    tenPowerLong = fromInt(1000000000);\n    rem = divMod(rem, tenPowerLong, true);\n    digits = '' + toInt(remainder);\n    if (!(rem.l == 0 && rem.m == 0 && rem.h == 0)) {\n      zeroesNeeded = 9 - digits.length;\n      for (; zeroesNeeded > 0; zeroesNeeded--) {\n        digits = '0' + digits;\n      }\n    }\n    res = digits + res;\n  }\n  return res;\n}\n\nvar boxedValues;\nfunction $clinit_LongLib$Const(){\n  $clinit_LongLib$Const = nullMethod;\n  MAX_VALUE = create0(4194303, 4194303, 524287);\n  MIN_VALUE = create0(0, 0, 524288);\n  ONE = fromInt(1);\n  fromInt(2);\n  ZERO = fromInt(0);\n}\n\nvar MAX_VALUE, MIN_VALUE, ONE, ZERO;\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $getMediaElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\ndefineSeed(195, 45, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Audio_1(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n}\n\nfunction createIfSupported_0(){\n  var element;\n  !detector_0 && (detector_0 = new Audio$AudioElementSupportDetectedMaybe_0);\n  element = $doc.createElement('audio');\n  if (!isSupportedRunTime(element)) {\n    return null;\n  }\n  return new Audio_1(element);\n}\n\nfunction isSupported(){\n  var element;\n  !detector_0 && (detector_0 = new Audio$AudioElementSupportDetectedMaybe_0);\n  element = $doc.createElement('audio');\n  if (!isSupportedRunTime(element)) {\n    return false;\n  }\n  return true;\n}\n\ndefineSeed(194, 195, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Audio_1);\nvar detector_0;\nfunction isSupportedRunTime(element){\n  return !!element.canPlayType;\n}\n\ndefineSeed(197, 1, {});\nfunction Audio$AudioElementSupportDetectedMaybe_0(){\n}\n\ndefineSeed(196, 197, {}, Audio$AudioElementSupportDetectedMaybe_0);\nfunction SafeUriString_0(uri_0){\n  if (uri_0 == null) {\n    throw new NullPointerException_1('uri is null');\n  }\n  this.uri_0 = uri_0;\n}\n\ndefineSeed(199, 1, makeCastMap([Q$SafeUri, Q$SafeUriString]), SafeUriString_0);\n_.equals$ = function equals_6(obj){\n  if (!instanceOf(obj, Q$SafeUri)) {\n    return false;\n  }\n  return $equals(this.uri_0, dynamicCast(dynamicCast(obj, Q$SafeUri), Q$SafeUriString).uri_0);\n}\n;\n_.hashCode$ = function hashCode_8(){\n  return getHashCode_0(this.uri_0);\n}\n;\nfunction $clinit_UriUtils(){\n  $clinit_UriUtils = nullMethod;\n  new RegExp('%5B', 'g');\n  new RegExp('%5D', 'g');\n}\n\nfunction $getItem(this$static, key){\n  return $getItem_0(this$static.storage, key);\n}\n\nfunction $setItem(this$static, key, data_0){\n  $setItem_0(this$static.storage, key, data_0);\n}\n\nfunction Storage_1(){\n  this.storage = 'localStorage';\n}\n\nfunction getLocalStorageIfSupported(){\n  if ((!supportDetectorImpl && (supportDetectorImpl = new Storage$StorageSupportDetector_0) , supportDetectorImpl).isLocalStorageSupported) {\n    !localStorage_0 && (localStorage_0 = new Storage_1);\n    return localStorage_0;\n  }\n  return null;\n}\n\ndefineSeed(201, 1, {}, Storage_1);\nvar localStorage_0, supportDetectorImpl;\nfunction Storage$StorageSupportDetector_0(){\n  this.isLocalStorageSupported = $wnd.localStorage != null;\n  $wnd.sessionStorage != null;\n}\n\ndefineSeed(202, 1, {}, Storage$StorageSupportDetector_0);\n_.isLocalStorageSupported = false;\nfunction $getItem_0(storage, key){\n  return $wnd[storage].getItem(key);\n}\n\nfunction $setItem_0(storage, key, data_0){\n  $getItem_0(storage, key);\n  $wnd[storage].setItem(key, data_0);\n}\n\ndefineSeed(205, 1, {});\nfunction PassthroughParser_0(){\n}\n\ndefineSeed(206, 1, {}, PassthroughParser_0);\nvar INSTANCE_1;\nfunction PassthroughRenderer_0(){\n}\n\ndefineSeed(207, 205, {}, PassthroughRenderer_0);\nvar INSTANCE_2;\nfunction $calcNewVelocity(initialVelocity, decelFactor, oldVelocity, minDecel){\n  var maxVelocityX, minVelocityX, newVelocity;\n  newVelocity = initialVelocity * decelFactor;\n  if (oldVelocity >= 0) {\n    maxVelocityX = 0 > oldVelocity - minDecel?0:oldVelocity - minDecel;\n    newVelocity = newVelocity < maxVelocityX?newVelocity:maxVelocityX;\n  }\n   else {\n    minVelocityX = 0 < oldVelocity + minDecel?0:oldVelocity + minDecel;\n    newVelocity = newVelocity > minVelocityX?newVelocity:minVelocityX;\n  }\n  return newVelocity;\n}\n\nfunction $updateState(state){\n  var decelFactor, dist, elapsedMillis, ellapsedMillis, initialVelocity, minDecel, newVelocity, newVelocityX, newVelocityY, oldVelocity, position, totalEllapsedMillis;\n  ellapsedMillis = state.elapsedMillis;\n  totalEllapsedMillis = state.cumulativeElapsedMillis;\n  initialVelocity = state.initialVelocity;\n  oldVelocity = state.velocity;\n  decelFactor = pow_1(0.9993, totalEllapsedMillis);\n  minDecel = ellapsedMillis * 5.0E-4;\n  newVelocityX = $calcNewVelocity(initialVelocity.x_0, decelFactor, oldVelocity.x_0, minDecel);\n  newVelocityY = $calcNewVelocity(initialVelocity.y_0, decelFactor, oldVelocity.y_0, minDecel);\n  newVelocity = new Point_0(newVelocityX, newVelocityY);\n  state.velocity = newVelocity;\n  elapsedMillis = state.elapsedMillis;\n  dist = $mult(newVelocity, new Point_0(elapsedMillis, elapsedMillis));\n  position = state.position;\n  $setPosition(state, new Point_0(position.x_0 + dist.x_0, position.y_0 + dist.y_0));\n  if (abs_0(newVelocity.x_0) < 0.02 && abs_0(newVelocity.y_0) < 0.02) {\n    return false;\n  }\n  return true;\n}\n\nfunction DefaultMomentum_0(){\n}\n\ndefineSeed(208, 1, {}, DefaultMomentum_0);\nfunction $setCumulativeElapsedMillis(this$static, cumulativeElapsedMillis){\n  this$static.cumulativeElapsedMillis = cumulativeElapsedMillis;\n}\n\nfunction $setElapsedMillis(this$static, elapsedMillis){\n  this$static.elapsedMillis = elapsedMillis;\n}\n\nfunction $setPosition(this$static, position){\n  this$static.position = position;\n}\n\nfunction Momentum$State_0(initialPosition, initialVelocity){\n  this.initialVelocity = initialVelocity;\n  this.position = new Point_1(initialPosition);\n  this.velocity = new Point_1(initialVelocity);\n}\n\ndefineSeed(209, 1, {}, Momentum$State_0);\n_.cumulativeElapsedMillis = 0;\n_.elapsedMillis = 0;\nfunction $minus(this$static, c){\n  return new Point_0(this$static.x_0 - c.x_0, this$static.y_0 - c.y_0);\n}\n\nfunction $mult(this$static, c){\n  return new Point_0(this$static.x_0 * c.x_0, this$static.y_0 * c.y_0);\n}\n\nfunction $plus(this$static, c){\n  return new Point_0(this$static.x_0 + c.x_0, this$static.y_0 + c.y_0);\n}\n\nfunction Point_0(x_0, y_0){\n  this.x_0 = x_0;\n  this.y_0 = y_0;\n}\n\nfunction Point_1(c){\n  Point_0.call(this, c.x_0, c.y_0);\n}\n\ndefineSeed(210, 1, makeCastMap([Q$Point]), Point_0, Point_1);\n_.equals$ = function equals_7(obj){\n  var c;\n  if (!instanceOf(obj, Q$Point)) {\n    return false;\n  }\n  c = dynamicCast(obj, Q$Point);\n  return this.x_0 == c.x_0 && this.y_0 == c.y_0;\n}\n;\n_.hashCode$ = function hashCode_9(){\n  return round_int(this.x_0) ^ round_int(this.y_0);\n}\n;\n_.toString$ = function toString_18(){\n  return 'Point(' + this.x_0 + ',' + this.y_0 + ')';\n}\n;\n_.x_0 = 0;\n_.y_0 = 0;\nfunction $calculateEndVelocity(from, to){\n  var dist, time;\n  time = to.time - from.time;\n  if (time <= 0) {\n    return null;\n  }\n  dist = $minus(from.point, to.point);\n  return new Point_0(dist.x_0 / time, dist.y_0 / time);\n}\n\nfunction $cancelAll(this$static){\n  this$static.touching = false;\n  this$static.dragging = false;\n  this$static.momentumCommand = null;\n}\n\nfunction $getTouchFromEvent(event_0){\n  var touches;\n  touches = event_0.nativeEvent.touches;\n  return touches.length > 0?touches[0]:null;\n}\n\nfunction $getWidgetScrollPosition(this$static){\n  return new Point_0($getHorizontalScrollPosition(this$static.widget), $getVerticalScrollPosition(this$static.widget));\n}\n\nfunction $hitTest(point1, point2){\n  var absDiffX, absDiffY, diff;\n  diff = new Point_0(point1.x_0 - point2.x_0, point1.y_0 - point2.y_0);\n  absDiffX = abs_0(diff.x_0);\n  absDiffY = abs_0(diff.y_0);\n  return absDiffX <= 25 && absDiffY <= 25;\n}\n\nfunction $isClickScrollTriggeringTouch(this$static, clickPoint){\n  if (this$static.recentScrollTriggeringTouchPosition.point) {\n    return $hitTest(clickPoint, this$static.recentScrollTriggeringTouchPosition.point);\n  }\n  return false;\n}\n\nfunction $isClickTouchPositionDuringMomentum(this$static, clickPoint){\n  var currentTime, point, point$iterator, same;\n  currentTime = currentTimeMillis();\n  same = false;\n  for (point$iterator = new AbstractList$IteratorImpl_0(this$static.touchPositionsDuringMomentum); point$iterator.i < point$iterator.this$0_0.size_1();) {\n    point = dynamicCast($next_3(point$iterator), Q$TouchScroller$TemporalPoint);\n    if (currentTime - point.time <= 2500 && $hitTest(clickPoint, point.point)) {\n      same = true;\n      break;\n    }\n  }\n  return same;\n}\n\nfunction $onDragEnd(this$static){\n  var endVelocity;\n  if (!this$static.momentum) {\n    return;\n  }\n  endVelocity = $calculateEndVelocity(this$static.recentTouchPosition, this$static.lastTouchPosition);\n  if (endVelocity) {\n    this$static.momentumCommand = new TouchScroller$MomentumCommand_0(this$static, endVelocity);\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumCommand), 16);\n  }\n}\n\nfunction $onTouchEnd(this$static){\n  if (!this$static.touching) {\n    return;\n  }\n  this$static.touching = false;\n  if (this$static.dragging) {\n    this$static.dragging = false;\n    $onDragEnd(this$static);\n  }\n}\n\nfunction $onTouchMove(this$static, event_0){\n  var absDiffX, absDiffY, diff, hMax, hMin, hPosition, touch, touchPoint, touchTime, trackingTime, vMax, vPosition, diff_0, curScrollPosition;\n  if (!this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  touchPoint = new Point_0($touchGetSubPixelPageX(touch) | 0, $touchGetSubPixelPageY(touch) | 0);\n  touchTime = currentTimeMillis();\n  $setTemporalPoint(this$static.lastTouchPosition, touchPoint, touchTime);\n  if (!this$static.dragging) {\n    diff = $minus(touchPoint, this$static.startTouchPosition);\n    absDiffX = abs_0(diff.x_0);\n    absDiffY = abs_0(diff.y_0);\n    if (absDiffX > 5 || absDiffY > 5) {\n      $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, this$static.recentTouchPosition.point, this$static.recentTouchPosition.time);\n      if (absDiffX > absDiffY) {\n        hPosition = $getHorizontalScrollPosition(this$static.widget);\n        hMin = $getMinimumHorizontalScrollPosition_0(this$static.widget);\n        hMax = $getMaximumHorizontalScrollPosition_0(this$static.widget);\n        if (diff.x_0 < 0 && hMax <= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.x_0 > 0 && hMin >= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n       else {\n        vPosition = $getVerticalScrollPosition(this$static.widget);\n        vMax = $getMaximumVerticalScrollPosition(this$static.widget);\n        if (diff.y_0 < 0 && vMax <= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.y_0 > 0 && 0 >= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n      this$static.dragging = true;\n    }\n  }\n  $eventPreventDefault(event_0.nativeEvent);\n  if (this$static.dragging) {\n    diff_0 = $minus(this$static.startTouchPosition, this$static.lastTouchPosition.point);\n    curScrollPosition = $plus(this$static.startScrollPosition, diff_0);\n    $setHorizontalScrollPosition(this$static.widget, round_int(curScrollPosition.x_0));\n    $setVerticalScrollPosition(this$static.widget, round_int(curScrollPosition.y_0));\n    trackingTime = touchTime - this$static.recentTouchPosition.time;\n    if (trackingTime > 200 && !!this$static.recentTouchPositionOnDeck) {\n      $setTemporalPoint(this$static.recentTouchPosition, this$static.recentTouchPositionOnDeck.point, this$static.recentTouchPositionOnDeck.time);\n      this$static.recentTouchPositionOnDeck = null;\n    }\n     else \n      trackingTime > 100 && !this$static.recentTouchPositionOnDeck && (this$static.recentTouchPositionOnDeck = new TouchScroller$TemporalPoint_1(touchPoint, touchTime));\n  }\n}\n\nfunction $onTouchStart(this$static, event_0){\n  var startTouchTime, touch;\n  $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, null, 0);\n  if (this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  this$static.startTouchPosition = new Point_0($touchGetSubPixelPageX(touch) | 0, $touchGetSubPixelPageY(touch) | 0);\n  startTouchTime = currentTimeMillis();\n  $setTemporalPoint(this$static.recentTouchPosition, this$static.startTouchPosition, startTouchTime);\n  $setTemporalPoint(this$static.lastTouchPosition, this$static.startTouchPosition, startTouchTime);\n  this$static.recentTouchPositionOnDeck = null;\n  if (this$static.momentumCommand) {\n    $add(this$static.touchPositionsDuringMomentum, new TouchScroller$TemporalPoint_1(this$static.startTouchPosition, startTouchTime));\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumTouchRemovalCommand), 2500);\n  }\n  this$static.startScrollPosition = new Point_0($getHorizontalScrollPosition(this$static.widget), $getVerticalScrollPosition(this$static.widget));\n  $cancelAll(this$static);\n  this$static.touching = true;\n}\n\nfunction $removeAttachHandler(this$static){\n  if (this$static.attachHandlerReg) {\n    $removeHandler(this$static.attachHandlerReg.real);\n    this$static.attachHandlerReg = null;\n  }\n}\n\nfunction $removeBustClickHandler(this$static){\n  if (this$static.bustClickHandlerReg) {\n    $removeHandler(this$static.bustClickHandlerReg.real);\n    this$static.bustClickHandlerReg = null;\n  }\n}\n\nfunction $setMomentum(this$static, momentum){\n  this$static.momentum = momentum;\n  !momentum && (this$static.momentumCommand = null);\n}\n\nfunction $setTargetWidget(this$static, widget){\n  var reg, reg$iterator;\n  if (this$static.widget == widget) {\n    return;\n  }\n  $cancelAll(this$static);\n  for (reg$iterator = new AbstractList$IteratorImpl_0(this$static.handlerRegs); reg$iterator.i < reg$iterator.this$0_0.size_1();) {\n    reg = dynamicCast($next_3(reg$iterator), Q$HandlerRegistration);\n    $removeHandler(reg.real);\n  }\n  $clear(this$static.handlerRegs);\n  $removeAttachHandler(this$static);\n  $removeBustClickHandler(this$static);\n  this$static.widget = widget;\n  if (widget) {\n    widget.attached && ($removeBustClickHandler(this$static) , this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6_0(this$static)));\n    this$static.attachHandlerReg = $addHandler(widget, new TouchScroller$1_0(this$static), (!TYPE_7 && (TYPE_7 = new GwtEvent$Type_0) , TYPE_7));\n    $add(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$2_0(this$static), ($clinit_TouchStartEvent() , $clinit_TouchStartEvent() , TYPE_6)));\n    $add(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$3_0(this$static), ($clinit_TouchMoveEvent() , $clinit_TouchMoveEvent() , TYPE_5)));\n    $add(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$4_0(this$static), ($clinit_TouchEndEvent() , $clinit_TouchEndEvent() , TYPE_4)));\n    $add(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$5_0(this$static), ($clinit_TouchCancelEvent() , $clinit_TouchCancelEvent() , TYPE_3)));\n  }\n}\n\nfunction $setWidgetScrollPosition(this$static, position){\n  $setHorizontalScrollPosition(this$static.widget, round_int(position.x_0));\n  $setVerticalScrollPosition(this$static.widget, round_int(position.y_0));\n}\n\nfunction $setupBustClickHandler(this$static){\n  $removeBustClickHandler(this$static);\n  this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6_0(this$static));\n}\n\nfunction TouchScroller_0(){\n  this.handlerRegs = new ArrayList_0;\n  this.lastTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.recentTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.recentScrollTriggeringTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.touchPositionsDuringMomentum = new ArrayList_0;\n  this.momentumTouchRemovalCommand = new TouchScroller$MomentumTouchRemovalCommand_0(this);\n  $setMomentum(this, new DefaultMomentum_0);\n}\n\ndefineSeed(211, 1, {}, TouchScroller_0);\n_.dragging = false;\n_.touching = false;\nvar isSupported_0;\nfunction TouchScroller$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(212, 1, makeCastMap([Q$AttachEvent$Handler, Q$EventHandler]), TouchScroller$1_0);\nfunction TouchScroller$2_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(213, 1, makeCastMap([Q$TouchStartHandler, Q$EventHandler]), TouchScroller$2_0);\nfunction TouchScroller$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(214, 1, makeCastMap([Q$TouchMoveHandler, Q$EventHandler]), TouchScroller$3_0);\nfunction TouchScroller$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(215, 1, makeCastMap([Q$TouchEndHandler, Q$EventHandler, Q$TouchScroller$4]), TouchScroller$4_0);\nfunction TouchScroller$5_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(216, 1, makeCastMap([Q$TouchCancelHandler, Q$EventHandler, Q$TouchScroller$5]), TouchScroller$5_0);\nfunction TouchScroller$6_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(217, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), TouchScroller$6_0);\n_.onPreviewNativeEvent = function onPreviewNativeEvent(event_0){\n  var clickPoint;\n  if (1 == $getTypeInt(event_0.nativeEvent)) {\n    clickPoint = new Point_0((event_0.nativeEvent.clientX || 0) | 0, (event_0.nativeEvent.clientY || 0) | 0);\n    if ($isClickScrollTriggeringTouch(this.this$0, clickPoint) || $isClickTouchPositionDuringMomentum(this.this$0, clickPoint)) {\n      event_0.isCanceled = true;\n      $eventStopPropagation(event_0.nativeEvent);\n      $eventPreventDefault(event_0.nativeEvent);\n    }\n  }\n}\n;\nfunction $finish(this$static){\n  if (this$static.windowResizeHandler) {\n    $removeHandler(this$static.windowResizeHandler.real);\n    this$static.windowResizeHandler = null;\n  }\n  this$static == this$static.this$0.momentumCommand && (this$static.this$0.momentumCommand = null);\n}\n\nfunction TouchScroller$MomentumCommand_0(this$0, endVelocity){\n  this.this$0 = this$0;\n  this.duration = new Duration_0;\n  this.initialPosition = $getWidgetScrollPosition(this.this$0);\n  this.state = new Momentum$State_0(this.initialPosition, endVelocity);\n  this.windowResizeHandler = addResizeHandler(new TouchScroller$MomentumCommand$1_0(this));\n}\n\ndefineSeed(218, 1, {}, TouchScroller$MomentumCommand_0);\n_.execute_1 = function execute_6(){\n  var cumulativeElapsedMillis, hMax, hMin, hPos, notDone, vMax, vPos;\n  if (this != this.this$0.momentumCommand) {\n    $finish(this);\n    return false;\n  }\n  cumulativeElapsedMillis = $elapsedMillis(this.duration);\n  $setElapsedMillis(this.state, cumulativeElapsedMillis - this.lastElapsedMillis);\n  this.lastElapsedMillis = cumulativeElapsedMillis;\n  $setCumulativeElapsedMillis(this.state, cumulativeElapsedMillis);\n  notDone = $updateState(this.state);\n  notDone || $finish(this);\n  $setWidgetScrollPosition(this.this$0, this.state.position);\n  hPos = round_int(this.state.position.x_0);\n  hMin = $getMinimumHorizontalScrollPosition_0(this.this$0.widget);\n  hMax = $getMaximumHorizontalScrollPosition_0(this.this$0.widget);\n  vMax = $getMaximumVerticalScrollPosition(this.this$0.widget);\n  vPos = round_int(this.state.position.y_0);\n  if ((vMax <= vPos || 0 >= vPos) && (hMax <= hPos || hMin >= hPos)) {\n    $finish(this);\n    return false;\n  }\n  return notDone;\n}\n;\n_.lastElapsedMillis = 0;\nfunction TouchScroller$MomentumCommand$1_0(this$1){\n  this.this$1 = this$1;\n}\n\ndefineSeed(219, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), TouchScroller$MomentumCommand$1_0);\n_.onResize = function onResize(event_0){\n  $finish(this.this$1);\n}\n;\nfunction TouchScroller$MomentumTouchRemovalCommand_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(220, 1, {}, TouchScroller$MomentumTouchRemovalCommand_0);\n_.execute_1 = function execute_7(){\n  var currentTime, iter, point;\n  currentTime = currentTimeMillis();\n  iter = new AbstractList$IteratorImpl_0(this.this$0.touchPositionsDuringMomentum);\n  while (iter.i < iter.this$0_0.size_1()) {\n    point = dynamicCast($next_3(iter), Q$TouchScroller$TemporalPoint);\n    currentTime - point.time >= 2500 && $remove_10(iter);\n  }\n  return this.this$0.touchPositionsDuringMomentum.size_0 != 0;\n}\n;\nfunction $setTemporalPoint(this$static, point, time){\n  this$static.point = point;\n  this$static.time = time;\n}\n\nfunction TouchScroller$TemporalPoint_0(){\n}\n\nfunction TouchScroller$TemporalPoint_1(point, time){\n  this.point = point;\n  this.time = time;\n}\n\ndefineSeed(221, 1, makeCastMap([Q$TouchScroller$TemporalPoint]), TouchScroller$TemporalPoint_0, TouchScroller$TemporalPoint_1);\n_.time = 0;\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl_1 = new DOMImplMozilla_0;\n}\n\nfunction appendChild(parent_0, child){\n  $clinit_DOM();\n  $appendChild(parent_0, ($clinit_PotentialElement() , $resolve(child)));\n}\n\nfunction dispatchEvent_0(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child, index_0){\n  $clinit_DOM();\n  $insertChild(parent_0, ($clinit_PotentialElement() , $resolve(child)), index_0);\n}\n\nfunction previewEvent(evt){\n  $clinit_DOM();\n  var ret;\n  ret = fire_4(handlers_0, evt);\n  if (!ret && !!evt) {\n    $eventStopPropagation(evt);\n    $eventPreventDefault(evt);\n  }\n  return ret;\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent_0(impl_1, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents_0(impl_1, elem, eventBits);\n}\n\nvar currentEvent = null, impl_1, sCaptureElem;\n",
"function $onModuleLoad(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction $getTypeInt(this$static){\n  return $clinit_DOM() , $eventGetTypeInt(this$static.type);\n}\n\nfunction addNativePreviewHandler(handler){\n  $clinit_DOM();\n  $maybeInitializeEventSystem(impl_1);\n  !TYPE_11 && (TYPE_11 = new GwtEvent$Type_0);\n  if (!handlers_0) {\n    handlers_0 = new HandlerManager_1(null, true);\n    singleton = new Event$NativePreviewEvent_0;\n  }\n  return $addHandler_0(handlers_0, TYPE_11, handler);\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nfunction setEventListener(elem, listener){\n  $clinit_DOM();\n  setEventListener_0(elem, listener);\n}\n\nfunction sinkEvents_0(elem){\n  $clinit_DOM();\n  $sinkEvents_0(impl_1, elem, 32768);\n}\n\nvar handlers_0;\nfunction $revive(this$static){\n  this$static.dead = false;\n  this$static.source = null;\n  this$static.isCanceled = false;\n  this$static.isConsumed = false;\n  this$static.isFirstHandler = true;\n  this$static.nativeEvent = null;\n}\n\nfunction $setNativeEvent_0(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction Event$NativePreviewEvent_0(){\n}\n\nfunction fire_4(handlers, nativeEvent){\n  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;\n  if (!!TYPE_11 && !!handlers && $isEventHandled(handlers, TYPE_11)) {\n    lastIsCanceled = singleton.isCanceled;\n    lastIsConsumed = singleton.isConsumed;\n    lastIsFirstHandler = singleton.isFirstHandler;\n    lastNativeEvent = singleton.nativeEvent;\n    $revive(singleton);\n    $setNativeEvent_0(singleton, nativeEvent);\n    $fireEvent_0(handlers, singleton);\n    ret = !(singleton.isCanceled && !singleton.isConsumed);\n    singleton.isCanceled = lastIsCanceled;\n    singleton.isConsumed = lastIsConsumed;\n    singleton.isFirstHandler = lastIsFirstHandler;\n    singleton.nativeEvent = lastNativeEvent;\n    return ret;\n  }\n  return true;\n}\n\ndefineSeed(226, 130, {}, Event$NativePreviewEvent_0);\n_.dispatch = function dispatch_11(handler){\n  dynamicCast(handler, Q$Event$NativePreviewHandler).onPreviewNativeEvent(this);\n  singleton.isFirstHandler = false;\n}\n;\n_.getAssociatedType = function getAssociatedType_12(){\n  return TYPE_11;\n}\n;\n_.revive = function revive_0(){\n  $revive(this);\n}\n;\n_.isCanceled = false;\n_.isConsumed = false;\n_.isFirstHandler = false;\nvar TYPE_11, singleton;\nfunction $clinit_History(){\n  $clinit_History = nullMethod;\n  impl_2 = new HistoryImplMozilla_0;\n  $init(impl_2)?null:(impl_2 = null);\n}\n\nfunction addValueChangeHandler(handler){\n  $clinit_History();\n  return impl_2?$addValueChangeHandler(impl_2, handler):null;\n}\n\nvar impl_2;\nfunction $clinit_Window(){\n  $clinit_Window = nullMethod;\n  impl_3 = new WindowImplMozilla_0;\n}\n\nfunction addCloseHandler(handler){\n  $clinit_Window();\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_8?TYPE_8:(TYPE_8 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler_0((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), type_0, handler);\n}\n\nfunction addResizeHandler(handler){\n  $clinit_Window();\n  maybeInitializeCloseHandlers();\n  maybeInitializeResizeHandlers();\n  return addHandler((!TYPE_9 && (TYPE_9 = new GwtEvent$Type_0) , TYPE_9), handler);\n}\n\nfunction alert_0(msg){\n  $clinit_Window();\n  $wnd.alert(msg);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initWindowCloseHandler(impl_3);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction maybeInitializeResizeHandlers(){\n  if (!resizeHandlersInitialized) {\n    $initWindowResizeHandler(impl_3);\n    resizeHandlersInitialized = true;\n  }\n}\n\nfunction onClosing(){\n  $clinit_Window();\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_1 && $fireEvent_0(handlers_1, event_0);\n    return null;\n  }\n  return null;\n}\n\nfunction onResize_0(){\n  $clinit_Window();\n  var height, width_0;\n  if (resizeHandlersInitialized) {\n    width_0 = $getClientWidth($doc);\n    height = $getClientHeight($doc);\n    if (lastResizeWidth != width_0 || lastResizeHeight != height) {\n      lastResizeWidth = width_0;\n      lastResizeHeight = height;\n      fire_2((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n    }\n  }\n}\n\nvar closeHandlersInitialized = false, handlers_1, impl_3, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_12 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(229, 130, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_12(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_13(){\n  return TYPE_12;\n}\n;\nvar TYPE_12;\nfunction buildListParamMap(queryString){\n  var entry, entry$iterator, kv, kvPair, kvPair$array, kvPair$index, kvPair$max, out, qs, values, regexp;\n  out = new HashMap_0;\n  if (queryString != null && queryString.length > 1) {\n    qs = $substring(queryString, 1);\n    for (kvPair$array = $split(qs, '&', 0) , kvPair$index = 0 , kvPair$max = kvPair$array.length; kvPair$index < kvPair$max; ++kvPair$index) {\n      kvPair = kvPair$array[kvPair$index];\n      kv = $split(kvPair, '=', 2);\n      if (kv[0].length == 0) {\n        continue;\n      }\n      values = dynamicCast(out.get_1(kv[0]), Q$List);\n      if (!values) {\n        values = new ArrayList_0;\n        out.put(kv[0], values);\n      }\n      values.add_0(kv.length > 1?(throwIfNull('encodedURLComponent', kv[1]) , regexp = /\\+/g , decodeURIComponent(kv[1].replace(regexp, '%20'))):'');\n    }\n  }\n  for (entry$iterator = out.entrySet_0().iterator(); entry$iterator.hasNext();) {\n    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);\n    entry.setValue(unmodifiableList(dynamicCast(entry.getValue(), Q$List)));\n  }\n  out = ($clinit_Collections() , new Collections$UnmodifiableMap_0(out));\n  return out;\n}\n\nfunction ensureListParameterMap(){\n  var currentQueryString;\n  currentQueryString = $getQueryString($clinit_Window());\n  if (!listParamMap || !$equals(cachedQueryString, currentQueryString)) {\n    listParamMap = buildListParamMap(currentQueryString);\n    cachedQueryString = currentQueryString;\n  }\n}\n\nvar cachedQueryString = '', listParamMap;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(231, 152, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    $initSyntheticMouseUpEvents();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $sinkEvents_0(dom, elem, 0);\n      setEventListener_0(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\nfunction maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l_0 = diEvents.length; i < l_0; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener_0(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(232, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(233, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_2, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_1 = $entry(dispatchEvent_2);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $insertChild(parent_0, toAdd, index_0){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index_0) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $sinkBitlessEvent_0(this$static, elem, eventTypeName){\n  var dispatchMap, dispatcher;\n  $maybeInitializeEventSystem(this$static);\n  dispatchMap = bitlessEventDispatchers;\n  dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_1:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_1:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_1:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_1:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_1:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_1:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_1:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_1:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_1:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_1:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_1:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_1:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_1:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_1:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_1:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_1:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_1:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_1:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_1:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_1:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_1:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_1:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_1:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_1:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_1:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_1:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  previewEvent(evt);\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  $clinit_DOMImplStandard();\n  !previewEvent(evt);\n  return;\n}\n\nfunction dispatchDragEvent(evt){\n  $eventPreventDefault(evt);\n  dispatchEvent_2(evt);\n}\n\nfunction dispatchEvent_2(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_0(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = evt.currentTarget;\n  $setPropertyString(element, '__gwtLastUnhandledEvent', evt.type);\n  dispatchEvent_2(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = evt.currentTarget;\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(235, 232, {});\nvar bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_1, dispatchUnhandledEvent;\nfunction $clinit_DOMImplMozilla(){\n  $clinit_DOMImplMozilla = nullMethod;\n  $clinit_DOMImplStandard();\n  captureEventDispatchers['DOMMouseScroll'] = dispatchCapturedMouseEvent;\n}\n\nfunction $initSyntheticMouseUpEvents(){\n  $wnd.addEventListener('mouseout', $entry(function(evt){\n    var cap = ($clinit_DOMImplStandard() , captureElem);\n    if (cap && !evt.relatedTarget) {\n      if ('html' == evt.target.tagName.toLowerCase()) {\n        var muEvent = $doc.createEvent('MouseEvents');\n        muEvent.initMouseEvent('mouseup', true, true, $wnd, 0, evt.screenX, evt.screenY, evt.clientX, evt.clientY, evt.ctrlKey, evt.altKey, evt.shiftKey, evt.metaKey, evt.button, null);\n        cap.dispatchEvent(muEvent);\n      }\n    }\n  }\n  ), true);\n}\n\nfunction $sinkEvents_0(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n  bits & 131072 && elem.addEventListener('DOMMouseScroll', ($clinit_DOMImplStandard() , dispatchEvent_1), false);\n}\n\nfunction DOMImplMozilla_0(){\n  $clinit_DOMImplMozilla();\n}\n\ndefineSeed(234, 235, {}, DOMImplMozilla_0);\nfunction $get_2(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  if (index_0 < 0) {\n    return null;\n  }\n  return dynamicCast($get(this$static.uiObjectList, index_0), Q$UIObject);\n}\n\nfunction $put(this$static, uiObject){\n  var index_0;\n  if (!this$static.freeList) {\n    index_0 = this$static.uiObjectList.size_0;\n    $add(this$static.uiObjectList, uiObject);\n  }\n   else {\n    index_0 = this$static.freeList.index_0;\n    $set(this$static.uiObjectList, index_0, uiObject);\n    this$static.freeList = this$static.freeList.next;\n  }\n  ($clinit_DOM() , uiObject.element)['__uiObjectID'] = index_0;\n}\n\nfunction $removeByElement(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  elem['__uiObjectID'] = null;\n  $set(this$static.uiObjectList, index_0, null);\n  this$static.freeList = new ElementMapperImpl$FreeNode_0(index_0, this$static.freeList);\n}\n\nfunction ElementMapperImpl_0(){\n  this.uiObjectList = new ArrayList_0;\n}\n\nfunction getIndex(elem){\n  var index_0 = elem['__uiObjectID'];\n  return index_0 == null?-1:index_0;\n}\n\ndefineSeed(236, 1, {}, ElementMapperImpl_0);\n_.freeList = null;\nfunction ElementMapperImpl$FreeNode_0(index_0, next){\n  this.index_0 = index_0;\n  this.next = next;\n}\n\ndefineSeed(237, 1, {}, ElementMapperImpl$FreeNode_0);\n_.index_0 = 0;\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $addValueChangeHandler(this$static, handler){\n  return $addHandler_0(this$static.handlers, (!TYPE_10 && (TYPE_10 = new GwtEvent$Type_0) , TYPE_10), handler);\n}\n\nfunction $decodeFragment(encodedFragment){\n  return decodeURI(encodedFragment.replace('%23', '#'));\n}\n\nfunction setToken(token){\n  token_1 = token;\n}\n\ndefineSeed(239, 1, makeCastMap([Q$HasHandlers]));\n_.decodeFragment = function decodeFragment(encodedFragment){\n  return $decodeFragment(encodedFragment);\n}\n;\n_.fireEvent = function fireEvent_1(event_0){\n  $fireEvent_0(this.handlers, event_0);\n}\n;\n_.newItemOnEvent = function newItemOnEvent(historyToken){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    fire_3(this);\n  }\n}\n;\nvar token_1 = '';\nfunction $init(this$static){\n  var token_0 = '';\n  var hash_0 = $wnd.location.hash;\n  hash_0.length > 0 && (token_0 = this$static.decodeFragment(hash_0.substring(1)));\n  setToken(token_0);\n  var historyImpl = this$static;\n  var checkHistory = $entry(function(){\n    var token = '', hash = $wnd.location.hash;\n    hash.length > 0 && (token = historyImpl.decodeFragment(hash.substring(1)));\n    historyImpl.newItemOnEvent(token);\n  }\n  );\n  var checkHistoryCycle = function(){\n    setTimeout_0(checkHistoryCycle, 250);\n    checkHistory();\n  }\n  ;\n  checkHistoryCycle();\n  return true;\n}\n\ndefineSeed(241, 239, makeCastMap([Q$HasHandlers]));\nfunction HistoryImplMozilla_0(){\n  this.handlers = new HandlerManager_0(null);\n}\n\ndefineSeed(240, 241, makeCastMap([Q$HasHandlers]), HistoryImplMozilla_0);\n_.decodeFragment = function decodeFragment_0(encodedFragment){\n  if ($wnd.navigator.userAgent.indexOf('Trident') != -1) {\n    return $decodeFragment(encodedFragment);\n  }\n  return encodedFragment;\n}\n;\nfunction $getQueryString(){\n  return $wnd.location.search;\n}\n\nfunction $initWindowCloseHandler(this$static){\n  var oldOnBeforeUnload = this$static.oldOnBeforeUnload = $wnd.onbeforeunload;\n  var oldOnUnload = this$static.oldOnUnload = $wnd.onunload;\n  $wnd.onbeforeunload = function(evt){\n    var ret, oldRet;\n    try {\n      ret = $entry(onClosing)();\n    }\n     finally {\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\n    }\n    if (ret != null) {\n      return ret;\n    }\n    if (oldRet != null) {\n      return oldRet;\n    }\n  }\n  ;\n  $wnd.onunload = $entry(function(evt){\n    try {\n      $clinit_Window();\n      closeHandlersInitialized && fire_1((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n    }\n     finally {\n      oldOnUnload && oldOnUnload(evt);\n      $wnd.onresize = null;\n      $wnd.onscroll = null;\n      $wnd.onbeforeunload = null;\n      $wnd.onunload = null;\n    }\n  }\n  );\n}\n\nfunction $initWindowResizeHandler(this$static){\n  var oldOnResize = this$static.oldOnResize = $wnd.onresize;\n  $wnd.onresize = $entry(function(evt){\n    try {\n      onResize_0();\n    }\n     finally {\n      oldOnResize && oldOnResize(evt);\n    }\n  }\n  );\n}\n\ndefineSeed(242, 1, {});\nfunction WindowImplMozilla_0(){\n}\n\ndefineSeed(243, 242, {}, WindowImplMozilla_0);\nfunction IncompatibleRemoteServiceException_0(){\n  RuntimeException_1.call(this, 'This application is out of date, please click the refresh button on your browser.');\n}\n\ndefineSeed(245, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IncompatibleRemoteServiceException_0);\nfunction deserialize(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate(streamReader){\n  return new IncompatibleRemoteServiceException_0;\n}\n\nfunction serialize(streamWriter, instance){\n  null.nullMethod(instance.detailMessage);\n}\n\nfunction RpcTokenException_0(){\n  RuntimeException_1.call(this, 'Invalid RPC token');\n}\n\ndefineSeed(247, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RpcTokenException_0);\nfunction deserialize_0(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate_0(streamReader){\n  return new RpcTokenException_0;\n}\n\nfunction serialize_0(streamWriter, instance){\n  null.nullMethod(instance.nullField);\n}\n\nfunction deserialize_1(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate_1(streamReader){\n  return new IllegalArgumentException_0;\n}\n\nfunction deserialize_2(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate_2(streamReader){\n  return new NumberFormatException_0;\n}\n\nfunction deserialize_3(streamReader, instance){\n}\n\nfunction instantiate_3(streamReader){\n  return null.nullMethod();\n}\n\nfunction serialize_1(streamWriter, instance){\n  null.nullMethod();\n}\n\nfunction setDetailMessage(instance, value_0){\n  instance.detailMessage = value_0;\n}\n\ndefineSeed(255, 1, {});\ndefineSeed(259, 46, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add_0(this$static, child, container){\n  $removeFromParent(child);\n  $add_5(this$static.children, child);\n  $clinit_DOM();\n  $appendChild(container, ($clinit_PotentialElement() , $resolve(child.element)));\n  $setParent(child, this$static);\n}\n\nfunction $remove_1(this$static){\n  return $remove_2(this$static, $get_3(this$static.children));\n}\n\nfunction $remove_2(this$static, w){\n  var elem;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , w.element);\n    $removeChild($getParentElement(elem), elem);\n    $remove_7(this$static.children, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children = new WidgetCollection_0(this);\n}\n\ndefineSeed(258, 259, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_1(){\n  return new WidgetCollection$WidgetIterator_0(this.children);\n}\n;\n_.remove_1 = function remove_4(w){\n  return $remove_2(this, w);\n}\n;\nfunction $add_1(this$static, w){\n  $add_0(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\nfunction $remove_3(this$static, w){\n  var removed;\n  removed = $remove_2(this$static, w);\n  removed && changeToStaticPositioning(($clinit_DOM() , w.element));\n  return removed;\n}\n\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(257, 258, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.remove_1 = function remove_5(w){\n  return $remove_3(this, w);\n}\n;\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next_0(), Q$Widget);\n    try {\n      c.execute_2(w);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_7(caught, e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(260, 157, makeCastMap([Q$UmbrellaException, Q$UmbrellaException_0, Q$Serializable, Q$Exception, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(261, 1, {}, AttachDetachException$1_0);\n_.execute_2 = function execute_8(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(262, 1, {}, AttachDetachException$2_0);\n_.execute_2 = function execute_9(w){\n  w.onDetach();\n}\n;\nfunction $getText(this$static){\n  return ($clinit_DOM() , this$static.element).textContent;\n}\n\nfunction $setText(this$static){\n  $setInnerText(($clinit_DOM() , this$static.element), 'Add');\n}\n\nfunction ButtonBase_0(elem){\n  FocusWidget_0.call(this, elem);\n}\n\ndefineSeed(264, 45, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.type = 'button' , e));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Button');\n}\n\nfunction Button_1(html){\n  Button_0.call(this);\n  $setInnerHTML(($clinit_DOM() , this.element), html);\n}\n\nfunction Button_2(handler){\n  Button_1.call(this, 'Login');\n  $addDomHandler(this, handler, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n}\n\ndefineSeed(263, 264, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$Button, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_1, Button_2);\nfunction $setCellHorizontalAlignment(td, align_0){\n  $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellVerticalAlignment(td, align_0){\n  $setCellVerticalAlignment_0(($clinit_DOM() , td), align_0);\n}\n\nfunction $setCellVerticalAlignment_0(td, align_0){\n  $setPropertyImpl(td.style, 'verticalAlign', align_0.verticalAlignString);\n}\n\ndefineSeed(265, 258, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $initWidget(this$static, widget){\n  var elem;\n  if (this$static.widget) {\n    throw new IllegalStateException_1('Composite.initWidget() may only be called once.');\n  }\n  $removeFromParent(widget);\n  elem = ($clinit_DOM() , widget.element);\n  $setElement_0(this$static, elem);\n  isPotential(elem) && $setResolver(($clinit_PotentialElement() , elem), this$static);\n  this$static.widget = widget;\n  $setParent(widget, this$static);\n}\n\ndefineSeed(266, 46, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.isAttached = function isAttached_0(){\n  if (this.widget) {\n    return this.widget.attached;\n  }\n  return false;\n}\n;\n_.onAttach = function onAttach_1(){\n  if (this.eventsToSink != -1) {\n    $sinkEvents(this.widget, this.eventsToSink);\n    this.eventsToSink = -1;\n  }\n  this.widget.onAttach();\n  $clinit_DOM();\n  setEventListener_0(this.element, this);\n  fire_0(this, true);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  $onBrowserEvent(this, event_0);\n  $onBrowserEvent(this.widget, event_0);\n}\n;\n_.onDetach = function onDetach_0(){\n  try {\n    fire_0(this, false);\n  }\n   finally {\n    this.widget.onDetach();\n  }\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement_0(){\n  $setElement(this, $resolvePotentialElement());\n  return $clinit_DOM() , this.element;\n}\n;\nfunction $setTextOrHtml(this$static, content_0){\n  $setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineSeed(267, 1, {}, DirectionalTextHelper_0);\n",
"function $addCells(tbody, row, num){\n  var i, rowElem, tdElement;\n  rowElem = tbody.rows[row];\n  for (i = 0; i < num; i++) {\n    tdElement = $doc.createElement('td');\n    rowElem.appendChild(tdElement);\n  }\n}\n\nfunction $checkRowBounds(this$static, row){\n  var rowSize;\n  rowSize = $getDOMRowCount(this$static.bodyElem);\n  if (row >= rowSize || row < 0) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);\n  }\n}\n\nfunction $getDOMCellCount(tableBody, row){\n  var rowElement;\n  rowElement = tableBody.rows[row];\n  return rowElement.cells.length;\n}\n\nfunction $getDOMRowCount(tbody){\n  return ($clinit_DOM() , tbody).rows.length;\n}\n\nfunction $internalClearCell(this$static, td){\n  var maybeChild, widget;\n  maybeChild = ($clinit_DOM() , $getFirstChildElement(td));\n  widget = null;\n  !!maybeChild && (widget = dynamicCast($get_2(this$static.widgetMap, maybeChild), Q$Widget));\n  if (widget) {\n    $remove_4(this$static, widget);\n    return true;\n  }\n   else {\n    $setInnerHTML(td, '');\n    return false;\n  }\n}\n\nfunction $prepareColumn(column){\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a column with a negative index: ' + column);\n  }\n}\n\nfunction $remove_4(this$static, widget){\n  var elem;\n  if (widget.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(widget, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , widget.element);\n    $removeChild($getParentElement(elem), elem);\n    $removeByElement(this$static.widgetMap, elem);\n  }\n  return true;\n}\n\nfunction $setCellFormatter(this$static, cellFormatter){\n  this$static.cellFormatter = cellFormatter;\n}\n\nfunction $setColumnFormatter(this$static, formatter){\n  !!this$static.columnFormatter && (formatter.columnGroup = this$static.columnFormatter.columnGroup);\n  this$static.columnFormatter = formatter;\n  $prepareColumnGroup(this$static.columnFormatter);\n}\n\nfunction $setWidget(this$static, row, column, widget){\n  var td, td_0;\n  $prepareCell(this$static, row, column);\n  td = (td_0 = $getRawElement(this$static.cellFormatter, row, column) , $internalClearCell(this$static, ($clinit_DOM() , td_0)) , td_0);\n  if (widget) {\n    $removeFromParent(widget);\n    $put(this$static.widgetMap, widget);\n    appendChild(td, widget.element);\n    $setParent(widget, this$static);\n  }\n}\n\ndefineSeed(269, 259, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_2(){\n  return new HTMLTable$1_0(this);\n}\n;\n_.remove_1 = function remove_6(widget){\n  return $remove_4(this, widget);\n}\n;\nfunction $prepareCell(this$static, row, column){\n  var cellCount, required;\n  $prepareRow(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a column with a negative index: ' + column);\n  }\n  cellCount = ($checkRowBounds(this$static, row) , $getDOMCellCount(($clinit_DOM() , this$static.bodyElem), row));\n  required = column + 1 - cellCount;\n  required > 0 && $addCells(this$static.bodyElem, row, required);\n}\n\nfunction $prepareRow(this$static, row){\n  var i, rowCount, tr;\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a row with a negative index: ' + row);\n  }\n  rowCount = $getDOMRowCount(this$static.bodyElem);\n  for (i = rowCount; i <= row; i++) {\n    i != $getDOMRowCount(this$static.bodyElem) && $checkRowBounds(this$static, i);\n    tr = ($clinit_DOM() , $doc.createElement('tr'));\n    insertChild(this$static.bodyElem, tr, i);\n  }\n}\n\nfunction FlexTable_0(){\n  this.widgetMap = new ElementMapperImpl_0;\n  this.tableElem = ($clinit_DOM() , $doc.createElement('table'));\n  this.bodyElem = $doc.createElement('tbody');\n  appendChild(this.tableElem, this.bodyElem);\n  $setElement(this, this.tableElem);\n  $setCellFormatter(this, new FlexTable$FlexCellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n}\n\ndefineSeed(268, 269, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlexTable_0);\nfunction $getCellElement(tbody, row, col){\n  return tbody.rows[row].cells[col];\n}\n\nfunction $getRawElement(this$static, row, column){\n  return $getCellElement(this$static.this$0.bodyElem, row, column);\n}\n\ndefineSeed(271, 1, {});\nfunction FlexTable$FlexCellFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(270, 271, {}, FlexTable$FlexCellFormatter_0);\nfunction $add_2(this$static, w){\n  $add_0(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\nfunction FlowPanel_0(){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , $doc.createElement('div')));\n}\n\ndefineSeed(272, 258, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlowPanel_0);\nfunction $findNext(this$static){\n  while (++this$static.nextIndex < this$static.widgetList.size_0) {\n    if ($get(this$static.widgetList, this$static.nextIndex) != null) {\n      return;\n    }\n  }\n}\n\nfunction $next(this$static){\n  var result;\n  if (this$static.nextIndex >= this$static.widgetList.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  result = dynamicCast($get(this$static.widgetList, this$static.nextIndex), Q$Widget);\n  this$static.lastIndex_0 = this$static.nextIndex;\n  $findNext(this$static);\n  return result;\n}\n\nfunction HTMLTable$1_0(this$0){\n  this.this$0 = this$0;\n  this.widgetList = this.this$0.widgetMap.uiObjectList;\n  $findNext(this);\n}\n\ndefineSeed(273, 1, {}, HTMLTable$1_0);\n_.hasNext = function hasNext(){\n  return this.nextIndex < this.widgetList.size_0;\n}\n;\n_.next_0 = function next_0(){\n  return $next(this);\n}\n;\n_.remove_2 = function remove_7(){\n  var w;\n  if (this.lastIndex_0 < 0) {\n    throw new IllegalStateException_0;\n  }\n  w = dynamicCast($get(this.widgetList, this.lastIndex_0), Q$Widget);\n  $removeFromParent(w);\n  this.lastIndex_0 = -1;\n}\n;\n_.lastIndex_0 = -1;\n_.nextIndex = -1;\nfunction $ensureColumn(this$static, col){\n  $prepareColumn(col);\n  $prepareColumnGroup(this$static);\n  $resizeColumnGroup(this$static, col + 1, true);\n  return $getChild(this$static.columnGroup, col);\n}\n\nfunction $prepareColumnGroup(this$static){\n  if (!this$static.columnGroup) {\n    this$static.columnGroup = ($clinit_DOM() , $doc.createElement('colgroup'));\n    insertChild(this$static.this$0.tableElem, this$static.columnGroup, 0);\n    appendChild(this$static.columnGroup, $doc.createElement('col'));\n  }\n}\n\nfunction $resizeColumnGroup(this$static, columns, growOnly){\n  var i, num;\n  columns = columns > 1?columns:1;\n  num = this$static.columnGroup.childNodes.length;\n  if (num < columns) {\n    for (i = num; i < columns; i++) {\n      $appendChild(this$static.columnGroup, $doc.createElement('col'));\n    }\n  }\n   else if (!growOnly && num > columns) {\n    for (i = num; i > columns; i--) {\n      $removeChild(this$static.columnGroup, this$static.columnGroup.lastChild);\n    }\n  }\n}\n\nfunction HTMLTable$ColumnFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(274, 1, {}, HTMLTable$ColumnFormatter_0);\nfunction $clinit_HasAutoHorizontalAlignment(){\n  $clinit_HasAutoHorizontalAlignment = nullMethod;\n  ALIGN_CONTENT_START = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0;\n}\n\nvar ALIGN_CONTENT_START;\nfunction $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , 'center'));\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0('justify');\n  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('left');\n  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('right');\n  ALIGN_LOCALE_START = ALIGN_LEFT;\n  ALIGN_LOCALE_END = ALIGN_RIGHT;\n  ALIGN_DEFAULT = ALIGN_LOCALE_START;\n}\n\nvar ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_LOCALE_END, ALIGN_LOCALE_START, ALIGN_RIGHT;\nfunction HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0(){\n}\n\ndefineSeed(276, 1, {}, HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0);\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){\n  this.textAlignString = textAlignString;\n}\n\nfunction endOf(direction){\n  return direction == ($clinit_HasDirection$Direction() , LTR)?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):direction == RTL?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_END);\n}\n\nfunction startOf(direction){\n  return direction == ($clinit_HasDirection$Direction() , LTR)?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):direction == RTL?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_START);\n}\n\ndefineSeed(277, 276, {}, HasHorizontalAlignment$HorizontalAlignmentConstant_0);\nfunction $clinit_HasVerticalAlignment(){\n  $clinit_HasVerticalAlignment = nullMethod;\n  ALIGN_BOTTOM = new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');\n  ALIGN_MIDDLE = new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');\n  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant_0('top');\n}\n\nvar ALIGN_BOTTOM, ALIGN_MIDDLE, ALIGN_TOP;\nfunction HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){\n  this.verticalAlignString = verticalAlignString;\n}\n\ndefineSeed(278, 1, {}, HasVerticalAlignment$VerticalAlignmentConstant_0);\nfunction $clinit_Image(){\n  $clinit_Image = nullMethod;\n  new HashMap_0;\n}\n\nfunction $changeState(this$static, newState){\n  this$static.state = newState;\n}\n\nfunction Image_1(url_0){\n  $changeState(this, new Image$UnclippedState_0(this, url_0));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Image');\n}\n\nfunction Image_2(url_0){\n  $clinit_Image();\n  Image_1.call(this, ($clinit_UriUtils() , new SafeUriString_0(url_0)));\n}\n\ndefineSeed(279, 46, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Image_2);\n_.onBrowserEvent = function onBrowserEvent_1(event_0){\n  ($clinit_DOM() , $eventGetTypeInt(event_0.type)) == 32768 && !!this.state && $setPropertyString(this.element, '__gwtLastUnhandledEvent', '');\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_0(){\n  $onLoad(this.state, this);\n}\n;\nfunction $onLoad(this$static, image){\n  var unhandledEvent;\n  unhandledEvent = $getPropertyString(($clinit_DOM() , image.element), '__gwtLastUnhandledEvent');\n  $equals('load', unhandledEvent) && (this$static.syntheticEventCommand = new Image$State$1_0(this$static, image) , $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), this$static.syntheticEventCommand));\n}\n\ndefineSeed(280, 1, {});\n_.syntheticEventCommand = null;\nfunction Image$State$1_0(this$1, val$image){\n  this.this$1 = this$1;\n  this.val$image = val$image;\n}\n\ndefineSeed(281, 1, {}, Image$State$1_0);\n_.execute = function execute_10(){\n  var evt, evt_0;\n  if (this.val$image.state != this.this$1 || this != this.this$1.syntheticEventCommand) {\n    return;\n  }\n  this.this$1.syntheticEventCommand = null;\n  if (!this.val$image.attached) {\n    $setPropertyString($getImageElement(this.val$image), '__gwtLastUnhandledEvent', 'load');\n    return;\n  }\n  evt = (evt_0 = $doc.createEvent('HTMLEvents') , evt_0.initEvent('load', false, false) , evt_0);\n  $dispatchEvent($getImageElement(this.val$image), evt);\n}\n;\nfunction $getImageElement(image){\n  return $clinit_DOM() , image.element;\n}\n\nfunction Image$UnclippedState_0(image, url_0){\n  $replaceElement(image, $doc.createElement('img'));\n  sinkEvents_0(($clinit_DOM() , image.element));\n  image.eventsToSink == -1?sinkEvents(image.element, 133398655 | (image.element.__eventBits || 0)):(image.eventsToSink |= 133398655);\n  !!image.state && $setPropertyString(image.element, '__gwtLastUnhandledEvent', '');\n  $imgSetSrc(image.element, url_0.uri_0);\n}\n\ndefineSeed(282, 280, {}, Image$UnclippedState_0);\nfunction $setHorizontalAlignment(this$static, align_0){\n  this$static.autoHorizontalAlignment = align_0;\n  $updateHorizontalAlignment(this$static);\n}\n\nfunction $updateHorizontalAlignment(this$static){\n  var align_0;\n  !this$static.autoHorizontalAlignment?(align_0 = null):this$static.autoHorizontalAlignment?(align_0 = this$static.autoHorizontalAlignment):(align_0 = this$static.autoHorizontalAlignment == ($clinit_HasAutoHorizontalAlignment() , ALIGN_CONTENT_START)?startOf(this$static.directionalTextHelper.textDir):endOf(this$static.directionalTextHelper.textDir));\n  if (align_0 != this$static.horzAlign) {\n    this$static.horzAlign = align_0;\n    ($clinit_DOM() , this$static.element).style['textAlign'] = !this$static.horzAlign?'':this$static.horzAlign.textAlignString;\n  }\n}\n\nfunction LabelBase_0(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element);\n}\n\ndefineSeed(284, 46, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $setText_0(this$static, text_0){\n  $setTextOrHtml(this$static.directionalTextHelper, text_0);\n  $updateHorizontalAlignment(this$static);\n}\n\nfunction Label_0(){\n  LabelBase_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Label');\n}\n\nfunction Label_1(text_0){\n  Label_0.call(this);\n  $setTextOrHtml(this.directionalTextHelper, text_0);\n  $updateHorizontalAlignment(this);\n}\n\ndefineSeed(283, 284, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Label_0, Label_1);\nfunction $addItem(this$static, item_0){\n  $insertItem_0(this$static, item_0, item_0, -1);\n}\n\nfunction $checkIndex(this$static, index_0){\n  if (index_0 < 0 || index_0 >= ($clinit_DOM() , this$static.element).options.length) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $clear_0(this$static){\n  $selectClear(($clinit_DOM() , this$static.element));\n}\n\nfunction $getSelectElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $getValue(this$static, index_0){\n  $checkIndex(this$static, index_0);\n  return ($clinit_DOM() , this$static.element).options[index_0].value;\n}\n\nfunction $insertItem(this$static, item_0){\n  $insertItem_0(this$static, item_0, item_0, -1);\n}\n\nfunction $insertItem_0(this$static, item_0, value_0, index_0){\n  var before, itemCount, option, select;\n  select = ($clinit_DOM() , this$static.element);\n  option = $doc.createElement('option');\n  option.text = item_0;\n  option.removeAttribute('bidiwrapped');\n  option.value = value_0;\n  itemCount = select.options.length;\n  (index_0 < 0 || index_0 > itemCount) && (index_0 = itemCount);\n  if (index_0 == itemCount) {\n    $selectAdd(select, option, null);\n  }\n   else {\n    before = select.options[index_0];\n    $selectAdd(select, option, before);\n  }\n}\n\nfunction $setSelectedIndex_0(this$static, index_0){\n  $setSelectedIndex(($clinit_DOM() , this$static.element), index_0);\n}\n\nfunction $setVisibleItemCount(this$static){\n  $setSize_0(($clinit_DOM() , this$static.element), 16);\n}\n\nfunction ListBox_0(){\n  FocusWidget_0.call(this, $doc.createElement('select'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-ListBox');\n}\n\ndefineSeed(285, 45, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ListBox_0);\nfunction $addValueChangeHandler_0(this$static, handler){\n  if (!this$static.valueChangeHandlerInitialized) {\n    this$static.valueChangeHandlerInitialized = true;\n    $addDomHandler(this$static, new ValueBoxBase$1_0(this$static), ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  }\n  return $addHandler(this$static, handler, (!TYPE_10 && (TYPE_10 = new GwtEvent$Type_0) , TYPE_10));\n}\n\nfunction $getText_0(this$static){\n  return $getPropertyString(($clinit_DOM() , this$static.element), 'value');\n}\n\nfunction $getValueOrThrow(this$static){\n  var text_0;\n  text_0 = $getPropertyString(($clinit_DOM() , this$static.element), 'value');\n  if ($equals('', text_0)) {\n    return null;\n  }\n  return text_0;\n}\n\nfunction $setText_1(this$static, text_0){\n  ($clinit_DOM() , this$static.element)['value'] = text_0 != null?text_0:'';\n}\n\nfunction ValueBoxBase_0(elem){\n  FocusWidget_0.call(this, elem);\n  new AutoDirectionHandler_0;\n}\n\ndefineSeed(289, 45, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onBrowserEvent = function onBrowserEvent_2(event_0){\n  var type_0;\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(event_0.type));\n  (type_0 & 896) != 0?$onBrowserEvent(this, event_0):$onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_1(){\n}\n;\n_.valueChangeHandlerInitialized = false;\nfunction $clinit_TextBoxBase(){\n  $clinit_TextBoxBase = nullMethod;\n  $clinit_ValueBoxBase$TextAlignment();\n}\n\nfunction $getValue_0(this$static){\n  var raw;\n  raw = $getValueOrThrow(this$static);\n  return raw == null?'':raw;\n}\n\ndefineSeed(288, 289, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction TextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'text'), 'gwt-TextBox');\n}\n\nfunction TextBox_1(element, styleName){\n  ValueBoxBase_0.call(this, element, (!INSTANCE_2 && (INSTANCE_2 = new PassthroughRenderer_0) , !INSTANCE_1 && (INSTANCE_1 = new PassthroughParser_0)));\n  styleName != null && $setClassName(($clinit_DOM() , this.element), styleName);\n}\n\ndefineSeed(287, 288, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextBox_0);\nfunction PasswordTextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'password'), 'gwt-PasswordTextBox');\n}\n\ndefineSeed(286, 287, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), PasswordTextBox_0);\nfunction $add_3(this$static, w){\n  if (this$static.widget) {\n    throw new IllegalStateException_1('SimplePanel can only contain one child widget');\n  }\n  this$static.setWidget(w);\n}\n\nfunction $remove_5(this$static, w){\n  if (this$static.widget != w) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    $removeChild(this$static.getContainerElement(), ($clinit_DOM() , w.element));\n    this$static.widget = null;\n  }\n  return true;\n}\n\nfunction $setWidget_0(this$static, w){\n  if (w == this$static.widget) {\n    return;\n  }\n  !!w && $removeFromParent(w);\n  !!this$static.widget && $remove_5(this$static, this$static.widget);\n  this$static.widget = w;\n  if (w) {\n    appendChild(this$static.getContainerElement(), $getElement(this$static.widget));\n    $setParent(w, this$static);\n  }\n}\n\nfunction SimplePanel_0(){\n  SimplePanel_1.call(this, ($clinit_DOM() , $doc.createElement('div')));\n}\n\nfunction SimplePanel_1(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(291, 259, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getContainerElement = function getContainerElement(){\n  return $clinit_DOM() , this.element;\n}\n;\n_.iterator = function iterator_3(){\n  return new SimplePanel$1_0(this);\n}\n;\n_.remove_1 = function remove_8(w){\n  return $remove_5(this, w);\n}\n;\n_.setWidget = function setWidget(w){\n  $setWidget_0(this, w);\n}\n;\nfunction $clinit_PopupPanel(){\n  $clinit_PopupPanel = nullMethod;\n  $clinit_PopupImplMozilla();\n}\n\nfunction $eventTargetsPopup(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_0(target)) {\n    return $isOrHasChild(($clinit_DOM() , this$static.element), target);\n  }\n  return false;\n}\n\nfunction $getOffsetHeight(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetHeight');\n}\n\nfunction $getOffsetWidth(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetWidth');\n}\n\nfunction $hide(this$static){\n  if (!this$static.showing) {\n    return;\n  }\n  $setState(this$static.resizeAnimation, false);\n  fire_1(this$static);\n}\n\nfunction $maybeUpdateSize(this$static){\n  var w;\n  w = this$static.widget;\n  if (w) {\n    this$static.desiredHeight != null && w.setHeight(this$static.desiredHeight);\n    this$static.desiredWidth != null && w.setWidth(this$static.desiredWidth);\n  }\n}\n\nfunction $previewNativeEvent(this$static, event_0){\n  var eventTargetsPopupOrPartner, nativeEvent, target, type_0;\n  if (event_0.isCanceled || !this$static.previewAllNativeEvents && event_0.isConsumed) {\n    this$static.modal && (event_0.isCanceled = true);\n    return;\n  }\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n  if (event_0.isCanceled) {\n    return;\n  }\n  nativeEvent = event_0.nativeEvent;\n  eventTargetsPopupOrPartner = $eventTargetsPopup(this$static, nativeEvent);\n  eventTargetsPopupOrPartner && (event_0.isConsumed = true);\n  this$static.modal && (event_0.isCanceled = true);\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(nativeEvent.type));\n  switch (type_0) {\n    case 512:\n    case 256:\n    case 128:\n      {\n        $eventGetKeyCode(nativeEvent) & 65535;\n        ($eventGetShiftKey(nativeEvent)?1:0) | ($eventGetMetaKey(nativeEvent)?8:0) | ($eventGetCtrlKey(nativeEvent)?2:0) | ($eventGetAltKey(nativeEvent)?4:0);\n        return;\n      }\n\n    case 4:\n    case 1048576:\n      if (sCaptureElem != null) {\n        event_0.isConsumed = true;\n        return;\n      }\n\n      if (!eventTargetsPopupOrPartner && this$static.autoHide) {\n        $hide(this$static);\n        return;\n      }\n\n      break;\n    case 8:\n    case 64:\n    case 1:\n    case 2:\n    case 4194304:\n      {\n        if (sCaptureElem != null) {\n          event_0.isConsumed = true;\n          return;\n        }\n        break;\n      }\n\n    case 2048:\n      {\n        target = nativeEvent.target;\n        if (this$static.modal && !eventTargetsPopupOrPartner && !!target) {\n          target.blur && target != $doc.body && target.blur();\n          event_0.isCanceled = true;\n          return;\n        }\n        break;\n      }\n\n  }\n}\n\nfunction $setPopupPosition(this$static, left, top_0){\n  var elem;\n  this$static.leftPosition = left;\n  this$static.topPosition = top_0;\n  left -= $getBodyOffsetLeft($doc);\n  top_0 -= $getBodyOffsetTop($doc);\n  elem = ($clinit_DOM() , this$static.element);\n  elem.style['left'] = left + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = top_0 + 'px';\n}\n\nfunction $setVisible(this$static){\n  ($clinit_DOM() , this$static.element).style['visibility'] = 'visible';\n  this$static.element;\n}\n\nfunction $updateHandlers(this$static){\n  if (this$static.nativePreviewHandlerRegistration) {\n    $removeHandler(this$static.nativePreviewHandlerRegistration.real);\n    this$static.nativePreviewHandlerRegistration = null;\n  }\n  if (this$static.historyHandlerRegistration) {\n    $removeHandler(this$static.historyHandlerRegistration.real);\n    this$static.historyHandlerRegistration = null;\n  }\n  if (this$static.showing) {\n    this$static.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3_0(this$static));\n    this$static.historyHandlerRegistration = addValueChangeHandler(new PopupPanel$4_0(this$static));\n  }\n}\n\nfunction PopupPanel_0(){\n  $clinit_PopupPanel();\n  SimplePanel_0.call(this);\n  this.glassResizer = new PopupPanel$1_0;\n  this.leftPosition = -1;\n  this.resizeAnimation = new PopupPanel$ResizeAnimation_0(this);\n  this.topPosition = -1;\n  $appendChild(($clinit_DOM() , this.element), $createElement_0());\n  $setPopupPosition(this, 0, 0);\n  $getStyleElement($getFirstChildElement(this.element)).className = 'gwt-PopupPanel';\n  $getContainerElement($getFirstChildElement(this.element)).className = 'popupContent';\n}\n\ndefineSeed(290, 291, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), PopupPanel_0);\n_.getContainerElement = function getContainerElement_0(){\n  return $getContainerElement(($clinit_DOM() , $getFirstChildElement(this.element)));\n}\n;\n_.onUnload = function onUnload_0(){\n  this.showing && $setState(this.resizeAnimation, true);\n}\n;\n_.setHeight = function setHeight_0(height){\n  this.desiredHeight = height;\n  $maybeUpdateSize(this);\n  height.length == 0 && (this.desiredHeight = null);\n}\n;\n_.setWidget = function setWidget_0(w){\n  $setWidget_0(this, w);\n  $maybeUpdateSize(this);\n}\n;\n_.setWidth = function setWidth_0(width_0){\n  this.desiredWidth = width_0;\n  $maybeUpdateSize(this);\n  width_0.length == 0 && (this.desiredWidth = null);\n}\n;\n_.autoHide = false;\n_.autoHideOnHistoryEvents = false;\n_.isGlassEnabled = false;\n_.leftPosition = 0;\n_.modal = false;\n_.previewAllNativeEvents = false;\n_.showing = false;\n_.topPosition = 0;\nfunction $onResize(){\n  var height, style, width_0, winHeight, winWidth;\n  style = null.nullMethod();\n  winWidth = ($clinit_Window() , $getClientWidth($doc));\n  winHeight = $getClientHeight($doc);\n  $setPropertyImpl(style, 'display', ($clinit_Style$Display() , 'none'));\n  style['width'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['height'] = '0px';\n  width_0 = $getScrollWidth($doc);\n  height = $getScrollHeight($doc);\n  style['width'] = (width_0 > winWidth?width_0:winWidth) + 'px';\n  style['height'] = (height > winHeight?height:winHeight) + 'px';\n  $setPropertyImpl(style, 'display', 'block');\n}\n\nfunction PopupPanel$1_0(){\n}\n\ndefineSeed(292, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), PopupPanel$1_0);\n_.onResize = function onResize_1(event_0){\n  $onResize();\n}\n;\nfunction PopupPanel$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(293, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), PopupPanel$3_0);\n_.onPreviewNativeEvent = function onPreviewNativeEvent_0(event_0){\n  $previewNativeEvent(this.this$0, event_0);\n}\n;\nfunction PopupPanel$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(294, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), PopupPanel$4_0);\n_.onValueChange = function onValueChange(event_0){\n  this.this$0.autoHideOnHistoryEvents && $hide(this.this$0);\n}\n;\nfunction $maybeShowGlass(this$static){\n  if (this$static.showing) {\n    if (this$static.curPanel.isGlassEnabled) {\n      $appendChild($doc.body, this$static.curPanel.glass);\n      $clinit_PopupPanel();\n      this$static.resizeRegistration = addResizeHandler(this$static.curPanel.glassResizer);\n      $onResize();\n      this$static.glassShowing = true;\n    }\n  }\n   else if (this$static.glassShowing) {\n    $removeChild($doc.body, this$static.curPanel.glass);\n    $clinit_PopupPanel();\n    $removeHandler(this$static.resizeRegistration.real);\n    this$static.resizeRegistration = null;\n    this$static.glassShowing = false;\n  }\n}\n\nfunction $onComplete(this$static){\n  if (!this$static.showing) {\n    $maybeShowGlass(this$static);\n    this$static.isUnloading || $remove_3(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $clinit_PopupPanel();\n    $getElement(this$static.curPanel);\n  }\n  $setClip(($clinit_PopupPanel() , $getElement(this$static.curPanel)), 'rect(auto, auto, auto, auto)');\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onInstantaneousRun(this$static){\n  $maybeShowGlass(this$static);\n  if (this$static.showing) {\n    $setPropertyImpl($getElement(this$static.curPanel).style, 'position', 'absolute');\n    this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);\n    $add_1(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $clinit_PopupPanel();\n    $getElement(this$static.curPanel);\n  }\n   else {\n    this$static.isUnloading || $remove_3(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $clinit_PopupPanel();\n    $getElement(this$static.curPanel);\n  }\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onUpdate(this$static, progress){\n  var bottom, height, left, right, top_0, width_0;\n  this$static.showing || (progress = 1 - progress);\n  top_0 = 0;\n  left = 0;\n  right = 0;\n  bottom = 0;\n  height = round_int(progress * this$static.offsetHeight);\n  width_0 = round_int(progress * this$static.offsetWidth);\n  switch (0) {\n    case 2:\n    case 0:\n      top_0 = this$static.offsetHeight - height >> 1;\n      left = this$static.offsetWidth - width_0 >> 1;\n      right = left + width_0;\n      bottom = top_0 + height;\n  }\n  $setClip(($clinit_PopupPanel() , $getElement(this$static.curPanel)), 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)');\n}\n\nfunction $setState(this$static, isUnloading){\n  this$static.isUnloading = isUnloading;\n  $cancel(this$static);\n  this$static.curPanel.showing = false;\n  $updateHandlers(this$static.curPanel);\n  this$static.showing = false;\n  $onInstantaneousRun(this$static);\n}\n\nfunction PopupPanel$ResizeAnimation_0(panel){\n  Animation_0.call(this, ($clinit_AnimationSchedulerImpl() , INSTANCE));\n  this.curPanel = null;\n  this.offsetWidth = -1;\n  this.curPanel = panel;\n}\n\ndefineSeed(295, 33, {}, PopupPanel$ResizeAnimation_0);\n_.glassShowing = false;\n_.isUnloading = false;\n_.offsetHeight = 0;\n_.offsetWidth = 0;\n_.showing = false;\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $setResolver(this$static, resolver){\n  this$static.__gwt_resolve = buildResolveCallback(resolver);\n}\n\nfunction buildResolveCallback(resolver){\n  return function(){\n    this.__gwt_resolve = cannotResolveTwice;\n    return resolver.resolvePotentialElement();\n  }\n  ;\n}\n\nfunction cannotResolveTwice(){\n  throw 'A PotentialElement cannot be resolved twice.';\n}\n\n",
"function declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction isPotential(o){\n  $clinit_PotentialElement();\n  try {\n    return !!o && !!o.__gwt_resolve;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_12(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_1(){\n  $clinit_RootPanel();\n  var rp;\n  rp = dynamicCast($get_4(rootPanels, null), Q$RootPanel);\n  if (rp) {\n    return rp;\n  }\n  rootPanels.size_0 == 0 && addCloseHandler(new RootPanel$3_0);\n  rp = new RootPanel$DefaultRootPanel_0;\n  $put_0(rootPanels, null, rp);\n  $add_7(widgetsToDetach, rp);\n  return rp;\n}\n\nfunction getBodyElement(){\n  $clinit_RootPanel();\n  return $doc.body;\n}\n\ndefineSeed(297, 257, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]));\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(298, 1, {}, RootPanel$1_0);\n_.execute_2 = function execute_11(w){\n  w.isAttached() && w.onDetach();\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(299, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, getBodyElement());\n}\n\ndefineSeed(300, 297, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $getMaximumHorizontalScrollPosition(scrollable){\n  return $isRtl(scrollable)?0:($getSubPixelScrollWidth(scrollable) | 0) - (scrollable.clientWidth | 0);\n}\n\nfunction $getMinimumHorizontalScrollPosition(scrollable){\n  return $isRtl(scrollable)?(scrollable.clientWidth | 0) - ($getSubPixelScrollWidth(scrollable) | 0):0;\n}\n\nfunction $isRtl(scrollable){\n  var computedStyle = $doc.defaultView.getComputedStyle(scrollable, null);\n  return computedStyle.getPropertyValue('direction') == 'rtl';\n}\n\nfunction ScrollImpl_0(){\n}\n\ndefineSeed(301, 1, {}, ScrollImpl_0);\nvar impl_4;\nfunction $getHorizontalScrollPosition(this$static){\n  return $getScrollLeft(($clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getMaximumHorizontalScrollPosition_0(this$static){\n  return $getMaximumHorizontalScrollPosition((!impl_4 && (impl_4 = new ScrollImpl_0) , $clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getMaximumVerticalScrollPosition(this$static){\n  return ((($clinit_DOM() , this$static.scrollableElem).scrollHeight || 0) | 0) - (this$static.scrollableElem.clientHeight | 0);\n}\n\nfunction $getMinimumHorizontalScrollPosition_0(this$static){\n  return $getMinimumHorizontalScrollPosition((!impl_4 && (impl_4 = new ScrollImpl_0) , $clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getVerticalScrollPosition(this$static){\n  return (($clinit_DOM() , this$static.scrollableElem).scrollTop || 0) | 0;\n}\n\nfunction $setHorizontalScrollPosition(this$static, position){\n  $setScrollLeft(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\nfunction $setTouchScrollingDisabled(this$static){\n  var scroller, ua;\n  if (this$static.touchScroller) {\n    return false;\n  }\n  this$static.touchScroller = (scroller = (!isSupported_0 && (isSupported_0 = ($clinit_Boolean() , !impl_0 && (impl_0 = new TouchEvent$TouchSupportDetector_0) , impl_0.isSupported && !(ua = navigator.userAgent.toLowerCase() , /android ([3-9]+)\\.([0-9]+)/.exec(ua) != null)?TRUE_0:FALSE_0)) , isSupported_0.value_0?new TouchScroller_0:null) , !!scroller && $setTargetWidget(scroller, this$static) , scroller);\n  return !this$static.touchScroller;\n}\n\nfunction $setVerticalScrollPosition(this$static, position){\n  $setScrollTop(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\ndefineSeed(302, 291, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getContainerElement = function getContainerElement_1(){\n  return $clinit_DOM() , this.containerElem;\n}\n;\n_.onAttach = function onAttach_2(){\n  $onAttach(this);\n  setEventListener(($clinit_DOM() , this.scrollableElem), this);\n}\n;\n_.onDetach = function onDetach_1(){\n  setEventListener(($clinit_DOM() , this.scrollableElem), null);\n  $onDetach(this);\n}\n;\n_.setHeight = function setHeight_1(height){\n  ($clinit_DOM() , this.element).style['height'] = height;\n}\n;\n_.setWidth = function setWidth_1(width_0){\n  ($clinit_DOM() , this.element).style['width'] = width_0;\n}\n;\nfunction $next_0(this$static){\n  if (!this$static.hasElement || !this$static.this$0.widget) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.hasElement = false;\n  return this$static.returned = this$static.this$0.widget;\n}\n\nfunction SimplePanel$1_0(this$0){\n  this.this$0 = this$0;\n  this.hasElement = !!this.this$0.widget;\n}\n\ndefineSeed(303, 1, {}, SimplePanel$1_0);\n_.hasNext = function hasNext_0(){\n  return this.hasElement;\n}\n;\n_.next_0 = function next_1(){\n  return $next_0(this);\n}\n;\n_.remove_2 = function remove_9(){\n  !!this.returned && $remove_5(this.this$0, this.returned);\n}\n;\n_.hasElement = false;\n_.returned = null;\nfunction ValueBoxBase$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(304, 1, makeCastMap([Q$ChangeHandler, Q$EventHandler]), ValueBoxBase$1_0);\n_.onChange = function onChange(event_0){\n  fire_3(this.this$0, $getValue_0(this.this$0));\n}\n;\nfunction $clinit_ValueBoxBase$TextAlignment(){\n  $clinit_ValueBoxBase$TextAlignment = nullMethod;\n  CENTER_0 = new ValueBoxBase$TextAlignment$1_0;\n  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2_0;\n  LEFT_0 = new ValueBoxBase$TextAlignment$3_0;\n  RIGHT_0 = new ValueBoxBase$TextAlignment$4_0;\n  $VALUES_9 = initValues(_3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, makeCastMap([Q$Serializable]), Q$ValueBoxBase$TextAlignment, [CENTER_0, JUSTIFY_0, LEFT_0, RIGHT_0]);\n}\n\nfunction ValueBoxBase$TextAlignment_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_10(){\n  $clinit_ValueBoxBase$TextAlignment();\n  return $VALUES_9;\n}\n\ndefineSeed(305, 11, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_9, CENTER_0, JUSTIFY_0, LEFT_0, RIGHT_0;\nfunction ValueBoxBase$TextAlignment$1_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(306, 305, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$1_0);\nfunction ValueBoxBase$TextAlignment$2_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(307, 305, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$2_0);\nfunction ValueBoxBase$TextAlignment$3_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(308, 305, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$3_0);\nfunction ValueBoxBase$TextAlignment$4_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(309, 305, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$4_0);\nfunction $add_4(this$static, w){\n  var td, tr, td_0;\n  tr = ($clinit_DOM() , $doc.createElement('tr'));\n  td = (td_0 = $doc.createElement('td') , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(tr, ($clinit_PotentialElement() , $resolve(td)));\n  appendChild(this$static.body_0, tr);\n  $add_0(this$static, w, td);\n}\n\nfunction $setHorizontalAlignment_0(this$static, align_0){\n  this$static.horzAlign = align_0;\n}\n\nfunction $setVerticalAlignment(this$static, align_0){\n  this$static.vertAlign = align_0;\n}\n\nfunction VerticalPanel_0(){\n  ComplexPanel_0.call(this);\n  this.table = ($clinit_DOM() , $doc.createElement('table'));\n  this.body_0 = $doc.createElement('tbody');\n  appendChild(this.table, this.body_0);\n  $setElement(this, this.table);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyString(this.table, 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(310, 265, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), VerticalPanel_0);\n_.remove_1 = function remove_10(w){\n  var removed, td;\n  td = ($clinit_DOM() , $getParentElement(w.element));\n  removed = $remove_2(this, w);\n  removed && $removeChild(this.body_0, $getParentElement(td));\n  return removed;\n}\n;\nfunction $add_5(this$static, w){\n  $insert(this$static, w, this$static.size_0);\n}\n\nfunction $get_3(this$static){\n  if (0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  return this$static.array[0];\n}\n\nfunction $indexOf_0(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, this$static.array.length * 2, 0);\n    for (i = 0; i < this$static.array.length; ++i) {\n      setCheck(newArray, i, this$static.array[i]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i0 = this$static.size_0 - 1; i0 > beforeIndex; --i0) {\n    setCheck(this$static.array, i0, this$static.array[i0 - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_6(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_7(this$static, w){\n  var index_0;\n  index_0 = $indexOf_0(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_6(this$static, index_0);\n}\n\nfunction WidgetCollection_0(parent_0){\n  this.parent_0 = parent_0;\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, 4, 0);\n}\n\ndefineSeed(311, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_4(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next_1(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(312, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext_1(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next_0 = function next_2(){\n  return $next_1(this);\n}\n;\n_.remove_2 = function remove_11(){\n  if (!this.currentWidget) {\n    throw new IllegalStateException_0;\n  }\n  this.this$0.parent_0.remove_1(this.currentWidget);\n  --this.index_0;\n  this.currentWidget = null;\n}\n;\n_.index_0 = 0;\nfunction $clinit_PopupImplMozilla(){\n  $clinit_PopupImplMozilla = nullMethod;\n  isFF2Mac = isFF2Mac_0();\n}\n\nfunction $createElement_0(){\n  var outerElem;\n  outerElem = ($clinit_DOM() , $doc.createElement('div'));\n  if (isFF2Mac) {\n    $setInnerHTML(outerElem, '<div><\\/div>');\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new PopupImplMozilla$1_0(outerElem));\n  }\n  return outerElem;\n}\n\nfunction $getContainerElement(outerElem){\n  return isFF2Mac?$getFirstChildElement(outerElem):outerElem;\n}\n\nfunction $getStyleElement(outerElem){\n  return isFF2Mac?outerElem:$getParentElement(outerElem);\n}\n\nfunction $setClip(popup, rect){\n  $setPropertyImpl(popup.style, 'clip', rect);\n  $setPropertyImpl(popup.style, 'display', ($clinit_Style$Display() , 'none'));\n  $setPropertyImpl(popup.style, 'display', '');\n}\n\nfunction isFF2Mac_0(){\n  function makeVersion(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n\n  var ua = navigator.userAgent;\n  if (ua.indexOf('Macintosh') != -1) {\n    var result_0 = /rv:([0-9]+)\\.([0-9]+)/.exec(ua);\n    if (result_0 && result_0.length == 3) {\n      if (makeVersion(result_0) <= 1008) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nvar isFF2Mac = false;\nfunction PopupImplMozilla$1_0(val$outerElem){\n  this.val$outerElem = val$outerElem;\n}\n\ndefineSeed(315, 1, {}, PopupImplMozilla$1_0);\n_.execute = function execute_12(){\n  this.val$outerElem.style['overflow'] = ($clinit_Style$Overflow() , 'auto');\n}\n;\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction $clearOnReadyStateChange(this$static){\n  var self_0 = this$static;\n  setTimeout_0(function(){\n    self_0.onreadystatechange = new Function;\n  }\n  , 0);\n}\n\nfunction $open(this$static, httpMethod, url_0){\n  this$static.open(httpMethod, url_0, true);\n}\n\nfunction $setOnReadyStateChange(this$static, handler){\n  var _this = this$static;\n  this$static.onreadystatechange = $entry(function(){\n    handler.onReadyStateChange(_this);\n  }\n  );\n}\n\nfunction create_1(){\n  var xhr;\n  if ($wnd.XMLHttpRequest) {\n    xhr = new $wnd.XMLHttpRequest;\n  }\n   else {\n    try {\n      xhr = new $wnd.ActiveXObject('MSXML2.XMLHTTP.3.0');\n    }\n     catch (e) {\n      xhr = new $wnd.ActiveXObject('Microsoft.XMLHTTP');\n    }\n  }\n  return xhr;\n}\n\nfunction $removeHandler(this$static){\n  $doRemove(this$static.this$0, this$static.val$type, this$static.val$source, this$static.val$handler);\n}\n\nfunction SimpleEventBus$1_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$source = null;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(319, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$source = null;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(320, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\n_.execute = function execute_13(){\n  $doAddNow(this.this$0, this.val$type, this.val$source, this.val$handler);\n}\n;\nfunction SimpleEventBus$3_0(this$0, val$type, val$source, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$source = val$source;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(321, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$3_0);\n_.execute = function execute_14(){\n  $doRemoveNow(this.this$0, this.val$type, this.val$source, this.val$handler);\n}\n;\nfunction ArithmeticException_0(){\n  RuntimeException_1.call(this, 'divide by zero');\n}\n\ndefineSeed(322, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArithmeticException_0);\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(323, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArrayStoreException_0);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  FALSE_0 = new Boolean_1(false);\n  TRUE_0 = new Boolean_1(true);\n}\n\nfunction Boolean_1(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(324, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);\n_.equals$ = function equals_8(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_19(){\n  return this.value_0?'true':'false';\n}\n;\n_.value_0 = false;\nvar FALSE_0, TRUE_0;\nfunction digit(c){\n  if (c >= 48 && c < 58) {\n    return c - 48;\n  }\n  if (c >= 97 && c < 97) {\n    return c - 97 + 10;\n  }\n  if (c >= 65 && c < 65) {\n    return c - 65 + 10;\n  }\n  return -1;\n}\n\nfunction toUpperCase(c){\n  return String.fromCharCode(c).toUpperCase().charCodeAt(0);\n}\n\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, seedId, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(326, 1, {}, Class_0);\n_.toString$ = function toString_20(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(327, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ClassCastException_0);\nfunction __parseAndValidateInt(s){\n  var i, isTooLow, length_0, startIndex, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_1('null');\n  }\n  length_0 = s.length;\n  startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43)?1:0;\n  for (i = startIndex; i < length_0; i++) {\n    if (digit(s.charCodeAt(i)) == -1) {\n      throw new NumberFormatException_1('For input string: \"' + s + '\"');\n    }\n  }\n  toReturn = parseInt(s, 10);\n  isTooLow = toReturn < -2147483648;\n  if (isNaN(toReturn)) {\n    throw new NumberFormatException_1('For input string: \"' + s + '\"');\n  }\n   else if (isTooLow || toReturn > 2147483647) {\n    throw new NumberFormatException_1('For input string: \"' + s + '\"');\n  }\n  return toReturn;\n}\n\nfunction __parseAndValidateLong(s){\n  var c, firstTime, head, i, length_0, maxDigits, minValue, negative, orig, radixPower, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_1('null');\n  }\n  orig = s;\n  length_0 = s.length;\n  negative = false;\n  if (length_0 > 0) {\n    c = s.charCodeAt(0);\n    if (c == 45 || c == 43) {\n      s = $substring(s, 1);\n      --length_0;\n      negative = c == 45;\n    }\n  }\n  if (length_0 == 0) {\n    throw new NumberFormatException_1('For input string: \"' + orig + '\"');\n  }\n  while (s.length > 0 && s.charCodeAt(0) == 48) {\n    s = $substring(s, 1);\n    --length_0;\n  }\n  if (length_0 > ($clinit_Number$__ParseLong() , maxLengthForRadix)[10]) {\n    throw new NumberFormatException_1('For input string: \"' + orig + '\"');\n  }\n  for (i = 0; i < length_0; i++) {\n    c = s.charCodeAt(i);\n    if (c >= 48 && c < 58) {\n      continue;\n    }\n    if (c >= 97 && c < 97) {\n      continue;\n    }\n    if (c >= 65 && c < 65) {\n      continue;\n    }\n    throw new NumberFormatException_1('For input string: \"' + orig + '\"');\n  }\n  toReturn = P0_longLit;\n  maxDigits = maxDigitsForRadix[10];\n  radixPower = fromInt(maxDigitsRadixPower[10]);\n  minValue = neg(maxValueForRadix[10]);\n  firstTime = true;\n  head = length_0 % maxDigits;\n  if (head > 0) {\n    toReturn = fromInt(-__parseInt($substring_0(s, 0, head), 10));\n    s = $substring(s, head);\n    length_0 -= head;\n    firstTime = false;\n  }\n  while (length_0 >= maxDigits) {\n    head = __parseInt($substring_0(s, 0, maxDigits), 10);\n    s = $substring(s, maxDigits);\n    length_0 -= maxDigits;\n    if (firstTime) {\n      firstTime = false;\n    }\n     else {\n      if (lt(toReturn, minValue)) {\n        throw new NumberFormatException_1(s);\n      }\n      toReturn = mul(toReturn, radixPower);\n    }\n    toReturn = sub_0(toReturn, fromInt(head));\n  }\n  if (gt(toReturn, P0_longLit)) {\n    throw new NumberFormatException_1('For input string: \"' + orig + '\"');\n  }\n  if (!negative) {\n    toReturn = neg(toReturn);\n    if (lt(toReturn, P0_longLit)) {\n      throw new NumberFormatException_1('For input string: \"' + orig + '\"');\n    }\n  }\n  return toReturn;\n}\n\nfunction __parseInt(s, radix){\n  return parseInt(s, radix);\n}\n\ndefineSeed(329, 1, makeCastMap([Q$Serializable, Q$Number]));\nfunction Double_0(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(328, 329, makeCastMap([Q$Serializable, Q$Comparable, Q$Double, Q$Number]), Double_0);\n_.equals$ = function equals_9(o){\n  return instanceOf(o, Q$Double) && dynamicCast(o, Q$Double).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_11(){\n  return round_int(this.value_0);\n}\n;\n_.toString$ = function toString_21(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction IllegalArgumentException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalArgumentException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(330, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IllegalArgumentException_0, IllegalArgumentException_1);\nfunction IllegalStateException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalStateException_1(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(331, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IllegalStateException_0, IllegalStateException_1);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(332, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\nfunction Integer_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction numberOfLeadingZeros_0(i){\n  var m_0, n, y_0;\n  if (i < 0) {\n    return 0;\n  }\n   else if (i == 0) {\n    return 32;\n  }\n   else {\n    y_0 = -(i >> 16);\n    m_0 = y_0 >> 16 & 16;\n    n = 16 - m_0;\n    i = i >> m_0;\n    y_0 = i - 256;\n    m_0 = y_0 >> 16 & 8;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i - 4096;\n    m_0 = y_0 >> 16 & 4;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i - 16384;\n    m_0 = y_0 >> 16 & 2;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i >> 14;\n    m_0 = y_0 & ~(y_0 >> 1);\n    return n + 2 - m_0;\n  }\n}\n\nfunction numberOfTrailingZeros(i){\n  var r, rtn;\n  if (i == 0) {\n    return 32;\n  }\n   else {\n    rtn = 0;\n    for (r = 1; (r & i) == 0; r <<= 1) {\n      ++rtn;\n    }\n    return rtn;\n  }\n}\n\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction valueOf(i){\n  var rebase, result;\n  if (i > -129 && i < 128) {\n    rebase = i + 128;\n    result = ($clinit_Integer$BoxedValues() , boxedValues_0)[rebase];\n    !result && (result = boxedValues_0[rebase] = new Integer_0(i));\n    return result;\n  }\n  return new Integer_0(i);\n}\n\ndefineSeed(333, 329, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);\n_.equals$ = function equals_10(o){\n  return instanceOf(o, Q$Integer) && dynamicCast(o, Q$Integer).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_12(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_22(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction $clinit_Integer$BoxedValues(){\n  $clinit_Integer$BoxedValues = nullMethod;\n  boxedValues_0 = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable]), Q$Integer, 256, 0);\n}\n\nvar boxedValues_0;\nfunction abs_0(x_0){\n  return x_0 <= 0?0 - x_0:x_0;\n}\n\nfunction max_0(y_0){\n  return 5 > y_0?5:y_0;\n}\n\nfunction pow_1(x_0, exp_0){\n  return Math.pow(x_0, exp_0);\n}\n\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(336, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction $clinit_Number$__ParseLong(){\n  $clinit_Number$__ParseLong = nullMethod;\n  var i;\n  maxDigitsForRadix = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, 30, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);\n  maxDigitsRadixPower = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, 37, 1);\n  maxLengthForRadix = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, 63, 40, 32, 28, 25, 23, 21, 20, 19, 19, 18, 18, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13]);\n  maxValueForRadix = initDim(_3J_classLit, makeCastMap([Q$Serializable]), -1, 37, 3);\n  for (i = 2; i <= 36; i++) {\n    maxDigitsRadixPower[i] = round_int(pow_1(i, maxDigitsForRadix[i]));\n    maxValueForRadix[i] = div(P7fffffffffffffff_longLit, fromInt(maxDigitsRadixPower[i]));\n  }\n}\n\nvar maxDigitsForRadix, maxDigitsRadixPower, maxLengthForRadix, maxValueForRadix;\nfunction NumberFormatException_0(){\n  IllegalArgumentException_0.call(this);\n}\n\nfunction NumberFormatException_1(message){\n  IllegalArgumentException_1.call(this, message);\n}\n\ndefineSeed(339, 330, makeCastMap([Q$Serializable, Q$Exception, Q$NumberFormatException, Q$Throwable]), NumberFormatException_0, NumberFormatException_1);\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(340, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_23(){\n  return this.className_0 + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $indexOf_1(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $lastIndexOf(this$static, str){\n  return this$static.lastIndexOf(str);\n}\n\nfunction $replaceAll(this$static, regex, replace){\n  replace = __translateReplaceString(replace);\n  return this$static.replace(RegExp(regex, 'g'), replace);\n}\n\nfunction $replaceFirst(this$static, regex, replace){\n  replace = __translateReplaceString(replace);\n  return this$static.replace(RegExp(regex), replace);\n}\n\n",
"function $split(this$static, regex, maxMatch){\n  var compiled = new RegExp(regex, 'g');\n  var out = [];\n  var count = 0;\n  var trail = this$static;\n  var lastTrail = null;\n  while (true) {\n    var matchObj = compiled.exec(trail);\n    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {\n      out[count] = trail;\n      break;\n    }\n     else {\n      out[count] = trail.substring(0, matchObj.index);\n      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);\n      compiled.lastIndex = 0;\n      if (lastTrail == trail) {\n        out[count] = trail.substring(0, 1);\n        trail = trail.substring(1);\n      }\n      lastTrail = trail;\n      count++;\n    }\n  }\n  if (maxMatch == 0 && this$static.length > 0) {\n    var lastNonEmpty = out.length;\n    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {\n      --lastNonEmpty;\n    }\n    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);\n  }\n  var jr = __createArray(out.length);\n  for (var i = 0; i < out.length; ++i) {\n    jr[i] = out[i];\n  }\n  return jr;\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __createArray(numElements){\n  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, numElements, 0);\n}\n\nfunction __translateReplaceString(replaceStr){\n  var pos;\n  pos = 0;\n  while (0 <= (pos = replaceStr.indexOf('\\\\', pos))) {\n    replaceStr.charCodeAt(pos + 1) == 36?(replaceStr = $substring_0(replaceStr, 0, pos) + '$' + $substring(replaceStr, ++pos)):(replaceStr = $substring_0(replaceStr, 0, pos) + $substring(replaceStr, ++pos));\n  }\n  return replaceStr;\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\nfunction fromCharCode(ch_0){\n  return String.fromCharCode(ch_0);\n}\n\nfunction fromCodePoint(codePoint){\n  var hiSurrogate, loSurrogate;\n  if (codePoint >= 65536) {\n    hiSurrogate = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;\n    loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;\n    return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);\n  }\n   else {\n    return String.fromCharCode(codePoint & 65535);\n  }\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.equals$ = function equals_11(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_13(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction $append_1(this$static, x_0){\n  $append(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $append_2(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuffer_0(){\n  this.impl = new StringBufferImplAppend_0;\n}\n\ndefineSeed(342, 1, makeCastMap([Q$CharSequence]), StringBuffer_0);\n_.toString$ = function toString_24(){\n  return this.impl.string;\n}\n;\nfunction $$init(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_3(this$static, x_0){\n  $append(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $append_4(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuilder_0(){\n  $$init(this);\n}\n\nfunction StringBuilder_1(s){\n  $$init(this);\n  $append_0(this.impl, s);\n}\n\ndefineSeed(343, 1, makeCastMap([Q$CharSequence]), StringBuilder_0, StringBuilder_1);\n_.toString$ = function toString_25(){\n  return this.impl.string;\n}\n;\nfunction currentTimeMillis0(){\n  return (new Date).getTime();\n}\n\nfunction UnsupportedOperationException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction UnsupportedOperationException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(345, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);\nfunction $implFindEntry(this$static, key, remove){\n  var entry, iter, k;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this$static)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_3(iter.iter), Q$Map$Entry);\n    k = entry.getKey();\n    if (key == null?k == null:equals__devirtual$(key, k)) {\n      if (remove) {\n        entry = new MapEntryImpl_0(entry.getKey(), entry.getValue());\n        $remove_9(iter);\n      }\n      return entry;\n    }\n  }\n  return null;\n}\n\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(347, 1, makeCastMap([Q$Map]));\n_.equals$ = function equals_12(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_1()) {\n    return false;\n  }\n  for (entry$iterator = otherMap.entrySet_0().iterator(); entry$iterator.hasNext();) {\n    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.get_1 = function get_2(key){\n  var entry;\n  entry = $implFindEntry(this, key, false);\n  return !entry?null:entry.getValue();\n}\n;\n_.hashCode$ = function hashCode_14(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_3(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.isEmpty = function isEmpty_1(){\n  return this.size_0 == 0;\n}\n;\n_.put = function put(key, value_0){\n  throw new UnsupportedOperationException_1('Put not supported on this map');\n}\n;\n_.remove_3 = function remove_12(key){\n  var entry;\n  entry = $implFindEntry(this, key, true);\n  return !entry?null:entry.getValue();\n}\n;\n_.size_1 = function size_2(){\n  return (new AbstractHashMap$EntrySet_0(this)).this$0.size_0;\n}\n;\n_.toString$ = function toString_26(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_3(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_0(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_0(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_4(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put_0(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_8(this$static, key){\n  return key == null?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\nfunction $removeStringValue(this$static, key){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  if (key in stringMap) {\n    result = stringMap[key];\n    --this$static.size_0;\n    delete stringMap[key];\n  }\n  return result;\n}\n\ndefineSeed(346, 347, makeCastMap([Q$Map]));\n_.entrySet_0 = function entrySet_0(){\n  return new AbstractHashMap$EntrySet_0(this);\n}\n;\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.get_1 = function get_3(key){\n  return $get_4(this, key);\n}\n;\n_.put = function put_0(key, value_0){\n  return $put_0(this, key, value_0);\n}\n;\n_.remove_3 = function remove_13(key){\n  return $remove_8(this, key);\n}\n;\n_.size_1 = function size_3(){\n  return this.size_0;\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\ndefineSeed(349, 21, makeCastMap([Q$Set]));\n_.equals$ = function equals_13(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next_0();\n    if (!this.contains(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_15(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next_0();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value_0 = $get_4(this$static.this$0, key);\n      return $equals_0(entry.getValue(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(348, 349, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains = function contains_2(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_5(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.remove = function remove_14(entry){\n  var key;\n  if ($contains(this, entry)) {\n    key = dynamicCast(entry, Q$Map$Entry).getKey();\n    $remove_8(this.this$0, key);\n    return true;\n  }\n  return false;\n}\n;\n_.size_1 = function size_4(){\n  return this.this$0.size_0;\n}\n;\nfunction $next_2(this$static){\n  return this$static.last = dynamicCast($next_3(this$static.iter), Q$Map$Entry);\n}\n\nfunction $remove_9(this$static){\n  if (!this$static.last) {\n    throw new IllegalStateException_1('Must call next() before remove().');\n  }\n   else {\n    $remove_10(this$static.iter);\n    $remove_8(this$static.this$0, this$static.last.getKey());\n    this$static.last = null;\n  }\n}\n\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  this.this$0 = this$0;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(350, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this.iter);\n}\n;\n_.next_0 = function next_3(){\n  return $next_2(this);\n}\n;\n_.remove_2 = function remove_15(){\n  $remove_9(this);\n}\n;\n_.last = null;\ndefineSeed(352, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_14(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_16(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_27(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(351, 352, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(353, 352, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_3(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_0(this$static.last = this$static.i++);\n}\n\nfunction $remove_10(this$static){\n  if (this$static.last < 0) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0_0.remove_0(this$static.last);\n  this$static.i = this$static.last;\n  this$static.last = -1;\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(354, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_3(){\n  return $hasNext(this);\n}\n;\n_.next_0 = function next_4(){\n  return $next_3(this);\n}\n;\n_.remove_2 = function remove_16(){\n  $remove_10(this);\n}\n;\n_.i = 0;\n_.last = -1;\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(355, 354, {}, AbstractList$ListIteratorImpl_0);\n_.hasPrevious = function hasPrevious(){\n  return this.i > 0;\n}\n;\n_.previous = function previous_0(){\n  if (this.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this.this$0.get_0(this.last = --this.i);\n}\n;\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(356, 349, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains = function contains_3(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.iterator = function iterator_6(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_5(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(357, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_4(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next_0 = function next_5(){\n  var entry;\n  entry = $next_2(this.val$outerIter);\n  return entry.getKey();\n}\n;\n_.remove_2 = function remove_17(){\n  $remove_9(this.val$outerIter);\n}\n;\nfunction $add_6(this$static, index_0, element){\n  var iter;\n  iter = $listIterator(this$static, index_0);\n  $addBefore(iter.this$0, element, iter.currentNode);\n  ++iter.currentIndex;\n  iter.lastNode = null;\n}\n\nfunction $get_5(this$static, index_0){\n  var iter;\n  iter = $listIterator(this$static, index_0);\n  try {\n    return $next_4(iter);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't get element \" + index_0);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $remove_11(this$static, index_0){\n  var iter, old;\n  iter = $listIterator(this$static, index_0);\n  try {\n    old = $next_4(iter);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't remove element \" + index_0);\n    }\n     else \n      throw unwrap($e0);\n  }\n  $remove_13(iter);\n  return old;\n}\n\ndefineSeed(358, 20, makeCastMap([Q$List]));\n_.add_1 = function add_6(index_0, element){\n  $add_6(this, index_0, element);\n}\n;\n_.get_0 = function get_4(index_0){\n  return $get_5(this, index_0);\n}\n;\n_.iterator = function iterator_7(){\n  return $listIterator(this, 0);\n}\n;\n_.remove_0 = function remove_18(index_0){\n  return $remove_11(this, index_0);\n}\n;\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nfunction unmodifiableList(list){\n  $clinit_Collections();\n  return instanceOf(list, Q$RandomAccess)?new Collections$UnmodifiableRandomAccessList_0(list):new Collections$UnmodifiableList_0(list);\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(360, 20, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), Collections$EmptyList_0);\n_.contains = function contains_4(object){\n  return false;\n}\n;\n_.get_0 = function get_5(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_6(){\n  return 0;\n}\n;\nfunction Collections$UnmodifiableCollection_0(coll){\n  this.coll = coll;\n}\n\ndefineSeed(361, 1, {});\n_.add_0 = function add_7(o){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.iterator = function iterator_8(){\n  return new Collections$UnmodifiableCollectionIterator_0(this.coll.iterator());\n}\n;\n_.remove = function remove_19(o){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.size_1 = function size_7(){\n  return this.coll.size_1();\n}\n;\n_.toString$ = function toString_28(){\n  return this.coll.toString$();\n}\n;\nfunction Collections$UnmodifiableCollectionIterator_0(it){\n  this.it = it;\n}\n\ndefineSeed(362, 1, {}, Collections$UnmodifiableCollectionIterator_0);\n_.hasNext = function hasNext_5(){\n  return this.it.hasNext();\n}\n;\n_.next_0 = function next_6(){\n  return this.it.next_0();\n}\n;\n_.remove_2 = function remove_20(){\n  throw new UnsupportedOperationException_0;\n}\n;\nfunction Collections$UnmodifiableList_0(list){\n  Collections$UnmodifiableCollection_0.call(this, list);\n  this.list = list;\n}\n\ndefineSeed(363, 361, makeCastMap([Q$List]), Collections$UnmodifiableList_0);\n_.equals$ = function equals_15(o){\n  return this.list.equals$(o);\n}\n;\n_.get_0 = function get_6(index_0){\n  return this.list.get_0(index_0);\n}\n;\n_.hashCode$ = function hashCode_17(){\n  return this.list.hashCode$();\n}\n;\n_.isEmpty = function isEmpty_2(){\n  return this.list.isEmpty();\n}\n;\n_.listIterator = function listIterator_1(){\n  return new Collections$UnmodifiableListIterator_0(this.list.listIterator_0(0));\n}\n;\n_.listIterator_0 = function listIterator_2(from){\n  return new Collections$UnmodifiableListIterator_0(this.list.listIterator_0(from));\n}\n;\nfunction Collections$UnmodifiableListIterator_0(lit){\n  Collections$UnmodifiableCollectionIterator_0.call(this, lit);\n  this.lit = lit;\n}\n\ndefineSeed(364, 362, {}, Collections$UnmodifiableListIterator_0);\n_.hasPrevious = function hasPrevious_0(){\n  return this.lit.hasPrevious();\n}\n;\n_.previous = function previous_1(){\n  return this.lit.previous();\n}\n;\nfunction Collections$UnmodifiableMap_0(map_0){\n  this.map_0 = map_0;\n}\n\ndefineSeed(365, 1, makeCastMap([Q$Map]), Collections$UnmodifiableMap_0);\n_.entrySet_0 = function entrySet_1(){\n  !this.entrySet && (this.entrySet = new Collections$UnmodifiableMap$UnmodifiableEntrySet_0(this.map_0.entrySet_0()));\n  return this.entrySet;\n}\n;\n_.equals$ = function equals_16(o){\n  return this.map_0.equals$(o);\n}\n;\n_.get_1 = function get_7(key){\n  return this.map_0.get_1(key);\n}\n;\n_.hashCode$ = function hashCode_18(){\n  return this.map_0.hashCode$();\n}\n;\n_.isEmpty = function isEmpty_3(){\n  return this.map_0.isEmpty();\n}\n;\n_.put = function put_1(key, value_0){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.remove_3 = function remove_21(key){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.size_1 = function size_8(){\n  return this.map_0.size_1();\n}\n;\n_.toString$ = function toString_29(){\n  return this.map_0.toString$();\n}\n;\ndefineSeed(367, 361, makeCastMap([Q$Set]));\n_.equals$ = function equals_17(o){\n  return this.coll.equals$(o);\n}\n;\n_.hashCode$ = function hashCode_19(){\n  return this.coll.hashCode$();\n}\n;\nfunction Collections$UnmodifiableMap$UnmodifiableEntrySet_0(s){\n  Collections$UnmodifiableCollection_0.call(this, s);\n}\n\ndefineSeed(366, 367, makeCastMap([Q$Set]), Collections$UnmodifiableMap$UnmodifiableEntrySet_0);\n_.iterator = function iterator_9(){\n  var it;\n  it = this.coll.iterator();\n  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0(it);\n}\n;\nfunction Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0(val$it){\n  this.val$it = val$it;\n}\n\ndefineSeed(368, 1, {}, Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0);\n_.hasNext = function hasNext_6(){\n  return this.val$it.hasNext();\n}\n;\n_.next_0 = function next_7(){\n  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(dynamicCast(this.val$it.next_0(), Q$Map$Entry));\n}\n;\n_.remove_2 = function remove_22(){\n  throw new UnsupportedOperationException_0;\n}\n;\nfunction Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(entry){\n  this.entry = entry;\n}\n\ndefineSeed(369, 1, makeCastMap([Q$Map$Entry]), Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0);\n_.equals$ = function equals_18(o){\n  return this.entry.equals$(o);\n}\n;\n_.getKey = function getKey_1(){\n  return this.entry.getKey();\n}\n;\n_.getValue = function getValue_1(){\n  return this.entry.getValue();\n}\n;\n_.hashCode$ = function hashCode_20(){\n  return this.entry.hashCode$();\n}\n;\n_.setValue = function setValue_1(value_0){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.toString$ = function toString_30(){\n  return this.entry.toString$();\n}\n;\nfunction Collections$UnmodifiableRandomAccessList_0(list){\n  Collections$UnmodifiableList_0.call(this, list);\n}\n\ndefineSeed(370, 363, makeCastMap([Q$List, Q$RandomAccess]), Collections$UnmodifiableRandomAccessList_0);\nfunction $equals_0(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\ndefineSeed(371, 346, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);\nfunction $add_7(this$static, o){\n  var old;\n  old = $put_0(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map_0, o);\n}\n\nfunction $remove_12(this$static, o){\n  return $remove_8(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(372, 349, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_0 = function add_8(o){\n  return $add_7(this, o);\n}\n;\n_.contains = function contains_5(o){\n  return $contains_0(this, o);\n}\n;\n_.isEmpty = function isEmpty_4(){\n  return this.map_0.size_0 == 0;\n}\n;\n_.iterator = function iterator_10(){\n  return $iterator($keySet(this.map_0));\n}\n;\n_.remove = function remove_23(o){\n  return $remove_12(this, o);\n}\n;\n_.size_1 = function size_9(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_31(){\n  return $toString($keySet(this.map_0));\n}\n;\nfunction $add_8(this$static, o){\n  new LinkedList$Node_1(o, this$static.header);\n  ++this$static.size_0;\n  return true;\n}\n\nfunction $addBefore(this$static, o, target){\n  new LinkedList$Node_1(o, target);\n  ++this$static.size_0;\n}\n\nfunction $addLast(this$static, o){\n  new LinkedList$Node_1(o, this$static.header);\n  ++this$static.size_0;\n}\n\nfunction $clear_1(this$static){\n  this$static.header = new LinkedList$Node_0;\n  this$static.size_0 = 0;\n}\n\nfunction $listIterator(this$static, index_0){\n  var i, node;\n  (index_0 < 0 || index_0 > this$static.size_0) && indexOutOfBounds(index_0, this$static.size_0);\n  if (index_0 >= this$static.size_0 >> 1) {\n    node = this$static.header;\n    for (i = this$static.size_0; i > index_0; --i) {\n      node = node.prev;\n    }\n  }\n   else {\n    node = this$static.header.next;\n    for (i = 0; i < index_0; ++i) {\n      node = node.next;\n    }\n  }\n  return new LinkedList$ListIteratorImpl_0(this$static, index_0, node);\n}\n\nfunction LinkedList_0(){\n  this.header = new LinkedList$Node_0;\n  this.size_0 = 0;\n}\n\ndefineSeed(373, 358, makeCastMap([Q$Serializable, Q$List]), LinkedList_0);\n_.add_0 = function add_9(o){\n  return $add_8(this, o);\n}\n;\n_.listIterator_0 = function listIterator_3(index_0){\n  return $listIterator(this, index_0);\n}\n;\n_.size_1 = function size_10(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $next_4(this$static){\n  if (this$static.currentNode == this$static.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.lastNode = this$static.currentNode;\n  this$static.currentNode = this$static.currentNode.next;\n  ++this$static.currentIndex;\n  return this$static.lastNode.value_0;\n}\n\n",
"function $remove_13(this$static){\n  $verifyCurrentElement(this$static);\n  this$static.currentNode == this$static.lastNode?(this$static.currentNode = this$static.lastNode.next):--this$static.currentIndex;\n  $remove_14(this$static.lastNode);\n  this$static.lastNode = null;\n  --this$static.this$0.size_0;\n}\n\nfunction $verifyCurrentElement(this$static){\n  if (!this$static.lastNode) {\n    throw new IllegalStateException_0;\n  }\n}\n\nfunction LinkedList$ListIteratorImpl_0(this$0, index_0, startNode){\n  this.this$0 = this$0;\n  this.currentNode = startNode;\n  this.currentIndex = index_0;\n}\n\ndefineSeed(374, 1, {}, LinkedList$ListIteratorImpl_0);\n_.hasNext = function hasNext_7(){\n  return this.currentNode != this.this$0.header;\n}\n;\n_.hasPrevious = function hasPrevious_1(){\n  return this.currentNode.prev != this.this$0.header;\n}\n;\n_.next_0 = function next_8(){\n  return $next_4(this);\n}\n;\n_.previous = function previous_2(){\n  if (this.currentNode.prev == this.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this.lastNode = this.currentNode = this.currentNode.prev;\n  --this.currentIndex;\n  return this.lastNode.value_0;\n}\n;\n_.remove_2 = function remove_24(){\n  $remove_13(this);\n}\n;\n_.currentIndex = 0;\n_.lastNode = null;\nfunction $remove_14(this$static){\n  this$static.next.prev = this$static.prev;\n  this$static.prev.next = this$static.next;\n  this$static.next = this$static.prev = this$static;\n}\n\nfunction LinkedList$Node_0(){\n  this.next = this.prev = this;\n}\n\nfunction LinkedList$Node_1(value_0, nextNode){\n  this.value_0 = value_0;\n  this.next = nextNode;\n  this.prev = nextNode.prev;\n  nextNode.prev.next = this;\n  nextNode.prev = this;\n}\n\ndefineSeed(375, 1, {}, LinkedList$Node_0, LinkedList$Node_1);\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(376, 352, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_2(){\n  return this.key;\n}\n;\n_.getValue = function getValue_2(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_2(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(377, 57, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable, Q$NoSuchElementException]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nfunction Configuration_0(modset, modlist){\n  var i;\n  this.moduleList = new LinkedList_0;\n  new LinkedList_0;\n  new LinkedList_0;\n  this.moduleList = modlist;\n  for (i = 0; i < modset.modList.size_0; i++) {\n    $add_8(this.moduleList, dynamicCast($get_5(modset.modList, i), Q$MarsModule));\n  }\n}\n\ndefineSeed(379, 1, {}, Configuration_0);\nfunction $makeImage(img){\n  var image;\n  image = ($clinit_DOM() , img.element);\n  $addHandler(img, new GraphicPack$1_0, ($clinit_LoadEvent() , $clinit_LoadEvent() , TYPE_2));\n  $add_1(($clinit_RootPanel() , get_1()), img);\n  setVisible(img.element, false);\n  return image;\n}\n\nfunction GraphicPack_0(){\n  var air, bla, can, con, dor, foo, gym, mar, med, pla, pow_0, san, ter;\n  mar = new Image_2('resources/images/Mars Surface.jpg');\n  san = new Image_2('resources/modpics/Sanitation.jpg');\n  air = new Image_2('resources/modpics/Airlock.jpg');\n  ter = new Image_2('resources/modpics/Bad Terrain.jpg');\n  can = new Image_2('resources/modpics/Canteen.jpg');\n  con = new Image_2('resources/modpics/Control.jpg');\n  dor = new Image_2('resources/modpics/Dormitory.jpg');\n  foo = new Image_2('resources/modpics/Food.jpg');\n  gym = new Image_2('resources/modpics/Gym.jpg');\n  med = new Image_2('resources/modpics/Medical.jpg');\n  pla = new Image_2('resources/modpics/Plain.jpg');\n  pow_0 = new Image_2('resources/modpics/Power.jpg');\n  bla = new Image_2('resources/modpics/blank.jpg');\n  this.mars = $makeImage(mar);\n  this.sanitation = $makeImage(san);\n  this.airlock = $makeImage(air);\n  $makeImage(ter);\n  $makeImage(can);\n  this.control = $makeImage(con);\n  this.dormitory = $makeImage(dor);\n  this.food = $makeImage(foo);\n  $makeImage(gym);\n  this.medical = $makeImage(med);\n  this.plain = $makeImage(pla);\n  this.power = $makeImage(pow_0);\n  this.blank = $makeImage(bla);\n}\n\ndefineSeed(380, 1, {}, GraphicPack_0);\nfunction GraphicPack$1_0(){\n}\n\ndefineSeed(381, 1, makeCastMap([Q$LoadHandler, Q$EventHandler]), GraphicPack$1_0);\nfunction $$init_0(this$static){\n  this$static.xcoord = valueOf(-1);\n  this$static.ycoord = valueOf(-1);\n  this$static.id_0 = valueOf(0);\n  this$static.orientation = valueOf(0);\n}\n\nfunction $setID(this$static, x_0){\n  this$static.id_0 = valueOf(x_0);\n  this$static.type_0 = this$static.id_0.value_0 > 0 && this$static.id_0.value_0 < 41?'Plain':this$static.id_0.value_0 > 60 && this$static.id_0.value_0 < 81?'Dormitory':this$static.id_0.value_0 > 90 && this$static.id_0.value_0 < 101?'Sanitation':this$static.id_0.value_0 > 110 && this$static.id_0.value_0 < 121?'Food & Water':this$static.id_0.value_0 > 130 && this$static.id_0.value_0 < 135?'Gym & Relaxation':this$static.id_0.value_0 > 140 && this$static.id_0.value_0 < 145?'Canteen':this$static.id_0.value_0 > 150 && this$static.id_0.value_0 < 155?'Power':this$static.id_0.value_0 > 160 && this$static.id_0.value_0 < 165?'Control':this$static.id_0.value_0 > 170 && this$static.id_0.value_0 < 175?'Airlock':this$static.id_0.value_0 > 180 && this$static.id_0.value_0 < 185?'Medical':'Unknown';\n}\n\nfunction MarsModule_0(){\n  $$init_0(this);\n}\n\nfunction MarsModule_1(xdim, ydim, idnum, cond, ori){\n  $$init_0(this);\n  this.xcoord = valueOf(xdim);\n  this.ycoord = valueOf(ydim);\n  this.id_0 = valueOf(idnum);\n  this.type_0 = this.id_0.value_0 > 0 && this.id_0.value_0 < 41?'Plain':this.id_0.value_0 > 60 && this.id_0.value_0 < 81?'Dormitory':this.id_0.value_0 > 90 && this.id_0.value_0 < 101?'Sanitation':this.id_0.value_0 > 110 && this.id_0.value_0 < 121?'Food & Water':this.id_0.value_0 > 130 && this.id_0.value_0 < 135?'Gym & Relaxation':this.id_0.value_0 > 140 && this.id_0.value_0 < 145?'Canteen':this.id_0.value_0 > 150 && this.id_0.value_0 < 155?'Power':this.id_0.value_0 > 160 && this.id_0.value_0 < 165?'Control':this.id_0.value_0 > 170 && this.id_0.value_0 < 175?'Airlock':this.id_0.value_0 > 180 && this.id_0.value_0 < 185?'Medical':'Unknown';\n  this.condition = cond;\n  this.orientation = valueOf(ori);\n}\n\ndefineSeed(382, 1, makeCastMap([Q$MarsModule]), MarsModule_0, MarsModule_1);\n_.condition = '';\n_.type_0 = '';\nfunction $addModsetString(this$static, rt){\n  if (rt.length < 5)\n  ;\n  else {\n    this$static.modsetCounter = valueOf(this$static.modsetCounter.value_0 + 1);\n    $addLast(this$static.modString, rt);\n  }\n}\n\nfunction $loadLocalStore(this$static){\n  var $tmp, ex, i, jA, jN, jO, jS, modCond, modID, modOri, modX, modY, newModule, sConfigOne;\n  i = valueOf(0);\n  try {\n    this$static.tendaytime = __parseAndValidateLong($getItem(this$static.localStorage_0, 'tendaytime'));\n    sConfigOne = $getItem(this$static.localStorage_0, 'config1');\n    jA = ($clinit_JSONParser() , dynamicCast(parse_0(sConfigOne), Q$JSONArray));\n    if (!this$static.localFail) {\n      for (i = valueOf(0); i.value_0 < jA.jsArray.length; $tmp = i , i = valueOf(i.value_0 + 1) , $tmp) {\n        try {\n          jO = dynamicCast($get_0(jA, i.value_0), Q$JSONObject);\n          jN = dynamicCast($get_1(jO, 'code'), Q$JSONNumber);\n          modID = valueOf(round_int(jN.value_0));\n          jS = dynamicCast($get_1(jO, 'status'), Q$JSONString);\n          modCond = jS.value_0;\n          jN = dynamicCast($get_1(jO, 'turns'), Q$JSONNumber);\n          modOri = valueOf(round_int(jN.value_0));\n          jN = dynamicCast($get_1(jO, 'X'), Q$JSONNumber);\n          modX = valueOf(round_int(jN.value_0));\n          jN = dynamicCast($get_1(jO, 'Y'), Q$JSONNumber);\n          modY = valueOf(round_int(jN.value_0));\n          newModule = new MarsModule_1(modX.value_0, modY.value_0, modID.value_0, modCond, modOri.value_0);\n          $addModule_0(this$static.modset, newModule);\n        }\n         catch ($e0) {\n          $e0 = wrap($e0);\n          if (instanceOf($e0, Q$JSONException)) {\n            ex = $e0;\n            alert_0(ex.detailMessage + '\\n' + i.value_0 + '\\n in loop');\n          }\n           else \n            throw unwrap($e0);\n        }\n      }\n    }\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (!instanceOf($e1, Q$Exception))\n      throw unwrap($e1);\n  }\n}\n\nfunction $loadTestData(this$static){\n  var builder, i, url_0;\n  i = 0;\n  while (i < 20) {\n    url_0 = 'http://www.d.umn.edu/~degre028/Proxy.php?url=http://www.d.umn.edu/~abrooks/SomeTests.php?q=' + i;\n    url_0 = (throwIfNull('decodedURL', url_0) , encodeURI(url_0));\n    builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET), url_0);\n    try {\n      $sendRequest(builder, new MarsStorage$1_0(this$static));\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$RequestException)) {\n        alert_0(\"RequestException: Couldn't retrieve JSON\");\n      }\n       else \n        throw unwrap($e0);\n    }\n    ++i;\n  }\n}\n\nfunction $saveTenDayTime(this$static, time){\n  $setItem(this$static.localStorage_0, 'tendaytime', '' + toString_17(time));\n}\n\nfunction $saveToLocalStore(this$static){\n  var $tmp, e, i, mainSave, mod, modString;\n  try {\n    if (!this$static.localFail) {\n      mainSave = new StringBuilder_0;\n      $append_0(mainSave.impl, '[');\n      for (i = valueOf(0); i.value_0 < this$static.modset.modList.size_0; $tmp = i , i = valueOf(i.value_0 + 1) , $tmp) {\n        modString = new StringBuilder_0;\n        mod = $getModule(this$static.modset, i.value_0);\n        $append_0(modString.impl, '{code:');\n        $append_3(modString, mod.id_0);\n        $append_0(modString.impl, ',status:\"');\n        $append_4(modString, mod.condition);\n        $append_0(modString.impl, '\",turns:');\n        $append_3(modString, mod.orientation);\n        $append_0(modString.impl, ',X:');\n        $append_3(modString, mod.xcoord);\n        $append_0(modString.impl, ',Y:');\n        $append_3(modString, mod.ycoord);\n        $append_0(modString.impl, '}');\n        $append(mainSave.impl, modString);\n        i.value_0 != this$static.modset.modList.size_0 - 1 && ($append_0(mainSave.impl, ',') , mainSave);\n      }\n      $append_0(mainSave.impl, ']');\n      $setItem(this$static.localStorage_0, 'number', '' + i.value_0);\n      $setItem(this$static.localStorage_0, 'config1', mainSave.impl.string);\n    }\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      e = $e0;\n      alert_0(e.getMessage());\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $updateModSet(this$static, i){\n  var builder, url_0;\n  ++i;\n  url_0 = 'http://www.d.umn.edu/~degre028/Proxy.php?url=http://www.d.umn.edu/~abrooks/SomeTests.php?q=' + i;\n  url_0 = (throwIfNull('decodedURL', url_0) , encodeURI(url_0));\n  builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET), url_0);\n  try {\n    $sendRequest(builder, new MarsStorage$2_0(this$static));\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$RequestException)) {\n      alert_0(\"RequestException: Couldn't retrieve JSON\");\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $updateSecondCall(this$static, sConfig){\n  var i, jA, jN, jO, jS, modCond, modID, modOri, modX, modY, newModule;\n  jA = ($clinit_JSONParser() , dynamicCast(parse_0(sConfig), Q$JSONArray));\n  for (i = 0; i < jA.jsArray.length; i++) {\n    jO = dynamicCast($get_0(jA, i), Q$JSONObject);\n    jN = dynamicCast($get_1(jO, 'code'), Q$JSONNumber);\n    modID = valueOf(round_int(jN.value_0));\n    jS = dynamicCast($get_1(jO, 'status'), Q$JSONString);\n    modCond = jS.value_0;\n    jN = dynamicCast($get_1(jO, 'turns'), Q$JSONNumber);\n    modOri = valueOf(round_int(jN.value_0));\n    jN = dynamicCast($get_1(jO, 'X'), Q$JSONNumber);\n    modX = valueOf(round_int(jN.value_0));\n    jN = dynamicCast($get_1(jO, 'Y'), Q$JSONNumber);\n    modY = valueOf(round_int(jN.value_0));\n    newModule = new MarsModule_1(modX.value_0, modY.value_0, modID.value_0, modCond, modOri.value_0);\n    $addModule_0(this$static.modset, newModule);\n  }\n}\n\nfunction MarsStorage_0(mset){\n  this.modString = new LinkedList_0;\n  this.modsetCounter = valueOf(0);\n  this.modset = mset;\n  this.localStorage_0 = getLocalStorageIfSupported();\n  !this.localStorage_0 && (this.localFail = true);\n}\n\ndefineSeed(383, 1, {}, MarsStorage_0);\n_.localFail = false;\n_.tendaytime = P0_longLit;\nfunction MarsStorage$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(384, 1, {}, MarsStorage$1_0);\n_.onError = function onError(request, exception){\n  alert_0(\"onError: Couldn't retrieve JSON\");\n}\n;\n_.onResponseReceived = function onResponseReceived(request, response){\n  var rt;\n  if (200 == response.xmlHttpRequest.status) {\n    rt = response.xmlHttpRequest.responseText;\n    $addModsetString(this.this$0, rt);\n  }\n}\n;\nfunction MarsStorage$2_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(385, 1, {}, MarsStorage$2_0);\n_.onError = function onError_0(request, exception){\n  alert_0(\"onError: Couldn't retrieve JSON\");\n}\n;\n_.onResponseReceived = function onResponseReceived_0(request, response){\n  var rt;\n  if (200 == response.xmlHttpRequest.status) {\n    rt = response.xmlHttpRequest.responseText;\n    $updateSecondCall(this.this$0, rt);\n  }\n}\n;\nfunction $addModule(this$static, i, mod){\n  $add_6(this$static.modList, i, mod);\n  $saveToLocalStore(this$static.storage);\n}\n\nfunction $addModule_0(this$static, mod){\n  $addLast(this$static.modList, mod);\n  $saveToLocalStore(this$static.storage);\n}\n\nfunction $getModule(this$static, i){\n  return dynamicCast($get_5(this$static.modList, i), Q$MarsModule);\n}\n\nfunction $removeModule(this$static, i){\n  $remove_11(this$static.modList, i);\n  $saveToLocalStore(this$static.storage);\n}\n\nfunction ModuleSet_0(graphics){\n  this.configList = new LinkedList_0;\n  this.modList = new LinkedList_0;\n  this.storage = new MarsStorage_0(this);\n  this.graphics = graphics;\n  this.gui = new GUI_0(this);\n  $addLast(this.configList, new Configuration_0(this, this.modList));\n  $loadTestData(this.storage);\n}\n\ndefineSeed(386, 1, {}, ModuleSet_0);\nfunction $passChecker(this$static, user, pass){\n  var i, index_0;\n  index_0 = 0;\n  for (i = 0; i < this$static.usernames.size_0; i++) {\n    $equals(dynamicCast($get_5(this$static.usernames, i), Q$String), user) && (index_0 = i);\n  }\n  return $equals(dynamicCast($get_5(this$static.passwds, index_0), Q$String), pass);\n}\n\nfunction Passwd_0(){\n  this.usernames = new LinkedList_0;\n  this.passwds = new LinkedList_0;\n  $addLast(this.usernames, 'adam');\n  $addLast(this.passwds, 'adamPass');\n  $addLast(this.usernames, 'will');\n  $addLast(this.passwds, 'willPass');\n  $addLast(this.usernames, 'rob');\n  $addLast(this.passwds, 'robPass');\n  $addLast(this.usernames, '1');\n  $addLast(this.passwds, '1');\n  $addLast(this.usernames, 'user');\n  $addLast(this.passwds, 'pass');\n}\n\ndefineSeed(387, 1, {}, Passwd_0);\ndefineSeed(389, 302, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $getImage(this$static, type_0){\n  return $equals(type_0, 'Plain')?this$static.plain:$equals(type_0, 'Dormitory')?this$static.dormitory:$equals(type_0, 'Sanitation')?this$static.sanitation:$equals(type_0, 'Food & Water')?this$static.food:$equals(type_0, 'Gym & Relaxation')?this$static.gymnasium:$equals(type_0, 'Canteeen')?this$static.canteen:$equals(type_0, 'Power')?this$static.power:$equals(type_0, 'Control')?this$static.control:$equals(type_0, 'Airlock')?this$static.airlock:$equals(type_0, 'Medical')?this$static.medical:this$static.medical;\n}\n\nfunction $refreshDisplay(this$static){\n  var damagedArea, damagedMod, drawMod, i, i0, i1, xcoor, ycoor;\n  $drawImage(this$static.context1, this$static.mars, 1, 1, 2872, 1436);\n  damagedArea = 'rgba(0, 0,0, 0.5)';\n  $setFillStyleWeb(this$static.context1, damagedArea);\n  $fillRect(this$static.context1, 1148.8, 0, 287.2, 287.2);\n  for (i0 = 0; i0 < 100; i0++) {\n    $getCanvasElement(this$static.canvas).getContext('2d');\n    $beginPath(this$static.context1);\n    $moveTo(this$static.context1, i0 * 28.72, 0);\n    $lineTo(this$static.context1, i0 * 28.72, 1436);\n    $stroke(this$static.context1);\n    $closePath(this$static.context1);\n  }\n  for (i1 = 0; i1 < 50; i1++) {\n    $getCanvasElement(this$static.canvas).getContext('2d');\n    $beginPath(this$static.context1);\n    $moveTo(this$static.context1, 0, i1 * 28.72);\n    $lineTo(this$static.context1, 2872, i1 * 28.72);\n    $stroke(this$static.context1);\n    $closePath(this$static.context1);\n  }\n  for (i = 0; i < this$static.modset.modList.size_0; i++) {\n    drawMod = $getModule(this$static.modset, i);\n    xcoor = drawMod.xcoord.value_0 - 1;\n    ycoor = drawMod.ycoord.value_0 - 1;\n    $drawImage(this$static.context1, $getImage(this$static, $getModule(this$static.modset, i).type_0), xcoor * 28.72, (49 - ycoor) * 28.72, 28.72, 28.72);\n    if ($equals(drawMod.condition, 'Damaged')) {\n      damagedMod = 'rgba(255, 0,0, 0.4)';\n      $setFillStyleWeb(this$static.context1, damagedMod);\n      $fillRect(this$static.context1, xcoor * 28.72, (49 - ycoor) * 28.72, 28.72, 28.72);\n    }\n    if ($equals(drawMod.condition, 'Uncertain')) {\n      damagedMod = 'rgba(255, 255,0, 0.4)';\n      $setFillStyleWeb(this$static.context1, damagedMod);\n      $fillRect(this$static.context1, xcoor * 28.72, (49 - ycoor) * 28.72, 28.72, 28.72);\n    }\n  }\n}\n\nfunction CnvsMap_0(modset){\n  var graphics;\n  SimplePanel_0.call(this);\n  this.scrollableElem = ($clinit_DOM() , this.element);\n  this.containerElem = $doc.createElement('div');\n  $appendChild(this.scrollableElem, this.containerElem);\n  this.scrollableElem.style['overflow'] = ($clinit_Style$Overflow() , 'auto');\n  this.scrollableElem.style['position'] = ($clinit_Style$Position() , 'relative');\n  this.containerElem.style['position'] = 'relative';\n  $setPropertyImpl(this.scrollableElem.style, 'zoom', '1');\n  $setPropertyImpl(this.containerElem.style, 'zoom', '1');\n  $setTouchScrollingDisabled(this);\n  !impl_4 && (impl_4 = new ScrollImpl_0);\n  this.mainPanel = new FlowPanel_0;\n  $getElement(this.mainPanel).style['width'] = 100 + ($clinit_Style$Unit() , 'px');\n  $setWidth(this.mainPanel, '100px');\n  $setHeight(this.mainPanel, '100px');\n  $getElement(this.mainPanel).style['height'] = '100px';\n  this.element.style['width'] = '100%';\n  this.element.style['height'] = '100%';\n  $add_3(this, this.mainPanel);\n  this.canvas = createIfSupported();\n  this.context1 = $getCanvasElement(this.canvas).getContext('2d');\n  graphics = modset.graphics;\n  this.modset = modset;\n  $setPixelSize(this.canvas);\n  $setCoordinateSpaceHeight(this.canvas);\n  $setCoordinateSpaceWidth(this.canvas);\n  new Image_2('resources/images/Mars Surface.jpg');\n  new Image_2('resources/modpics/Sanitation.jpg');\n  new Image_2('resources/modpics/Airlock.jpg');\n  new Image_2('resources/modpics/Bad Terrain.jpg');\n  new Image_2('resources/modpics/Canteen.jpg');\n  new Image_2('resources/modpics/Control.jpg');\n  new Image_2('resources/modpics/Dormitory.jpg');\n  new Image_2('resources/modpics/Food.jpg');\n  new Image_2('resources/modpics/Gym.jpg');\n  new Image_2('resources/modpics/Medical.jpg');\n  new Image_2('resources/modpics/Plain.jpg');\n  new Image_2('resources/modpics/Power.jpg');\n  this.mars = graphics.mars;\n  this.sanitation = graphics.sanitation;\n  this.airlock = graphics.airlock;\n  this.canteen = graphics.blank;\n  this.control = graphics.control;\n  this.dormitory = graphics.dormitory;\n  this.food = graphics.food;\n  this.gymnasium = graphics.blank;\n  this.medical = graphics.medical;\n  this.plain = graphics.plain;\n  this.power = graphics.power;\n  this.context1.clearRect(0, 0, 2872, 1436);\n  $add_2(this.mainPanel, this.canvas);\n}\n\ndefineSeed(388, 389, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), CnvsMap_0);\nfunction $onModuleLoad_0(){\n  var starter;\n  starter = new Starter_0;\n  $add_1(($clinit_RootPanel() , get_1()), starter);\n}\n\nfunction AAMarsProject_0(){\n  $clinit_GreetingService_Proxy();\n}\n\ndefineSeed(390, 1, {}, AAMarsProject_0);\nfunction $clinit_GreetingService_Proxy(){\n  $clinit_GreetingService_Proxy = nullMethod;\n  new GreetingService_TypeSerializer_0;\n}\n\nfunction $clinit_GreetingService_TypeSerializer(){\n  var result, result_0;\n  $clinit_GreetingService_TypeSerializer = nullMethod;\n  result = {};\n  result['com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533'] = [instantiate, deserialize, serialize];\n  result['com.google.gwt.user.client.rpc.RpcTokenException/2345075298'] = [instantiate_0, deserialize_0];\n  result['com.google.gwt.user.client.rpc.XsrfToken/4254043109'] = [undefined, undefined, serialize_0];\n  result['java.lang.IllegalArgumentException/1755012560'] = [instantiate_1, deserialize_1];\n  result['java.lang.NumberFormatException/3305228476'] = [instantiate_2, deserialize_2];\n  result['java.lang.String/2004016611'] = [instantiate_3, deserialize_3, serialize_1];\n  result_0 = [];\n  result_0[getHashCode(Lcom_google_gwt_user_client_rpc_IncompatibleRemoteServiceException_2_classLit)] = 'com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533';\n  result_0[getHashCode(Lcom_google_gwt_user_client_rpc_RpcTokenException_2_classLit)] = 'com.google.gwt.user.client.rpc.RpcTokenException/2345075298';\n  result_0[getHashCode(Lcom_google_gwt_user_client_rpc_XsrfToken_2_classLit)] = 'com.google.gwt.user.client.rpc.XsrfToken/4254043109';\n  result_0[getHashCode(Ljava_lang_IllegalArgumentException_2_classLit)] = 'java.lang.IllegalArgumentException/1755012560';\n  result_0[getHashCode(Ljava_lang_NumberFormatException_2_classLit)] = 'java.lang.NumberFormatException/3305228476';\n  result_0[getHashCode(Ljava_lang_String_2_classLit)] = 'java.lang.String/2004016611';\n}\n\nfunction GreetingService_TypeSerializer_0(){\n  $clinit_GreetingService_TypeSerializer();\n  new HashMap_0;\n}\n\ndefineSeed(392, 255, {}, GreetingService_TypeSerializer_0);\nfunction CtrlPanel_0(){\n  this.mainPanel = new FlowPanel_0;\n  this.headerLabel = new Label_1('DEFAULT CONTROL');\n  $getElement(this.headerLabel).style['fontSize'] = 1.8 + ($clinit_Style$Unit() , 'em');\n  $getElement(this.headerLabel).style['width'] = '100%';\n  $setHorizontalAlignment(this.headerLabel, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n  $add_2(this.mainPanel, this.headerLabel);\n  $initWidget(this, this.mainPanel);\n}\n\ndefineSeed(394, 266, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $editArea(this$static, modules, lb){\n  var editPanel;\n  editPanel = new FlowPanel_0;\n  ($clinit_DOM() , editPanel.element).style['paddingTop'] = 20 + ($clinit_Style$Unit() , 'px');\n  $listBoxUpdater(this$static, lb, modules);\n  lb.element.style['width'] = '100%';\n  $setSize_0($getSelectElement(lb), 16);\n  $add_0(editPanel, lb, editPanel.element);\n  return editPanel;\n}\n\nfunction $listBoxUpdater(this$static, lb, modules){\n  var i, strbuild;\n  $selectClear($getSelectElement(lb));\n  for (i = 0; i < modules.modList.size_0; i++) {\n    strbuild = new StringBuilder_0;\n    $append_0(strbuild.impl, '(');\n    $append_3(strbuild, dynamicCast($get_5(modules.modList, i), Q$MarsModule).xcoord);\n    $append_0(strbuild.impl, ',');\n    $append_3(strbuild, dynamicCast($get_5(modules.modList, i), Q$MarsModule).ycoord);\n    $append_0(strbuild.impl, ') - ');\n    $append_4(strbuild, dynamicCast($get_5(modules.modList, i), Q$MarsModule).type_0);\n    $insertItem(lb, strbuild.impl.string);\n  }\n  $getSelectElement(lb).options.length == 0 && !this$static.isNew && this$static.btnSubmit.setEnabled(false);\n}\n\nfunction $populateTextBoxes(this$static){\n  var tempMod;\n  tempMod = $getModule(this$static.modules, $getSelectElement(this$static.listModules).selectedIndex);\n  $setText_1(this$static.tbX, '' + tempMod.xcoord.value_0);\n  $setText_1(this$static.tbY, '' + tempMod.ycoord.value_0);\n  $setText_1(this$static.tbID, '' + tempMod.id_0.value_0);\n  $setText_1(this$static.tbCond, tempMod.condition);\n  $setText_1(this$static.tbOri, '' + tempMod.orientation.value_0);\n  $setText_1(this$static.tbType, tempMod.type_0);\n  $setSelectedIndex_0(this$static.ltOri, tempMod.orientation.value_0);\n  $equals(tempMod.condition, 'Good') && $setSelectedIndex_0(this$static.ltCond, 0);\n  $equals(tempMod.condition, 'Damaged') && $setSelectedIndex_0(this$static.ltCond, 1);\n  $equals(tempMod.condition, 'Broken') && $setSelectedIndex_0(this$static.ltCond, 2);\n}\n\nfunction $setupDisplay(this$static){\n  $listBoxUpdater(this$static, this$static.listModules, this$static.modules);\n  if (this$static.isNew) {\n    $setText_1(this$static.tbX, '');\n    $setText_1(this$static.tbY, '');\n    $setText_1(this$static.tbID, '');\n    $setSelectedIndex_0(this$static.ltOri, 0);\n    $setSelectedIndex_0(this$static.ltCond, 0);\n    $setText_1(this$static.tbType, '');\n  }\n   else {\n    this$static.btnSubmit.setEnabled(false);\n    this$static.btnCancel.setEnabled(false);\n    $setText_1(this$static.tbX, '');\n    $setText_1(this$static.tbY, '');\n    $setText_1(this$static.tbID, '');\n    $setSelectedIndex_0(this$static.ltOri, 0);\n    $setSelectedIndex_0(this$static.ltCond, 0);\n    $setText_1(this$static.tbType, '');\n  }\n}\n\nfunction $textBoxMaker(tb){\n  $setSize($getElement(tb), 8);\n  ($clinit_DOM() , tb.element).style['width'] = 90 + ($clinit_Style$Unit() , '%');\n}\n\nfunction CtrlAddModule_0(isNew, modules){\n  var coordTable, lbCond, lbID, lbOri, lbType, lbX, lbY, mainPanel;\n  CtrlPanel_0.call(this);\n  this.soundController = new SoundController_0;\n  this.isNew = isNew;\n  isNew?$setText_0(this.headerLabel, 'Add Module'):$setText_0(this.headerLabel, 'Edit Module');\n  mainPanel = new FlowPanel_0;\n  coordTable = new FlexTable_0;\n  this.listModules = new ListBox_0;\n  this.modules = modules;\n  this.btnSubmit = new Button_1('Save');\n  this.btnCancel = new Button_1('Delete');\n  ($clinit_DOM() , mainPanel.element).style['width'] = 95 + ($clinit_Style$Unit() , '%');\n  mainPanel.element.style['height'] = '90%';\n  mainPanel.element.style['padding'] = '4px';\n  lbX = new Label_1('X Coord.:');\n  lbX.element.style['width'] = '100%';\n  lbY = new Label_1('Y Coord.:');\n  lbY.element.style['width'] = '100%';\n  lbID = new Label_1('ID:');\n  lbY.element.style['width'] = '100%';\n  lbOri = new Label_1('Orientation:');\n  lbOri.element.style['width'] = '100%';\n  lbCond = new Label_1('Condition:');\n  lbCond.element.style['width'] = '100%';\n  lbType = new Label_1('Type:');\n  lbType.element.style['width'] = '100%';\n  this.tbX = new TextBox_0;\n  $textBoxMaker(this.tbX);\n  this.tbY = new TextBox_0;\n  $textBoxMaker(this.tbY);\n  this.tbID = new TextBox_0;\n  $textBoxMaker(this.tbID);\n  this.tbOri = new TextBox_0;\n  $textBoxMaker(this.tbOri);\n  this.tbCond = new TextBox_0;\n  $textBoxMaker(this.tbCond);\n  this.tbType = new TextBox_0;\n  $textBoxMaker(this.tbType);\n  $setText_1(this.tbType, '');\n  $setEnabled(this.tbType, false);\n  this.ltOri = new ListBox_0;\n  this.ltCond = new ListBox_0;\n  $insertItem(this.ltOri, '0 Turns');\n  $insertItem(this.ltOri, '1 Turns');\n  $insertItem(this.ltOri, '2 Turns');\n  $insertItem(this.ltCond, 'Undamaged');\n  $insertItem(this.ltCond, 'Damaged');\n  $insertItem(this.ltCond, 'Uncertain');\n  $getElement(this.btnSubmit).style['width'] = '50%';\n  $getElement(this.btnCancel).style['width'] = '50%';\n  $setPropertyString($ensureColumn(coordTable.columnFormatter, 0), 'width', '50%');\n  $setPropertyString($ensureColumn(coordTable.columnFormatter, 1), 'width', '50%');\n  coordTable.element.style['paddingTop'] = '10px';\n  coordTable.element.style['paddingBottom'] = '10px';\n  $setWidget(coordTable, 0, 0, lbX);\n  $setWidget(coordTable, 0, 1, this.tbX);\n  $setWidget(coordTable, 1, 0, lbY);\n  $setWidget(coordTable, 1, 1, this.tbY);\n  $setWidget(coordTable, 2, 0, lbID);\n  $setWidget(coordTable, 2, 1, this.tbID);\n  $setWidget(coordTable, 3, 0, lbOri);\n  $setWidget(coordTable, 3, 1, this.ltOri);\n  $setWidget(coordTable, 4, 0, lbCond);\n  $setWidget(coordTable, 4, 1, this.ltCond);\n  $setWidget(coordTable, 5, 0, lbType);\n  $setWidget(coordTable, 5, 1, this.tbType);\n  $addDomHandler(this.btnSubmit, new CtrlAddModule$1_0(this, isNew, modules), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  $addDomHandler(this.btnCancel, new CtrlAddModule$2_0(this, modules), TYPE_0);\n  $addDomHandler(this.listModules, new CtrlAddModule$3_0(this), ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  $addValueChangeHandler_0(this.tbID, new CtrlAddModule$4_0(this));\n  $add_0(mainPanel, coordTable, mainPanel.element);\n  $add_2(mainPanel, this.btnSubmit);\n  $add_2(mainPanel, this.btnCancel);\n  $add_2(mainPanel, $editArea(this, modules, this.listModules));\n  if (isNew) {\n    $setEnabled(this.listModules, false);\n    this.btnSubmit.setEnabled(true);\n    $setText(this.btnSubmit);\n    this.btnCancel.setEnabled(false);\n  }\n  $add_2(this.mainPanel, mainPanel);\n}\n\ndefineSeed(393, 394, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CtrlAddModule_0);\n_.setupDisplay = function setupDisplay(){\n  $setupDisplay(this);\n}\n;\n_.isNew = false;\nfunction CtrlAddModule$1_0(this$0, val$isNew, val$modules){\n  this.this$0 = this$0;\n  this.val$isNew = val$isNew;\n  this.val$modules = val$modules;\n}\n\ndefineSeed(395, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), CtrlAddModule$1_0);\n",
"_.onClick = function onClick(ev){\n  var newMod;\n  try {\n    if (!this.val$isNew) {\n      $removeModule(this.val$modules, $getSelectElement(this.this$0.listModules).selectedIndex);\n      $createSound(this.this$0.soundController, 'resources/audio/Edited_Module.wav');\n    }\n    newMod = new MarsModule_1(__parseAndValidateInt($getText_0(this.this$0.tbX)), __parseAndValidateInt($getText_0(this.this$0.tbY)), __parseAndValidateInt($getText_0(this.this$0.tbID)), $getValue(this.this$0.ltCond, $getSelectElement(this.this$0.ltCond).selectedIndex), $getSelectElement(this.this$0.ltOri).selectedIndex);\n    if (this.val$isNew) {\n      $addModule_0(this.val$modules, newMod);\n      $createSound(this.this$0.soundController, 'resources/audio/Added_Module.wav');\n    }\n     else {\n      $addModule(this.val$modules, $getSelectElement(this.this$0.listModules).selectedIndex, newMod);\n    }\n    $listBoxUpdater(this.this$0, this.this$0.listModules, this.val$modules);\n    $setupDisplay(this.this$0);\n    this.val$isNew || this.this$0.btnSubmit.setEnabled(false);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$NumberFormatException)) {\n      alert_0('Invalid Input!');\n    }\n     else if (instanceOf($e0, Q$UmbrellaException)) {\n      alert_0('Invalid Input!');\n    }\n     else \n      throw unwrap($e0);\n  }\n  $refreshDisplay(this.val$modules.gui.curCanvas);\n}\n;\n_.val$isNew = false;\nfunction CtrlAddModule$2_0(this$0, val$modules){\n  this.this$0 = this$0;\n  this.val$modules = val$modules;\n}\n\ndefineSeed(396, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), CtrlAddModule$2_0);\n_.onClick = function onClick_0(ev){\n  if ($getSelectElement(this.this$0.listModules).selectedIndex != -1) {\n    $removeModule(this.val$modules, $getSelectElement(this.this$0.listModules).selectedIndex);\n    $listBoxUpdater(this.this$0, this.this$0.listModules, this.val$modules);\n    $refreshDisplay(this.val$modules.gui.curCanvas);\n    this.this$0.btnCancel.setEnabled(false);\n    $createSound(this.this$0.soundController, 'resources/audio/Deleted_Module.wav');\n  }\n   else {\n    alert_0('Add Module First');\n  }\n}\n;\nfunction CtrlAddModule$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(397, 1, makeCastMap([Q$ChangeHandler, Q$EventHandler]), CtrlAddModule$3_0);\n_.onChange = function onChange_0(ev){\n  if ($getSelectElement(this.this$0.listModules).selectedIndex > -1) {\n    this.this$0.btnSubmit.setEnabled(true);\n    this.this$0.btnCancel.setEnabled(true);\n    $populateTextBoxes(this.this$0);\n  }\n}\n;\nfunction CtrlAddModule$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(398, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), CtrlAddModule$4_0);\n_.onValueChange = function onValueChange_0(event_0){\n  var checkModule;\n  checkModule = new MarsModule_0;\n  $setID(checkModule, __parseAndValidateInt($getText_0(this.this$0.tbID)));\n  $setText_1(this.this$0.tbType, checkModule.type_0);\n}\n;\nfunction CtrlConfig_0(){\n  var btnDelete, btnDuplicate, btnGenerate, btnLoad, buttonPanel, editPanel, lbActiveConfig, lbNameOfActiveConfig, mainPanel, nameTable;\n  CtrlPanel_0.call(this);\n  this.libListOfConfigs = new ListBox_0;\n  $setText_0(this.headerLabel, 'Configurations');\n  mainPanel = new FlowPanel_0;\n  ($clinit_DOM() , mainPanel.element).style['paddingLeft'] = 10 + ($clinit_Style$Unit() , 'px');\n  mainPanel.element.style['paddingTop'] = '20px';\n  mainPanel.element.style['paddingRight'] = '10px';\n  nameTable = new FlexTable_0;\n  lbActiveConfig = new Label_1('Active Config: ');\n  lbActiveConfig.element.style['fontSize'] = '1.2em';\n  lbNameOfActiveConfig = new Label_1('Live Config');\n  $setWidget(nameTable, 0, 0, lbActiveConfig);\n  $setWidget(nameTable, 1, 0, lbNameOfActiveConfig);\n  editPanel = new FlowPanel_0;\n  editPanel.element.style['paddingTop'] = '20px';\n  $add_2(editPanel, new Label_1('Configuration Listing'));\n  $setWidth(this.libListOfConfigs, '100%');\n  $setVisibleItemCount(this.libListOfConfigs);\n  $add_2(editPanel, this.libListOfConfigs);\n  buttonPanel = new FlowPanel_0;\n  buttonPanel.element.style['paddingTop'] = '10px';\n  btnDuplicate = new Button_1('Duplicate');\n  btnLoad = new Button_1('Load Active');\n  btnDelete = new Button_1('Delete');\n  btnGenerate = new Button_1('Generate');\n  btnDuplicate.element.style['width'] = '50%';\n  btnLoad.element.style['width'] = '50%';\n  btnDelete.element.style['width'] = '50%';\n  btnGenerate.element.style['width'] = '50%';\n  $add_0(mainPanel, nameTable, mainPanel.element);\n  $add_0(mainPanel, editPanel, mainPanel.element);\n  $add_0(buttonPanel, btnLoad, buttonPanel.element);\n  $add_0(buttonPanel, btnDelete, buttonPanel.element);\n  $add_0(buttonPanel, btnDuplicate, buttonPanel.element);\n  $add_0(buttonPanel, btnGenerate, buttonPanel.element);\n  $add_0(mainPanel, buttonPanel, mainPanel.element);\n  $add_2(this.mainPanel, mainPanel);\n  $clear_0(this.libListOfConfigs);\n  $addItem(this.libListOfConfigs, 'Live Config');\n}\n\ndefineSeed(399, 394, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CtrlConfig_0);\n_.setupDisplay = function setupDisplay_0(){\n  $selectClear($getElement(this.libListOfConfigs));\n  $addItem(this.libListOfConfigs, 'Live Config');\n}\n;\nfunction CtrlLoadModules_0(modset){\n  var btnLoad, buttonPanel, editPanel, i, mainPanel;\n  CtrlPanel_0.call(this);\n  this.libListOfGPS = new ListBox_0;\n  this.modset = modset;\n  $setText_0(this.headerLabel, 'Load GPS Data');\n  mainPanel = new FlowPanel_0;\n  ($clinit_DOM() , mainPanel.element).style['paddingLeft'] = 10 + ($clinit_Style$Unit() , 'px');\n  mainPanel.element.style['paddingTop'] = '20px';\n  mainPanel.element.style['paddingRight'] = '10px';\n  new FlexTable_0;\n  editPanel = new FlowPanel_0;\n  editPanel.element.style['paddingTop'] = '20px';\n  $add_2(editPanel, new Label_1('Lists of Modules to Load:'));\n  $setWidth(this.libListOfGPS, '100%');\n  $setVisibleItemCount(this.libListOfGPS);\n  btnLoad = new Button_1('Load Module Set');\n  buttonPanel = new FlowPanel_0;\n  buttonPanel.element.style['paddingTop'] = '10px';\n  btnLoad.element.style['width'] = '100%';\n  $addDomHandler(btnLoad, new CtrlLoadModules$1_0(this, modset), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  for (i = 1; i < valueOf(modset.storage.modString.size_0).value_0 + 1; i++) {\n    $addItem(this.libListOfGPS, 'Test Case ' + i);\n  }\n  $add_2(editPanel, this.libListOfGPS);\n  $add_0(buttonPanel, btnLoad, buttonPanel.element);\n  $add_0(mainPanel, editPanel, mainPanel.element);\n  $add_0(mainPanel, buttonPanel, mainPanel.element);\n  $add_2(this.mainPanel, mainPanel);\n}\n\ndefineSeed(400, 394, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CtrlLoadModules_0);\n_.setupDisplay = function setupDisplay_1(){\n  var i;\n  $selectClear($getElement(this.libListOfGPS));\n  for (i = 1; i < valueOf(this.modset.storage.modString.size_0).value_0 + 1; i++) {\n    $addItem(this.libListOfGPS, 'Test Case ' + i);\n  }\n}\n;\nfunction CtrlLoadModules$1_0(this$0, val$modset){\n  this.this$0 = this$0;\n  this.val$modset = val$modset;\n}\n\ndefineSeed(401, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), CtrlLoadModules$1_0);\n_.onClick = function onClick_1(ev){\n  var ex, t;\n  try {\n    $clear_1(this.val$modset.modList);\n    $updateModSet(this.val$modset.storage, $getElement(this.this$0.libListOfGPS).selectedIndex);\n    t = new CtrlLoadModules$1$1_0(this.val$modset);\n    $schedule(t, 1000);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      ex = $e0;\n      alert_0(ex.getMessage());\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n;\nfunction CtrlLoadModules$1$1_0(val$modset){\n  this.val$modset = val$modset;\n  Timer_0.call(this);\n}\n\ndefineSeed(402, 42, {}, CtrlLoadModules$1$1_0);\n_.run = function run_0(){\n  $refreshDisplay(this.val$modset.gui.curCanvas);\n}\n;\nfunction CtrlWeather_0(){\n  var builder, tempLabel, url_0, visLabel, wunder;\n  CtrlPanel_0.call(this);\n  this.weatherPanel = new VerticalPanel_0;\n  this.tempWeather = new Label_1('Default Temp');\n  this.visWeather = new Label_1('Default Visiblility');\n  url_0 = 'http://api.wunderground.com/api/d52e7b82dd8d3349/conditions/q/CA/San_Francisco.json';\n  url_0 = (throwIfNull('decodedURL', url_0) , encodeURI(url_0));\n  builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET), url_0);\n  try {\n    $sendRequest(builder, new CtrlWeather$1_0(this));\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$RequestException)) {\n      alert_0(\"RequestException: Couldn't retrieve JSON\");\n    }\n     else \n      throw unwrap($e0);\n  }\n  $setText_0(this.headerLabel, 'Weather');\n  $setHorizontalAlignment_0(this.weatherPanel, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n  $setVerticalAlignment(this.weatherPanel, ($clinit_HasVerticalAlignment() , ALIGN_TOP));\n  tempLabel = new Label_1('Temperature');\n  $add_4(this.weatherPanel, tempLabel);\n  $add_4(this.weatherPanel, this.tempWeather);\n  visLabel = new Label_1('Visibility');\n  $add_4(this.weatherPanel, visLabel);\n  $add_4(this.weatherPanel, this.visWeather);\n  wunder = new Image_2('resources/images/wunder.png');\n  $setHorizontalAlignment_0(this.weatherPanel, ALIGN_CENTER);\n  $setVerticalAlignment(this.weatherPanel, ALIGN_BOTTOM);\n  ($clinit_DOM() , wunder.element).style['width'] = 80 + ($clinit_Style$Unit() , '%');\n  wunder.element.style['height'] = '40%';\n  wunder.element.style['paddingTop'] = '70%';\n  $add_4(this.weatherPanel, wunder);\n  $add_2(this.mainPanel, this.weatherPanel);\n}\n\ndefineSeed(403, 394, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CtrlWeather_0);\n_.setupDisplay = function setupDisplay_2(){\n  var jA, jB, jTry, sAll, sTemp, sVisibility, temp, visibility;\n  sAll = this.mResponse;\n  jA = ($clinit_JSONParser() , dynamicCast(parse_0(sAll), Q$JSONObject));\n  jTry = $get_1(jA, 'current_observation');\n  jB = dynamicCast(parse_0(jTry.toString$()), Q$JSONObject);\n  temp = $get_1(jB, 'temp_c');\n  sTemp = temp.toString$();\n  $setText_0(this.tempWeather, sTemp + '\\xB0c');\n  visibility = $get_1(jB, 'visibility_km');\n  sVisibility = visibility.toString$();\n  sVisibility = $substring_0(sVisibility, 1, sVisibility.length - 1);\n  $setText_0(this.visWeather, sVisibility + ' km');\n}\n;\nfunction CtrlWeather$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(404, 1, {}, CtrlWeather$1_0);\n_.onError = function onError_1(request, exception){\n  alert_0(\"onError: Couldn't retrieve JSON\");\n}\n;\n_.onResponseReceived = function onResponseReceived_1(request, response){\n  var rt;\n  if (200 == response.xmlHttpRequest.status) {\n    rt = response.xmlHttpRequest.responseText;\n    this.this$0.mResponse = rt;\n  }\n   else {\n    alert_0(\"Couldn't retrieve JSON (\" + response.xmlHttpRequest.status + ')');\n  }\n}\n;\nfunction CtrlWelcome_0(username, modset){\n  var lbLoaded, lbUserName, nasa, startButton, table;\n  CtrlPanel_0.call(this);\n  this.soundController = new SoundController_0;\n  $setText_0(this.headerLabel, 'Welcome to Mars,');\n  table = new FlexTable_0;\n  ($clinit_DOM() , table.element).style['width'] = 100 + ($clinit_Style$Unit() , '%');\n  lbUserName = new Label_1(charToString(toUpperCase(username.charCodeAt(0))) + $substring(username, 1));\n  lbUserName.element.style['width'] = '100%';\n  lbUserName.element.style['fontSize'] = '2em';\n  lbUserName.element.style['textAlign'] = ($clinit_Style$TextAlign() , 'center');\n  nasa = new Image_2('resources/images/marsPlanet.png');\n  nasa.element.style['paddingTop'] = '10%';\n  nasa.element.style['paddingLeft'] = '10%';\n  nasa.element.style['paddingRight'] = '10%';\n  nasa.element.style['width'] = '80%';\n  nasa.element.style['display'] = ($clinit_Style$Display() , 'block');\n  lbLoaded = new Label_0;\n  modset.modList.size_0 > 0?($setTextOrHtml(lbLoaded.directionalTextHelper, 'Your previous session have been loaded.') , $updateHorizontalAlignment(lbLoaded)):($setTextOrHtml(lbLoaded.directionalTextHelper, 'There was no previous session on this computer') , $updateHorizontalAlignment(lbLoaded));\n  lbLoaded.element.style['width'] = '90%';\n  lbLoaded.element.style['padding'] = '5%';\n  lbLoaded.element.style['paddingBottom'] = '10%';\n  lbLoaded.element.style['fontSize'] = '1.5em';\n  lbLoaded.element.style['textAlign'] = 'center';\n  startButton = new Button_1('Start!');\n  startButton.element.style['width'] = '50%';\n  startButton.element.style['marginLeft'] = '25%';\n  startButton.element.style['marginRight'] = '25%';\n  $addDomHandler(startButton, new CtrlWelcome$1_0(this, modset), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  $setWidget(table, 0, 0, lbUserName);\n  $setWidget(table, 1, 0, nasa);\n  $setWidget(table, 2, 0, lbLoaded);\n  $setWidget(table, 3, 0, startButton);\n  $add_2(this.mainPanel, table);\n}\n\ndefineSeed(405, 394, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CtrlWelcome_0);\n_.setupDisplay = function setupDisplay_3(){\n}\n;\nfunction CtrlWelcome$1_0(this$0, val$modset){\n  this.this$0 = this$0;\n  this.val$modset = val$modset;\n}\n\ndefineSeed(406, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), CtrlWelcome$1_0);\n_.onClick = function onClick_2(ev){\n  var e;\n  try {\n    $refreshDisplay(this.val$modset.gui.curCanvas);\n    $updateControlArea(this.val$modset.gui, this.val$modset.gui.defaultControl);\n    $enableAllButtons(this.val$modset.gui.buttonArea);\n    $runTimer(this.val$modset.gui.timerPanel, this.val$modset.storage.tendaytime);\n    $createSound(this.this$0.soundController, 'resources/audio/Map_Modules.wav');\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      e = $e0;\n      alert_0(e.getMessage());\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n;\nfunction $disableAllButtons(this$static){\n  var i;\n  for (i = 0; i < this$static.buttonList.size_0; i++) {\n    dynamicCast($get_5(this$static.buttonList, i), Q$Button).setEnabled(false);\n    $equals($getText(dynamicCast($get_5(this$static.buttonList, i), Q$Button)), 'Logout') && dynamicCast($get_5(this$static.buttonList, i), Q$Button).setEnabled(true);\n  }\n}\n\nfunction $enableAllButtons(this$static){\n  var i;\n  for (i = 0; i < this$static.buttonList.size_0; i++) {\n    dynamicCast($get_5(this$static.buttonList, i), Q$Button).setEnabled(true);\n  }\n}\n\nfunction $makeButtons(this$static, modset){\n  var adamlogout, fTable, i;\n  fTable = new FlexTable_0;\n  $add_8(this$static.buttonList, new MarsButton_0(true, 'Add Module', new CtrlAddModule_0(true, modset), modset));\n  $add_8(this$static.buttonList, new MarsButton_0(true, 'Edit Module', new CtrlAddModule_0(false, modset), modset));\n  $add_8(this$static.buttonList, new MarsButton_0(true, 'Weather', new CtrlWeather_0, modset));\n  $add_8(this$static.buttonList, new MarsButton_0(true, 'Load Data', new CtrlLoadModules_0(modset), modset));\n  $add_8(this$static.buttonList, new MarsButton_0(true, 'Configuration', new CtrlConfig_0, modset));\n  $add_8(this$static.buttonList, new MarsButton_0(false, 'Test Cases', new CtrlWelcome_0('BLANK', modset), modset));\n  adamlogout = new Button_1('Logout');\n  ($clinit_DOM() , adamlogout.element).style['width'] = '120px';\n  $addDomHandler(adamlogout, new ButtonArea$1_0, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  $add_8(this$static.buttonList, adamlogout);\n  for (i = 0; i < this$static.buttonList.size_0; i++) {\n    $setWidget(fTable, i % 3, ~~(i / 3), dynamicCast($get_5(this$static.buttonList, i), Q$Widget));\n  }\n  return fTable;\n}\n\nfunction ButtonArea_0(modset){\n  var ftable;\n  this.buttonList = new LinkedList_0;\n  new FlowPanel_0;\n  ftable = new FlexTable_0;\n  $setWidget(ftable, 0, 0, $makeButtons(this, modset));\n  $disableAllButtons(this);\n  $initWidget(this, ftable);\n}\n\ndefineSeed(407, 266, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ButtonArea_0);\nfunction ButtonArea$1_0(){\n}\n\ndefineSeed(408, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ButtonArea$1_0);\n_.onClick = function onClick_3(ev){\n  $wnd.location.reload();\n}\n;\nfunction $buildControlArea(controlPanel){\n  ($clinit_DOM() , controlPanel.element).style['height'] = '718px';\n  controlPanel.element.style['width'] = '224px';\n  controlPanel.element.style['backgroundColor'] = '#EEEEEE';\n  return controlPanel;\n}\n\nfunction $updateControlArea(this$static, control){\n  control.setupDisplay();\n  $setWidget(this$static.fTableRight, 0, 1, $buildControlArea(control));\n}\n\nfunction GUI_0(modset){\n  var panel, controlPanel, canvasPanel, bArea, ftable, statusPanel, headerLabel, imagePanel, nasa, esa;\n  this.moduleSet = modset;\n  this.fTableRight = new FlexTable_0;\n  this.user = 'default';\n  this.fTableLeft = new FlexTable_0;\n  this.timerPanel = new TimerPanel_0(modset);\n  $initWidget(this, (panel = new FlowPanel_0 , controlPanel = new FlowPanel_0 , ($clinit_DOM() , controlPanel.element).style['backgroundColor'] = '#000066' , controlPanel.element.style['height'] = '500px' , controlPanel.element.style['width'] = '224px' , this.defaultControl = new CtrlAddModule_0(false, this.moduleSet) , $setWidget(this.fTableLeft, 0, 0, (canvasPanel = new FlowPanel_0 , canvasPanel.element.style['height'] = 718 + ($clinit_Style$Unit() , 'px') , canvasPanel.element.style['width'] = '1436px' , this.curCanvas = new CnvsMap_0(this.moduleSet) , $add_2(canvasPanel, this.curCanvas) , canvasPanel)) , $setWidget(this.fTableRight, 0, 1, $buildControlArea(new CtrlWelcome_0(this.user, this.moduleSet))) , $setWidget(this.fTableLeft, 1, 0, (bArea = new FlowPanel_0 , bArea.element.style['height'] = '120px' , bArea.element.style['width'] = '1436px' , bArea.element.style['backgroundColor'] = '#DDDDDD' , this.buttonArea = new ButtonArea_0(this.moduleSet) , ftable = new FlexTable_0 , $setWidget(ftable, 0, 0, this.buttonArea) , $setWidget(ftable, 0, 1, this.timerPanel) , $add_0(bArea, ftable, bArea.element) , bArea)) , $setWidget(this.fTableRight, 1, 1, (statusPanel = new FlowPanel_0 , statusPanel.element.style['height'] = '120px' , statusPanel.element.style['width'] = '224px' , statusPanel.element.style['backgroundColor'] = '#DDDDDD' , headerLabel = new Label_1('User: ' + this.user) , headerLabel.element.style['fontSize'] = '1.2em' , imagePanel = new FlowPanel_0 , nasa = new Image_2('resources/images/NASAlogo.png') , nasa.element.style['width'] = '40%' , $setAttribute(nasa.element, 'height', 'auto') , esa = new Image_2('resources/images/esa_logo.gif') , esa.element.style['width'] = '50%' , $setAttribute(esa.element, 'height', 'auto') , $add_0(imagePanel, nasa, imagePanel.element) , $add_0(imagePanel, esa, imagePanel.element) , imagePanel.element.style['paddingLeft'] = '7%' , $add_0(statusPanel, headerLabel, statusPanel.element) , $add_0(statusPanel, imagePanel, statusPanel.element) , statusPanel)) , this.fTable = new FlexTable_0 , $setWidget(this.fTable, 0, 0, this.fTableLeft) , $setWidget(this.fTable, 0, 1, this.fTableRight) , $add_2(panel, this.fTable) , panel));\n}\n\ndefineSeed(409, 266, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), GUI_0);\nfunction Login_0(passwd, homePanel, modset){\n  var innerPanel, logLabel, loginButton, loginFail, mainPanel, passLabel, passTest, popup, userLabel, userTest, userpassPanel;\n  this.soundController = new SoundController_0;\n  mainPanel = new VerticalPanel_0;\n  $setHorizontalAlignment_0(mainPanel, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n  $setVerticalAlignment(mainPanel, ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));\n  ($clinit_DOM() , mainPanel.element).style['backgroundColor'] = '#FFFF00';\n  mainPanel.element.style['height'] = '768px';\n  mainPanel.element.style['width'] = '1024px';\n  innerPanel = new FlowPanel_0;\n  innerPanel.element.style['padding'] = 350 + ($clinit_Style$Unit() , 'px');\n  userpassPanel = new FlexTable_0;\n  userpassPanel.element.style['padding'] = '10px';\n  popup = new PopupPanel_0;\n  popup.element.style['visibility'] = 'hidden';\n  popup.element;\n  loginFail = new Label_1('Login Failed');\n  popup.element.style['backgroundColor'] = '#FF0000';\n  loginFail.element.style['padding'] = '12px';\n  loginFail.element.style['fontSize'] = '2em';\n  logLabel = new Label_1('Login Menu');\n  logLabel.element.style['fontSize'] = '2.9em';\n  logLabel.element.style['padding'] = '10px';\n  userLabel = new Label_1('Username');\n  userLabel.element.style['fontSize'] = '1.9em';\n  userLabel.element.style['padding'] = '8px';\n  userTest = new TextBox_0;\n  $setSize(userTest.element, 23);\n  passLabel = new Label_1('Password');\n  passLabel.element.style['fontSize'] = '1.9em';\n  passLabel.element.style['padding'] = '8px';\n  passTest = new PasswordTextBox_0;\n  loginButton = new Button_2(new Login$1_0(this, passTest, userTest, passwd, homePanel, modset, loginFail, popup));\n  loginButton.element.style['padding'] = '8px';\n  loginButton.element.style['width'] = '100px';\n  loginButton.element.style['height'] = '50px';\n  $add_0(innerPanel, logLabel, innerPanel.element);\n  $setWidget(userpassPanel, 0, 0, userLabel);\n  $setWidget(userpassPanel, 0, 1, userTest);\n  $setWidget(userpassPanel, 1, 0, passLabel);\n  $setWidget(userpassPanel, 1, 1, passTest);\n  $add_3(popup, loginFail);\n  $add_4(mainPanel, innerPanel);\n  $add_0(innerPanel, userpassPanel, innerPanel.element);\n  $add_0(innerPanel, loginButton, innerPanel.element);\n  $add_0(innerPanel, popup, innerPanel.element);\n  $initWidget(this, mainPanel);\n}\n\ndefineSeed(410, 266, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Login_0);\nfunction Login$1_0(this$0, val$passTest, val$userTest, val$passwd, val$homePanel, val$modset, val$loginFail, val$popup){\n  this.this$0 = this$0;\n  this.val$passTest = val$passTest;\n  this.val$userTest = val$userTest;\n  this.val$passwd = val$passwd;\n  this.val$homePanel = val$homePanel;\n  this.val$modset = val$modset;\n  this.val$loginFail = val$loginFail;\n  this.val$popup = val$popup;\n}\n\ndefineSeed(411, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), Login$1_0);\n_.onClick = function onClick_4(event_0){\n  var passCheck, userCheck;\n  passCheck = $getPropertyString($getElement(this.val$passTest), 'value');\n  userCheck = $getPropertyString($getElement(this.val$userTest), 'value');\n  if ($passChecker(this.val$passwd, userCheck, passCheck)) {\n    $remove_1(this.val$homePanel);\n    $add_2(this.val$homePanel, this.val$modset.gui);\n    $createSound(this.this$0.soundController, 'resources/audio/Log_in.wav');\n  }\n   else {\n    $setText_0(this.val$loginFail, 'Login Attempt Failed ');\n    $setVisible(this.val$popup);\n  }\n}\n;\nfunction MarsButton_0(masterEnabled, text_0, controlP, modset){\n  Button_0.call(this);\n  this.masterEnabled = masterEnabled;\n  this.control = controlP;\n  ($clinit_DOM() , this.element)['disabled'] = !masterEnabled;\n  $setInnerText(this.element, text_0);\n  this.element.style['width'] = '120px';\n  $addDomHandler(this, new MarsButton$1_0(this, modset), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n}\n\ndefineSeed(412, 263, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$Button, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), MarsButton_0);\n_.setEnabled = function setEnabled_0(newEnable){\n  this.masterEnabled && (($clinit_DOM() , this.element)['disabled'] = !newEnable , undefined);\n}\n;\n_.masterEnabled = false;\nfunction MarsButton$1_0(this$0, val$modset){\n  this.this$0 = this$0;\n  this.val$modset = val$modset;\n}\n\ndefineSeed(413, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), MarsButton$1_0);\n_.onClick = function onClick_5(ev){\n  $updateControlArea(this.val$modset.gui, this.this$0.control);\n}\n;\nfunction Starter_0(){\n  var ex;\n  FlowPanel_0.call(this);\n  this.mainPanel = new FlowPanel_0;\n  this.graphics = new GraphicPack_0;\n  this.modset = new ModuleSet_0(this.graphics);\n  this.log1 = new Login_0(new Passwd_0, this.mainPanel, this.modset);\n  try {\n    $add_2(this.mainPanel, this.log1);\n    $loadLocalStore(this.modset.storage);\n    $add_1(($clinit_RootPanel() , get_1()), this.mainPanel);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      ex = $e0;\n      $printStackTrace(ex);\n      alert_0(ex.getMessage() + '\\n');\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\ndefineSeed(414, 272, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), Starter_0);\nfunction $incrementCounter(this$static){\n  this$static.counter = valueOf(this$static.counter.value_0 - 1);\n}\n\nfunction $resetTimes(this$static){\n  this$static.startTime = fromDouble(currentTimeMillis0());\n  this$static.counter = valueOf(150);\n}\n\nfunction $runTimer(this$static, starter){\n  this$static.startTime = starter;\n  fromDouble(currentTimeMillis0());\n  this$static.counter = valueOf(toInt(div(sub_0(add_5(P249f0_longLit, this$static.startTime), fromDouble(currentTimeMillis0())), P3e8_longLit)));\n  $scheduleRepeating(this$static.time, 1000);\n  this$static.btnReset.setEnabled(true);\n}\n\nfunction TimerPanel_0(modset){\n  var timerPanel;\n  this.timerLabel = new Label_1('10-Day Alert Test');\n  this.countLabel = new Label_1('');\n  this.counter = valueOf(150);\n  this.mainPanel = new FlowPanel_0;\n  this.btnReset = new Button_1('Reset');\n  this.flasher = new TimerPanel$1_0(this);\n  this.time = new TimerPanel$2_0(this);\n  this.startTime = this.startTime;\n  $getElement(this.timerLabel).style['paddingLeft'] = 3 + ($clinit_Style$Unit() , 'px');\n  $getElement(this.countLabel).style['paddingLeft'] = '3px';\n  $getElement(this.mainPanel).style['borderStyle'] = ($clinit_Style$BorderStyle() , 'solid');\n  $getElement(this.mainPanel).style['width'] = '200px';\n  $getElement(this.mainPanel).style['height'] = '100px';\n  this.btnReset.setEnabled(false);\n  $addDomHandler(this.btnReset, new TimerPanel$3_0(this, modset), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  $add_2(this.mainPanel, (timerPanel = new FlowPanel_0 , $add_2(timerPanel, this.timerLabel) , $add_2(timerPanel, this.countLabel) , timerPanel));\n  $add_2(this.mainPanel, this.btnReset);\n  $initWidget(this, this.mainPanel);\n}\n\ndefineSeed(415, 266, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TimerPanel_0);\n_.startTime = P0_longLit;\nfunction TimerPanel$1_0(this$0){\n  this.this$0 = this$0;\n  Timer_0.call(this);\n}\n\ndefineSeed(416, 42, {}, TimerPanel$1_0);\n_.run = function run_1(){\n  $equals($getElement(this.this$0.mainPanel).style['borderColor'], 'RED')?($getElement(this.this$0.mainPanel).style['borderColor'] = 'BLACK' , undefined):($getElement(this.this$0.mainPanel).style['borderColor'] = 'RED' , undefined);\n}\n;\nfunction TimerPanel$2_0(this$0){\n  this.this$0 = this$0;\n  Timer_0.call(this);\n}\n\ndefineSeed(417, 42, {}, TimerPanel$2_0);\n_.run = function run_2(){\n  var currentTime;\n  currentTime = fromDouble(currentTimeMillis0());\n  if (gt(currentTime, add_5(this.this$0.startTime, P249f0_longLit))) {\n    $setText_0(this.this$0.countLabel, 'Check Rover!!');\n    $scheduleRepeating(this.this$0.flasher, 200);\n    $cancel_0(this);\n  }\n   else {\n    $setText_0(this.this$0.countLabel, 'You have: ' + this.this$0.counter.value_0 + ' seconds remianing until fuel check.');\n    $incrementCounter(this.this$0);\n  }\n}\n;\nfunction TimerPanel$3_0(this$0, val$modset){\n  this.this$0 = this$0;\n  this.val$modset = val$modset;\n}\n\ndefineSeed(418, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), TimerPanel$3_0);\n_.onClick = function onClick_6(ev){\n  $resetTimes(this.this$0);\n  $cancel_0(this.this$0.time);\n  $cancel_0(this.this$0.flasher);\n  $getElement(this.this$0.mainPanel).style['borderColor'] = 'BLACK';\n  $saveTenDayTime(this.val$modset.storage, fromDouble(currentTimeMillis0()));\n  $scheduleRepeating(this.this$0.time, 1000);\n}\n;\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\n",
"var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 63), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 51), _3I_classLit = createForArray('', '[I', 424), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 422), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 59), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 58), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 57), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 340), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 425), _3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForArray('[Lcom.google.gwt.lang.', 'LongLibBase$LongEmul;', 426), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 191), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 11), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 324), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 329), _3C_classLit = createForArray('', '[C', 427), _3J_classLit = createForArray('', '[J', 428), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 326), Ljava_lang_Double_2_classLit = createForClass('java.lang.', 'Double', 328), Ljava_lang_Integer_2_classLit = createForClass('java.lang.', 'Integer', 333), _3Ljava_lang_Integer_2_classLit = createForArray('[Ljava.lang.', 'Integer;', 429), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 423), Lproject_client_AAMarsProject_2_classLit = createForClass('project.client.', 'AAMarsProject', 390), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 327), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 56), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 343), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 323), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 47), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 46), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 259), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 258), Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlowPanel', 272), Lproject_gui_Starter_2_classLit = createForClass('project.gui.', 'Starter', 414), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 158), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 157), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 260), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 261), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 262), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 257), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 297), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 300), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 298), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 299), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 336), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 330), Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang.', 'ArithmeticException', 322), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 72), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 131), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 130), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 229), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 152), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 231), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 137), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 136), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 155), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 154), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 153), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 319), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 320), Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$3', 321), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 347), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 346), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 371), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 21), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 349), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 348), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 350), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 352), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 351), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 353), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 356), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 357), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 372), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 73), Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client.', 'Duration', 54), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 65), Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Flusher', 66), Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Rescuer', 67), Lcom_google_gwt_user_client_rpc_impl_SerializerBase_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl.', 'SerializerBase', 255), Lproject_client_GreetingService_1TypeSerializer_2_classLit = createForClass('project.client.', 'GreetingService_TypeSerializer', 392), Lcom_google_gwt_user_client_rpc_IncompatibleRemoteServiceException_2_classLit = createForClass('com.google.gwt.user.client.rpc.', 'IncompatibleRemoteServiceException', 245), Lcom_google_gwt_user_client_rpc_RpcTokenException_2_classLit = createForClass('com.google.gwt.user.client.rpc.', 'RpcTokenException', 247), Lcom_google_gwt_user_client_rpc_XsrfToken_2_classLit = createForClass('com.google.gwt.user.client.rpc.', 'XsrfToken', null), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 339), Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Event$NativePreviewEvent', 226), Lproject_backend_GraphicPack_2_classLit = createForClass('project.backend.', 'GraphicPack', 380), Lproject_backend_GraphicPack$1_2_classLit = createForClass('project.backend.', 'GraphicPack$1', 381), Lproject_backend_ModuleSet_2_classLit = createForClass('project.backend.', 'ModuleSet', 386), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 266), Lproject_gui_Login_2_classLit = createForClass('project.gui.', 'Login', 410), Lproject_gui_Login$1_2_classLit = createForClass('project.gui.', 'Login$1', 411), Lproject_backend_Passwd_2_classLit = createForClass('project.backend.', 'Passwd', 387), Lproject_backend_MarsStorage_2_classLit = createForClass('project.backend.', 'MarsStorage', 383), Lproject_backend_MarsStorage$1_2_classLit = createForClass('project.backend.', 'MarsStorage$1', 384), Lproject_backend_MarsStorage$2_2_classLit = createForClass('project.backend.', 'MarsStorage$2', 385), Lcom_google_gwt_user_client_impl_WindowImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImpl', 242), Lcom_google_gwt_user_client_impl_WindowImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplMozilla', 243), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 345), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 172, values_9), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 430), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 311), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 431), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 312), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 232), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 233), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 235), Lcom_google_gwt_user_client_impl_DOMImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplMozilla', 234), Lcom_google_gwt_user_client_ui_Image_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image', 279), Lcom_google_gwt_user_client_ui_Image$State_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State', 280), Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$UnclippedState', 282), Lcom_google_gwt_user_client_ui_Image$State$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State$1', 281), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 20), Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util.', 'AbstractSequentialList', 358), Ljava_util_LinkedList_2_classLit = createForClass('java.util.', 'LinkedList', 373), Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'LinkedList$ListIteratorImpl', 374), Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util.', 'LinkedList$Node', 375), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 354), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 355), Lproject_gui_GUI_2_classLit = createForClass('project.gui.', 'GUI', 409), Lproject_backend_Configuration_2_classLit = createForClass('project.backend.', 'Configuration', 379), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel', 265), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel', 310), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant', 276), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant', 277), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant', 278), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable', 269), Lcom_google_gwt_user_client_ui_FlexTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable', 268), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter', 271), Lcom_google_gwt_user_client_ui_FlexTable$FlexCellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable$FlexCellFormatter', 270), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter', 274), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1', 273), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel', 291), Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel', 290), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation', 33), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation', 295), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer', 42), Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$1', 292), Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$3', 293), Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$4', 294), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1', 303), Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation$1', 34), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler', 35), Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler$AnimationHandle', 36), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 284), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 283), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 45), Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase', 289), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase', 288), Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBox', 287), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment', 305, values_10), _3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment;', 432), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$1', 306, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$2', 307, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$3', 308, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$4', 309, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase$1', 304), Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client.', 'AutoDirectionHandler', 170), Lcom_google_gwt_user_client_ui_PasswordTextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PasswordTextBox', 286), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 264), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 263), Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit', 118, values_8), _3Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Unit;', 433), Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle', 92, values_3), _3Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$BorderStyle;', 434), Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display', 98, values_4), _3Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Display;', 435), Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow', 103, values_5), _3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Overflow;', 436), Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position', 108, values_6), _3Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Position;', 437), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 113, values_7), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 438), Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$1', 119, null), Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$2', 120, null), Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$3', 121, null), Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$4', 122, null), Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$5', 123, null), Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$6', 124, null), Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$7', 125, null), Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$8', 126, null), Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$9', 127, null), Lcom_google_gwt_dom_client_Style$BorderStyle$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$1', 93, null), Lcom_google_gwt_dom_client_Style$BorderStyle$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$2', 94, null), Lcom_google_gwt_dom_client_Style$BorderStyle$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$3', 95, null), Lcom_google_gwt_dom_client_Style$BorderStyle$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$4', 96, null), Lcom_google_gwt_dom_client_Style$BorderStyle$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$5', 97, null), Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$1', 99, null), Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$2', 100, null), Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$3', 101, null), Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$4', 102, null), Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$1', 104, null), Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$2', 105, null), Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$3', 106, null), Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$4', 107, null), Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$1', 109, null), Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$2', 110, null), Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$3', 111, null), Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$4', 112, null), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 114, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 115, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 116, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 117, null), Lcom_google_gwt_json_client_JSONValue_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONValue', 174), Lcom_google_gwt_json_client_JSONArray_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONArray', 173), Lcom_google_gwt_json_client_JSONNumber_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNumber', 178), Lcom_google_gwt_json_client_JSONString_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONString', 181), Lcom_google_gwt_json_client_JSONObject_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject', 179), Lcom_google_gwt_json_client_JSONException_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONException', 176), Lproject_backend_MarsModule_2_classLit = createForClass('project.backend.', 'MarsModule', 382), Lcom_google_gwt_storage_client_Storage_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage', 201), Lcom_google_gwt_storage_client_Storage$StorageSupportDetector_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage$StorageSupportDetector', 202), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 342), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 331), Lproject_gui_TimerPanel_2_classLit = createForClass('project.gui.', 'TimerPanel', 415), Lproject_gui_TimerPanel$1_2_classLit = createForClass('project.gui.', 'TimerPanel$1', 416), Lproject_gui_TimerPanel$2_2_classLit = createForClass('project.gui.', 'TimerPanel$2', 417), Lproject_gui_TimerPanel$3_2_classLit = createForClass('project.gui.', 'TimerPanel$3', 418), Lcom_google_gwt_http_client_RequestBuilder_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder', 160), Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$Method', 162), Lcom_google_gwt_http_client_RequestBuilder$1_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$1', 161), Lcom_google_gwt_http_client_RequestException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestException', 163), Lcom_google_gwt_http_client_Request_2_classLit = createForClass('com.google.gwt.http.client.', 'Request', 159), Lcom_google_gwt_http_client_Response_2_classLit = createForClass('com.google.gwt.http.client.', 'Response', 166), Lcom_google_gwt_http_client_ResponseImpl_2_classLit = createForClass('com.google.gwt.http.client.', 'ResponseImpl', 167), Lcom_allen_1sauer_gwt_voices_client_SoundController_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'SoundController', 12), Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit = createForEnum('com.allen_sauer.gwt.voices.client.', 'SoundType', 14, values_2), _3Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit = createForArray('[Lcom.allen_sauer.gwt.voices.client.', 'SoundType;', 439), Lcom_allen_1sauer_gwt_voices_client_SoundController$MimeTypeSupport_2_classLit = createForEnum('com.allen_sauer.gwt.voices.client.', 'SoundController$MimeTypeSupport', 13, values_1), _3Lcom_allen_1sauer_gwt_voices_client_SoundController$MimeTypeSupport_2_classLit = createForArray('[Lcom.allen_sauer.gwt.voices.client.', 'SoundController$MimeTypeSupport;', 440), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl', 236), Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl$FreeNode', 237), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 376), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 149), Lcom_google_gwt_event_logical_shared_AttachEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'AttachEvent', 148), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 332), Lcom_google_gwt_safehtml_shared_SafeUriString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeUriString', 199), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 129), Lcom_google_gwt_event_dom_client_LoadEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'LoadEvent', 139), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 135), Lproject_controlpanel_CtrlPanel_2_classLit = createForClass('project.controlpanel.', 'CtrlPanel', 394), Lproject_controlpanel_CtrlAddModule_2_classLit = createForClass('project.controlpanel.', 'CtrlAddModule', 393), Lproject_controlpanel_CtrlAddModule$1_2_classLit = createForClass('project.controlpanel.', 'CtrlAddModule$1', 395), Lproject_controlpanel_CtrlAddModule$2_2_classLit = createForClass('project.controlpanel.', 'CtrlAddModule$2', 396), Lproject_controlpanel_CtrlAddModule$3_2_classLit = createForClass('project.controlpanel.', 'CtrlAddModule$3', 397), Lproject_controlpanel_CtrlAddModule$4_2_classLit = createForClass('project.controlpanel.', 'CtrlAddModule$4', 398), Lproject_controlpanel_CtrlWelcome_2_classLit = createForClass('project.controlpanel.', 'CtrlWelcome', 405), Lproject_controlpanel_CtrlWelcome$1_2_classLit = createForClass('project.controlpanel.', 'CtrlWelcome$1', 406), Lcom_google_gwt_user_client_ui_impl_PopupImplMozilla$1_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'PopupImplMozilla$1', 315), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 267), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 134), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 133), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 132), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 19), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 377), Lcom_google_gwt_user_client_ui_ListBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListBox', 285), Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollPanel', 302), Lproject_canvaspanel_CnvsPanel_2_classLit = createForClass('project.canvaspanel.', 'CnvsPanel', 389), Lproject_canvaspanel_CnvsMap_2_classLit = createForClass('project.canvaspanel.', 'CnvsMap', 388), Lproject_gui_ButtonArea_2_classLit = createForClass('project.gui.', 'ButtonArea', 407), Lproject_gui_ButtonArea$1_2_classLit = createForClass('project.gui.', 'ButtonArea$1', 408), Lcom_google_gwt_http_client_RequestPermissionException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestPermissionException', 164), Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared.', 'AbstractRenderer', 205), Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughRenderer', 207), Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughParser', 206), Lcom_google_gwt_json_client_JSONBoolean_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONBoolean', 175), Lcom_google_gwt_json_client_JSONNull_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNull', 177), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 156), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 140), Lcom_google_gwt_event_dom_client_ChangeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ChangeEvent', 128), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent', 151), Lcom_google_gwt_canvas_client_Canvas_2_classLit = createForClass('com.google.gwt.canvas.client.', 'Canvas', 44), Lcom_google_gwt_canvas_client_Canvas$CanvasElementSupportDetector_2_classLit = createForClass('com.google.gwt.canvas.client.', 'Canvas$CanvasElementSupportDetector', 49), Lcom_google_gwt_canvas_client_Canvas$CanvasElementSupportDetectedMaybe_2_classLit = createForClass('com.google.gwt.canvas.client.', 'Canvas$CanvasElementSupportDetectedMaybe', 48), Lproject_gui_MarsButton_2_classLit = createForClass('project.gui.', 'MarsButton', 412), Lproject_gui_MarsButton$1_2_classLit = createForClass('project.gui.', 'MarsButton$1', 413), Lproject_controlpanel_CtrlWeather_2_classLit = createForClass('project.controlpanel.', 'CtrlWeather', 403), Lproject_controlpanel_CtrlWeather$1_2_classLit = createForClass('project.controlpanel.', 'CtrlWeather$1', 404), Lproject_controlpanel_CtrlLoadModules_2_classLit = createForClass('project.controlpanel.', 'CtrlLoadModules', 400), Lproject_controlpanel_CtrlLoadModules$1_2_classLit = createForClass('project.controlpanel.', 'CtrlLoadModules$1', 401), Lproject_controlpanel_CtrlLoadModules$1$1_2_classLit = createForClass('project.controlpanel.', 'CtrlLoadModules$1$1', 402), Lproject_controlpanel_CtrlConfig_2_classLit = createForClass('project.controlpanel.', 'CtrlConfig', 399), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl', 37), Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ResizeEvent', 150), Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestTimeoutException', 165), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 360), Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableCollection', 361), Ljava_util_Collections$UnmodifiableList_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableList', 363), Ljava_util_Collections$UnmodifiableMap_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap', 365), Ljava_util_Collections$UnmodifiableSet_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableSet', 367), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet', 366), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry', 369), Ljava_util_Collections$UnmodifiableRandomAccessList_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableRandomAccessList', 370), Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableCollectionIterator', 362), Ljava_util_Collections$UnmodifiableListIterator_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableListIterator', 364), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$1_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet$1', 368), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer', 40), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl', 43), _3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForArray('[Lcom.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl;', 441), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$1', 41), Lcom_google_gwt_animation_client_AnimationSchedulerImplMozilla_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplMozilla', 38), Lcom_google_gwt_animation_client_AnimationSchedulerImplMozilla$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplMozilla$AnimationHandleImpl', 39), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl', 239), Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplTimer', 241), Lcom_google_gwt_user_client_impl_HistoryImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplMozilla', 240), Lcom_google_gwt_user_client_ui_ScrollImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollImpl', 301), Lcom_google_gwt_touch_client_TouchScroller_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller', 211), Lcom_google_gwt_touch_client_TouchScroller$TemporalPoint_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$TemporalPoint', 221), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand', 218), Lcom_google_gwt_touch_client_TouchScroller$MomentumTouchRemovalCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumTouchRemovalCommand', 220), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand$1', 219), Lcom_google_gwt_touch_client_TouchScroller$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$1', 212), Lcom_google_gwt_touch_client_TouchScroller$2_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$2', 213), Lcom_google_gwt_touch_client_TouchScroller$3_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$3', 214), Lcom_google_gwt_touch_client_TouchScroller$4_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$4', 215), Lcom_google_gwt_touch_client_TouchScroller$5_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$5', 216), Lcom_google_gwt_touch_client_TouchScroller$6_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$6', 217), Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent', 143), Lcom_google_gwt_event_dom_client_TouchStartEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchStartEvent', 147), Lcom_google_gwt_event_dom_client_TouchEvent$TouchSupportDetector_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent$TouchSupportDetector', 145), Lcom_google_gwt_event_dom_client_TouchMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchMoveEvent', 146), Lcom_google_gwt_event_dom_client_TouchEndEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEndEvent', 144), Lcom_google_gwt_event_dom_client_TouchCancelEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchCancelEvent', 142), Lcom_google_gwt_touch_client_DefaultMomentum_2_classLit = createForClass('com.google.gwt.touch.client.', 'DefaultMomentum', 208), Lcom_google_gwt_touch_client_Momentum$State_2_classLit = createForClass('com.google.gwt.touch.client.', 'Momentum$State', 209), Lcom_allen_1sauer_gwt_voices_client_Sound$LoadState_2_classLit = createForEnum('com.allen_sauer.gwt.voices.client.', 'Sound$LoadState', 10, values_0), _3Lcom_allen_1sauer_gwt_voices_client_Sound$LoadState_2_classLit = createForArray('[Lcom.allen_sauer.gwt.voices.client.', 'Sound$LoadState;', 442), Lcom_google_gwt_touch_client_Point_2_classLit = createForClass('com.google.gwt.touch.client.', 'Point', 210), Lcom_allen_1sauer_gwt_voices_client_AbstractSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'AbstractSound', 3), Lcom_allen_1sauer_gwt_voices_client_FlashSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'FlashSound', 4), Lcom_allen_1sauer_gwt_voices_client_FlashSound$1_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'FlashSound$1', 5), Lcom_allen_1sauer_gwt_voices_client_FlashSound$2_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'FlashSound$2', 6), Lcom_allen_1sauer_gwt_voices_client_NativeSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'NativeSound', 9), Lcom_allen_1sauer_gwt_voices_client_Html5Sound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'Html5Sound', 7), Lcom_allen_1sauer_gwt_voices_client_Html5Sound$1_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'Html5Sound$1', 8), Lcom_allen_1sauer_gwt_voices_client_ui_FlashMovie_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.', 'FlashMovie', 23), Lcom_allen_1sauer_gwt_voices_client_ui_VoicesMovie_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.', 'VoicesMovie', 24), Lcom_allen_1sauer_gwt_voices_client_ui_VoicesMovie$1_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.', 'VoicesMovie$1', 25), Lcom_allen_1sauer_gwt_voices_client_WebAudioSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.', 'WebAudioSound', 15), Lcom_google_gwt_media_client_MediaBase_2_classLit = createForClass('com.google.gwt.media.client.', 'MediaBase', 195), Lcom_google_gwt_media_client_Audio_2_classLit = createForClass('com.google.gwt.media.client.', 'Audio', 194), Lcom_google_gwt_media_client_Audio$AudioElementSupportDetector_2_classLit = createForClass('com.google.gwt.media.client.', 'Audio$AudioElementSupportDetector', 197), Lcom_google_gwt_media_client_Audio$AudioElementSupportDetectedMaybe_2_classLit = createForClass('com.google.gwt.media.client.', 'Audio$AudioElementSupportDetectedMaybe', 196), Lcom_allen_1sauer_gwt_voices_client_handler_SoundHandlerCollection_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.handler.', 'SoundHandlerCollection', 18), Ljava_util_EventObject_2_classLit = createForClass('java.util.', 'EventObject', 17), Lcom_allen_1sauer_gwt_voices_client_handler_SoundLoadStateChangeEvent_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.handler.', 'SoundLoadStateChangeEvent', 22), Lcom_google_gwt_event_dom_client_EndedEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'EndedEvent', 138), Lcom_allen_1sauer_gwt_voices_client_handler_PlaybackCompleteEvent_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.handler.', 'PlaybackCompleteEvent', 16);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=aamarsproject-0.js\n"]);
